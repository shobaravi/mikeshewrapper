using System;
using System.Collections.Generic;
using DHI.Generic.MikeZero;

namespace MikeSheWrapper.InputFiles
{
  /// <summary>
  /// This is an autogenerated class. Do not edit. 
  /// If you want to add methods create a new partial class in another file
  /// </summary>
  public partial class Initial_Conditions: PFSMapper
  {

    private Initial_Matrix_Potential _initial_Matrix_Potential;
    private Initial_Matrix_Potential _initial_Water_Content;
    private Initial_Matrix_Potential _initial_Soil_Temperature;
    private InitialMass _initial_Concentration;

    internal Initial_Conditions(PFSSection Section)
    {
      _pfsHandle = Section;

      for (int i = 1; i <= Section.GetSectionsNo(); i++)
      {
        PFSSection sub = Section.GetSection(i);
        switch (sub.Name)
        {
        case "Initial_Matrix_Potential":
          _initial_Matrix_Potential = new Initial_Matrix_Potential(sub);
          break;
        case "Initial_Water_Content":
          _initial_Water_Content = new Initial_Matrix_Potential(sub);
          break;
        case "Initial_Soil_Temperature":
          _initial_Soil_Temperature = new Initial_Matrix_Potential(sub);
          break;
        case "Initial_Concentration":
          _initial_Concentration = new InitialMass(sub);
          break;
          default:
            _unMappedSections.Add(sub.Name);
          break;
        }
      }
    }

    public Initial_Matrix_Potential Initial_Matrix_Potential
    {
     get { return _initial_Matrix_Potential; }
    }

    public Initial_Matrix_Potential Initial_Water_Content
    {
     get { return _initial_Water_Content; }
    }

    public Initial_Matrix_Potential Initial_Soil_Temperature
    {
     get { return _initial_Soil_Temperature; }
    }

    public InitialMass Initial_Concentration
    {
     get { return _initial_Concentration; }
    }

  }
}
