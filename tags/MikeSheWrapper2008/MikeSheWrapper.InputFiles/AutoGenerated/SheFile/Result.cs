using System;
using System.Collections.Generic;
using DHI.Generic.MikeZero;

namespace MikeSheWrapper.InputFiles
{
  /// <summary>
  /// This is an autogenerated class. Do not edit. 
  /// If you want to add methods create a new partial class in another file
  /// </summary>
  public partial class Result: PFSMapper
  {

    private STRESSPERIOD_PROPPAGE _resultDetailedTS;
    private ResultViewer _resultViewer;
    private STRESSPERIOD_PROPPAGE _resultM11DetailedTS;
    private RunStatistics _runStatistics;
    private GeoScene3D _geoScene3D;

    internal Result(PFSSection Section)
    {
      _pfsHandle = Section;

      for (int i = 1; i <= Section.GetSectionsNo(); i++)
      {
        PFSSection sub = Section.GetSection(i);
        switch (sub.Name)
        {
        case "ResultDetailedTS":
          _resultDetailedTS = new STRESSPERIOD_PROPPAGE(sub);
          break;
        case "ResultViewer":
          _resultViewer = new ResultViewer(sub);
          break;
        case "ResultM11DetailedTS":
          _resultM11DetailedTS = new STRESSPERIOD_PROPPAGE(sub);
          break;
        case "RunStatistics":
          _runStatistics = new RunStatistics(sub);
          break;
        case "GeoScene3D":
          _geoScene3D = new GeoScene3D(sub);
          break;
          default:
            _unMappedSections.Add(sub.Name);
          break;
        }
      }
    }

    public STRESSPERIOD_PROPPAGE ResultDetailedTS
    {
     get { return _resultDetailedTS; }
    }

    public ResultViewer ResultViewer
    {
     get { return _resultViewer; }
    }

    public STRESSPERIOD_PROPPAGE ResultM11DetailedTS
    {
     get { return _resultM11DetailedTS; }
    }

    public RunStatistics RunStatistics
    {
     get { return _runStatistics; }
    }

    public GeoScene3D GeoScene3D
    {
     get { return _geoScene3D; }
    }

    public int Touched
    {
      get
      {
        return _pfsHandle.GetKeyword("Touched", 1).GetParameter(1).ToInt();
      }
      set
      {
        _pfsHandle.GetKeyword("Touched", 1).GetParameter(1).Value = value;
      }
    }

    public int IsDataUsedInSetup
    {
      get
      {
        return _pfsHandle.GetKeyword("IsDataUsedInSetup", 1).GetParameter(1).ToInt();
      }
      set
      {
        _pfsHandle.GetKeyword("IsDataUsedInSetup", 1).GetParameter(1).Value = value;
      }
    }

  }
}
