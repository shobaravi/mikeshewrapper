using System;
using System.Collections.Generic;
using DHI.Generic.MikeZero;

namespace MikeSheWrapper.InputFiles
{
  /// <summary>
  /// This is an autogenerated class. Do not edit. 
  /// If you want to add methods create a new partial class in another file
  /// </summary>
  public partial class UZSoilProp: PFSMapper
  {


    internal UZSoilProp(PFSSection Section)
    {
      _pfsHandle = Section;

      for (int i = 1; i <= Section.GetSectionsNo(); i++)
      {
        PFSSection sub = Section.GetSection(i);
        switch (sub.Name)
        {
          default:
            _unMappedSections.Add(sub.Name);
          break;
        }
      }
    }

    public int Touched
    {
      get
      {
        return _pfsHandle.GetKeyword("Touched", 1).GetParameter(1).ToInt();
      }
      set
      {
        _pfsHandle.GetKeyword("Touched", 1).GetParameter(1).Value = value;
      }
    }

    public int IsDataUsedInSetup
    {
      get
      {
        return _pfsHandle.GetKeyword("IsDataUsedInSetup", 1).GetParameter(1).ToInt();
      }
      set
      {
        _pfsHandle.GetKeyword("IsDataUsedInSetup", 1).GetParameter(1).Value = value;
      }
    }

    public int SoilSecNumber
    {
      get
      {
        return _pfsHandle.GetKeyword("SoilSecNumber", 1).GetParameter(1).ToInt();
      }
      set
      {
        _pfsHandle.GetKeyword("SoilSecNumber", 1).GetParameter(1).Value = value;
      }
    }

    public string GridCode
    {
      get
      {
        return _pfsHandle.GetKeyword("GridCode", 1).GetParameter(1).ToString();
      }
      set
      {
        _pfsHandle.GetKeyword("GridCode", 1).GetParameter(1).Value = value;
      }
    }

    public string Soil_ID
    {
      get
      {
        return _pfsHandle.GetKeyword("Soil_ID", 1).GetParameter(1).ToString();
      }
      set
      {
        _pfsHandle.GetKeyword("Soil_ID", 1).GetParameter(1).Value = value;
      }
    }

    public double ThetaS
    {
      get
      {
        return _pfsHandle.GetKeyword("ThetaS", 1).GetParameter(1).ToDouble();
      }
      set
      {
        _pfsHandle.GetKeyword("ThetaS", 1).GetParameter(1).Value = value;
      }
    }

    public double ThetaFC
    {
      get
      {
        return _pfsHandle.GetKeyword("ThetaFC", 1).GetParameter(1).ToDouble();
      }
      set
      {
        _pfsHandle.GetKeyword("ThetaFC", 1).GetParameter(1).Value = value;
      }
    }

    public double ThetaWP
    {
      get
      {
        return _pfsHandle.GetKeyword("ThetaWP", 1).GetParameter(1).ToDouble();
      }
      set
      {
        _pfsHandle.GetKeyword("ThetaWP", 1).GetParameter(1).Value = value;
      }
    }

    public double Kint
    {
      get
      {
        return _pfsHandle.GetKeyword("Kint", 1).GetParameter(1).ToDouble();
      }
      set
      {
        _pfsHandle.GetKeyword("Kint", 1).GetParameter(1).Value = value;
      }
    }

    public double BYP
    {
      get
      {
        return _pfsHandle.GetKeyword("BYP", 1).GetParameter(1).ToDouble();
      }
      set
      {
        _pfsHandle.GetKeyword("BYP", 1).GetParameter(1).Value = value;
      }
    }

    public double THR1
    {
      get
      {
        return _pfsHandle.GetKeyword("THR1", 1).GetParameter(1).ToDouble();
      }
      set
      {
        _pfsHandle.GetKeyword("THR1", 1).GetParameter(1).Value = value;
      }
    }

    public double THR2
    {
      get
      {
        return _pfsHandle.GetKeyword("THR2", 1).GetParameter(1).ToDouble();
      }
      set
      {
        _pfsHandle.GetKeyword("THR2", 1).GetParameter(1).Value = value;
      }
    }

    public int SoilSuction
    {
      get
      {
        return _pfsHandle.GetKeyword("SoilSuction", 1).GetParameter(1).ToInt();
      }
      set
      {
        _pfsHandle.GetKeyword("SoilSuction", 1).GetParameter(1).Value = value;
      }
    }

  }
}
