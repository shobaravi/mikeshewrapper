//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace MikeSheWrapper.InputDataPreparation {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("NovanaTables")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class NovanaTables : global::System.Data.DataSet {
        
        private PejlingerOutputDataTable tablePejlingerOutput;
        
        private PejlingerTotalDataTable tablePejlingerTotal;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public NovanaTables() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected NovanaTables(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["PejlingerOutput"] != null)) {
                    base.Tables.Add(new PejlingerOutputDataTable(ds.Tables["PejlingerOutput"]));
                }
                if ((ds.Tables["PejlingerTotal"] != null)) {
                    base.Tables.Add(new PejlingerTotalDataTable(ds.Tables["PejlingerTotal"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PejlingerOutputDataTable PejlingerOutput {
            get {
                return this.tablePejlingerOutput;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PejlingerTotalDataTable PejlingerTotal {
            get {
                return this.tablePejlingerTotal;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            NovanaTables cln = ((NovanaTables)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["PejlingerOutput"] != null)) {
                    base.Tables.Add(new PejlingerOutputDataTable(ds.Tables["PejlingerOutput"]));
                }
                if ((ds.Tables["PejlingerTotal"] != null)) {
                    base.Tables.Add(new PejlingerTotalDataTable(ds.Tables["PejlingerTotal"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablePejlingerOutput = ((PejlingerOutputDataTable)(base.Tables["PejlingerOutput"]));
            if ((initTable == true)) {
                if ((this.tablePejlingerOutput != null)) {
                    this.tablePejlingerOutput.InitVars();
                }
            }
            this.tablePejlingerTotal = ((PejlingerTotalDataTable)(base.Tables["PejlingerTotal"]));
            if ((initTable == true)) {
                if ((this.tablePejlingerTotal != null)) {
                    this.tablePejlingerTotal.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "NovanaTables";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/NovanaTables.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablePejlingerOutput = new PejlingerOutputDataTable();
            base.Tables.Add(this.tablePejlingerOutput);
            this.tablePejlingerTotal = new PejlingerTotalDataTable();
            base.Tables.Add(this.tablePejlingerTotal);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePejlingerOutput() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePejlingerTotal() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            NovanaTables ds = new NovanaTables();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void PejlingerOutputRowChangeEventHandler(object sender, PejlingerOutputRowChangeEvent e);
        
        public delegate void PejlingerTotalRowChangeEventHandler(object sender, PejlingerTotalRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PejlingerOutputDataTable : global::System.Data.TypedTableBase<PejlingerOutputRow> {
            
            private global::System.Data.DataColumn columnNOVANAID;
            
            private global::System.Data.DataColumn columnXUTM;
            
            private global::System.Data.DataColumn columnYUTM;
            
            private global::System.Data.DataColumn columnJUPKOTE;
            
            private global::System.Data.DataColumn columnLOCATION;
            
            private global::System.Data.DataColumn columnNUMBEROFOB;
            
            private global::System.Data.DataColumn columnINTAKETOP;
            
            private global::System.Data.DataColumn columnINTAKEBOT;
            
            private global::System.Data.DataColumn columnSTARTDATO;
            
            private global::System.Data.DataColumn columnENDDATO;
            
            private global::System.Data.DataColumn columnMEANOBS;
            
            private global::System.Data.DataColumn columnMINOBS;
            
            private global::System.Data.DataColumn columnMAXOBS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PejlingerOutputDataTable() {
                this.TableName = "PejlingerOutput";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PejlingerOutputDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PejlingerOutputDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NOVANAIDColumn {
                get {
                    return this.columnNOVANAID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn XUTMColumn {
                get {
                    return this.columnXUTM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YUTMColumn {
                get {
                    return this.columnYUTM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JUPKOTEColumn {
                get {
                    return this.columnJUPKOTE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LOCATIONColumn {
                get {
                    return this.columnLOCATION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NUMBEROFOBColumn {
                get {
                    return this.columnNUMBEROFOB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INTAKETOPColumn {
                get {
                    return this.columnINTAKETOP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INTAKEBOTColumn {
                get {
                    return this.columnINTAKEBOT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STARTDATOColumn {
                get {
                    return this.columnSTARTDATO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ENDDATOColumn {
                get {
                    return this.columnENDDATO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MEANOBSColumn {
                get {
                    return this.columnMEANOBS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MINOBSColumn {
                get {
                    return this.columnMINOBS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAXOBSColumn {
                get {
                    return this.columnMAXOBS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PejlingerOutputRow this[int index] {
                get {
                    return ((PejlingerOutputRow)(this.Rows[index]));
                }
            }
            
            public event PejlingerOutputRowChangeEventHandler PejlingerOutputRowChanging;
            
            public event PejlingerOutputRowChangeEventHandler PejlingerOutputRowChanged;
            
            public event PejlingerOutputRowChangeEventHandler PejlingerOutputRowDeleting;
            
            public event PejlingerOutputRowChangeEventHandler PejlingerOutputRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPejlingerOutputRow(PejlingerOutputRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PejlingerOutputRow AddPejlingerOutputRow(string NOVANAID, double XUTM, double YUTM, double JUPKOTE, string LOCATION, int NUMBEROFOB, double INTAKETOP, double INTAKEBOT, System.DateTime STARTDATO, System.DateTime ENDDATO, double MEANOBS, double MINOBS, double MAXOBS) {
                PejlingerOutputRow rowPejlingerOutputRow = ((PejlingerOutputRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NOVANAID,
                        XUTM,
                        YUTM,
                        JUPKOTE,
                        LOCATION,
                        NUMBEROFOB,
                        INTAKETOP,
                        INTAKEBOT,
                        STARTDATO,
                        ENDDATO,
                        MEANOBS,
                        MINOBS,
                        MAXOBS};
                rowPejlingerOutputRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPejlingerOutputRow);
                return rowPejlingerOutputRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PejlingerOutputDataTable cln = ((PejlingerOutputDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PejlingerOutputDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNOVANAID = base.Columns["NOVANAID"];
                this.columnXUTM = base.Columns["XUTM"];
                this.columnYUTM = base.Columns["YUTM"];
                this.columnJUPKOTE = base.Columns["JUPKOTE"];
                this.columnLOCATION = base.Columns["LOCATION"];
                this.columnNUMBEROFOB = base.Columns["NUMBEROFOB"];
                this.columnINTAKETOP = base.Columns["INTAKETOP"];
                this.columnINTAKEBOT = base.Columns["INTAKEBOT"];
                this.columnSTARTDATO = base.Columns["STARTDATO"];
                this.columnENDDATO = base.Columns["ENDDATO"];
                this.columnMEANOBS = base.Columns["MEANOBS"];
                this.columnMINOBS = base.Columns["MINOBS"];
                this.columnMAXOBS = base.Columns["MAXOBS"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNOVANAID = new global::System.Data.DataColumn("NOVANAID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOVANAID);
                this.columnXUTM = new global::System.Data.DataColumn("XUTM", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnXUTM);
                this.columnYUTM = new global::System.Data.DataColumn("YUTM", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYUTM);
                this.columnJUPKOTE = new global::System.Data.DataColumn("JUPKOTE", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJUPKOTE);
                this.columnLOCATION = new global::System.Data.DataColumn("LOCATION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOCATION);
                this.columnNUMBEROFOB = new global::System.Data.DataColumn("NUMBEROFOB", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUMBEROFOB);
                this.columnINTAKETOP = new global::System.Data.DataColumn("INTAKETOP", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINTAKETOP);
                this.columnINTAKEBOT = new global::System.Data.DataColumn("INTAKEBOT", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINTAKEBOT);
                this.columnSTARTDATO = new global::System.Data.DataColumn("STARTDATO", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTARTDATO);
                this.columnENDDATO = new global::System.Data.DataColumn("ENDDATO", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnENDDATO);
                this.columnMEANOBS = new global::System.Data.DataColumn("MEANOBS", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMEANOBS);
                this.columnMINOBS = new global::System.Data.DataColumn("MINOBS", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMINOBS);
                this.columnMAXOBS = new global::System.Data.DataColumn("MAXOBS", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAXOBS);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PejlingerOutputRow NewPejlingerOutputRow() {
                return ((PejlingerOutputRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PejlingerOutputRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PejlingerOutputRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PejlingerOutputRowChanged != null)) {
                    this.PejlingerOutputRowChanged(this, new PejlingerOutputRowChangeEvent(((PejlingerOutputRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PejlingerOutputRowChanging != null)) {
                    this.PejlingerOutputRowChanging(this, new PejlingerOutputRowChangeEvent(((PejlingerOutputRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PejlingerOutputRowDeleted != null)) {
                    this.PejlingerOutputRowDeleted(this, new PejlingerOutputRowChangeEvent(((PejlingerOutputRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PejlingerOutputRowDeleting != null)) {
                    this.PejlingerOutputRowDeleting(this, new PejlingerOutputRowChangeEvent(((PejlingerOutputRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePejlingerOutputRow(PejlingerOutputRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NovanaTables ds = new NovanaTables();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PejlingerOutputDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PejlingerTotalDataTable : global::System.Data.TypedTableBase<PejlingerTotalRow> {
            
            private global::System.Data.DataColumn columnCOUNT;
            
            private global::System.Data.DataColumn columnNOVANAID;
            
            private global::System.Data.DataColumn columnBORID;
            
            private global::System.Data.DataColumn columnJUPFEEDB;
            
            private global::System.Data.DataColumn columnXUTM;
            
            private global::System.Data.DataColumn columnYUTM;
            
            private global::System.Data.DataColumn columnKOORTYPE;
            
            private global::System.Data.DataColumn columnJUPKOTE;
            
            private global::System.Data.DataColumn columnBOREHOLENO;
            
            private global::System.Data.DataColumn columnINTAKENO;
            
            private global::System.Data.DataColumn columnWATLEVELNO;
            
            private global::System.Data.DataColumn columnLOCATION;
            
            private global::System.Data.DataColumn columnBOTROCK;
            
            private global::System.Data.DataColumn columnDRILENDATE;
            
            private global::System.Data.DataColumn columnABANDONDAT;
            
            private global::System.Data.DataColumn columnABANDCAUSE;
            
            private global::System.Data.DataColumn columnDRILLDEPTH;
            
            private global::System.Data.DataColumn columnCASIBOT;
            
            private global::System.Data.DataColumn columnPURPOSE;
            
            private global::System.Data.DataColumn columnUSE;
            
            private global::System.Data.DataColumn columnINTAKETOP;
            
            private global::System.Data.DataColumn columnINTAKEBOT;
            
            private global::System.Data.DataColumn columnINTSTDATE2;
            
            private global::System.Data.DataColumn columnINTENDATE2;
            
            private global::System.Data.DataColumn columnRESROCK;
            
            private global::System.Data.DataColumn columnREFPOINT;
            
            private global::System.Data.DataColumn columnANTINT_B;
            
            private global::System.Data.DataColumn columnAKTAAR;
            
            private global::System.Data.DataColumn columnAKTDAGE;
            
            private global::System.Data.DataColumn columnPEJPRAAR;
            
            private global::System.Data.DataColumn columnANTPEJ;
            
            private global::System.Data.DataColumn columnKALK;
            
            private global::System.Data.DataColumn columnSUMSAND;
            
            private global::System.Data.DataColumn columnMINDATO;
            
            private global::System.Data.DataColumn columnMAXDATO;
            
            private global::System.Data.DataColumn columnINTAKTOPK;
            
            private global::System.Data.DataColumn columnINTAKMIDK;
            
            private global::System.Data.DataColumn columnINTAKBOTK;
            
            private global::System.Data.DataColumn columnDTMKOTE;
            
            private global::System.Data.DataColumn columnKOTEDIFF;
            
            private global::System.Data.DataColumn columnTOPJUST;
            
            private global::System.Data.DataColumn columnMIDTJUST;
            
            private global::System.Data.DataColumn columnBUNDJUST;
            
            private global::System.Data.DataColumn columnET_DIST;
            
            private global::System.Data.DataColumn columnNOVID_INDV;
            
            private global::System.Data.DataColumn columnINDV_LYR;
            
            private global::System.Data.DataColumn columnINDVPR_A;
            
            private global::System.Data.DataColumn columnINT_DIST;
            
            private global::System.Data.DataColumn columnINT_CLOSE;
            
            private global::System.Data.DataColumn columnMODELAREA;
            
            private global::System.Data.DataColumn columnEC1;
            
            private global::System.Data.DataColumn columnEC2;
            
            private global::System.Data.DataColumn columnEC3;
            
            private global::System.Data.DataColumn columnEC4;
            
            private global::System.Data.DataColumn columnEC5;
            
            private global::System.Data.DataColumn columnQC_EC5;
            
            private global::System.Data.DataColumn columnEC6;
            
            private global::System.Data.DataColumn columnEC_KOMMENT;
            
            private global::System.Data.DataColumn columnEC_ALL;
            
            private global::System.Data.DataColumn columnORG_LAYER;
            
            private global::System.Data.DataColumn columnLAYER;
            
            private global::System.Data.DataColumn columnNEW_LAYER;
            
            private global::System.Data.DataColumn columnLER_LAYER;
            
            private global::System.Data.DataColumn columnLAYER_ALL;
            
            private global::System.Data.DataColumn columnOK_LAYER;
            
            private global::System.Data.DataColumn columnOK_KOMMENT;
            
            private global::System.Data.DataColumn columnMIDT_FNL;
            
            private global::System.Data.DataColumn columnMEANPEJ;
            
            private global::System.Data.DataColumn columnMINPEJ;
            
            private global::System.Data.DataColumn columnMAXPEJ;
            
            private global::System.Data.DataColumn columnPEJTS;
            
            private global::System.Data.DataColumn columnFRASORT;
            
            private global::System.Data.DataColumn columnBERELAG;
            
            private global::System.Data.DataColumn columnMC_LAYJUST;
            
            private global::System.Data.DataColumn columnMC_LAYKOM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PejlingerTotalDataTable() {
                this.TableName = "PejlingerTotal";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PejlingerTotalDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PejlingerTotalDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COUNTColumn {
                get {
                    return this.columnCOUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NOVANAIDColumn {
                get {
                    return this.columnNOVANAID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BORIDColumn {
                get {
                    return this.columnBORID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JUPFEEDBColumn {
                get {
                    return this.columnJUPFEEDB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn XUTMColumn {
                get {
                    return this.columnXUTM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YUTMColumn {
                get {
                    return this.columnYUTM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KOORTYPEColumn {
                get {
                    return this.columnKOORTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JUPKOTEColumn {
                get {
                    return this.columnJUPKOTE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BOREHOLENOColumn {
                get {
                    return this.columnBOREHOLENO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INTAKENOColumn {
                get {
                    return this.columnINTAKENO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WATLEVELNOColumn {
                get {
                    return this.columnWATLEVELNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LOCATIONColumn {
                get {
                    return this.columnLOCATION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BOTROCKColumn {
                get {
                    return this.columnBOTROCK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DRILENDATEColumn {
                get {
                    return this.columnDRILENDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ABANDONDATColumn {
                get {
                    return this.columnABANDONDAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ABANDCAUSEColumn {
                get {
                    return this.columnABANDCAUSE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DRILLDEPTHColumn {
                get {
                    return this.columnDRILLDEPTH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CASIBOTColumn {
                get {
                    return this.columnCASIBOT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PURPOSEColumn {
                get {
                    return this.columnPURPOSE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USEColumn {
                get {
                    return this.columnUSE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INTAKETOPColumn {
                get {
                    return this.columnINTAKETOP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INTAKEBOTColumn {
                get {
                    return this.columnINTAKEBOT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INTSTDATE2Column {
                get {
                    return this.columnINTSTDATE2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INTENDATE2Column {
                get {
                    return this.columnINTENDATE2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RESROCKColumn {
                get {
                    return this.columnRESROCK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn REFPOINTColumn {
                get {
                    return this.columnREFPOINT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ANTINT_BColumn {
                get {
                    return this.columnANTINT_B;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AKTAARColumn {
                get {
                    return this.columnAKTAAR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AKTDAGEColumn {
                get {
                    return this.columnAKTDAGE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PEJPRAARColumn {
                get {
                    return this.columnPEJPRAAR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ANTPEJColumn {
                get {
                    return this.columnANTPEJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KALKColumn {
                get {
                    return this.columnKALK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SUMSANDColumn {
                get {
                    return this.columnSUMSAND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MINDATOColumn {
                get {
                    return this.columnMINDATO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAXDATOColumn {
                get {
                    return this.columnMAXDATO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INTAKTOPKColumn {
                get {
                    return this.columnINTAKTOPK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INTAKMIDKColumn {
                get {
                    return this.columnINTAKMIDK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INTAKBOTKColumn {
                get {
                    return this.columnINTAKBOTK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DTMKOTEColumn {
                get {
                    return this.columnDTMKOTE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KOTEDIFFColumn {
                get {
                    return this.columnKOTEDIFF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TOPJUSTColumn {
                get {
                    return this.columnTOPJUST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MIDTJUSTColumn {
                get {
                    return this.columnMIDTJUST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BUNDJUSTColumn {
                get {
                    return this.columnBUNDJUST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ET_DISTColumn {
                get {
                    return this.columnET_DIST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NOVID_INDVColumn {
                get {
                    return this.columnNOVID_INDV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INDV_LYRColumn {
                get {
                    return this.columnINDV_LYR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INDVPR_AColumn {
                get {
                    return this.columnINDVPR_A;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INT_DISTColumn {
                get {
                    return this.columnINT_DIST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INT_CLOSEColumn {
                get {
                    return this.columnINT_CLOSE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MODELAREAColumn {
                get {
                    return this.columnMODELAREA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EC1Column {
                get {
                    return this.columnEC1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EC2Column {
                get {
                    return this.columnEC2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EC3Column {
                get {
                    return this.columnEC3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EC4Column {
                get {
                    return this.columnEC4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EC5Column {
                get {
                    return this.columnEC5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QC_EC5Column {
                get {
                    return this.columnQC_EC5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EC6Column {
                get {
                    return this.columnEC6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EC_KOMMENTColumn {
                get {
                    return this.columnEC_KOMMENT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EC_ALLColumn {
                get {
                    return this.columnEC_ALL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ORG_LAYERColumn {
                get {
                    return this.columnORG_LAYER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LAYERColumn {
                get {
                    return this.columnLAYER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NEW_LAYERColumn {
                get {
                    return this.columnNEW_LAYER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LER_LAYERColumn {
                get {
                    return this.columnLER_LAYER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LAYER_ALLColumn {
                get {
                    return this.columnLAYER_ALL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OK_LAYERColumn {
                get {
                    return this.columnOK_LAYER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OK_KOMMENTColumn {
                get {
                    return this.columnOK_KOMMENT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MIDT_FNLColumn {
                get {
                    return this.columnMIDT_FNL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MEANPEJColumn {
                get {
                    return this.columnMEANPEJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MINPEJColumn {
                get {
                    return this.columnMINPEJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAXPEJColumn {
                get {
                    return this.columnMAXPEJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PEJTSColumn {
                get {
                    return this.columnPEJTS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FRASORTColumn {
                get {
                    return this.columnFRASORT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BERELAGColumn {
                get {
                    return this.columnBERELAG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MC_LAYJUSTColumn {
                get {
                    return this.columnMC_LAYJUST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MC_LAYKOMColumn {
                get {
                    return this.columnMC_LAYKOM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PejlingerTotalRow this[int index] {
                get {
                    return ((PejlingerTotalRow)(this.Rows[index]));
                }
            }
            
            public event PejlingerTotalRowChangeEventHandler PejlingerTotalRowChanging;
            
            public event PejlingerTotalRowChangeEventHandler PejlingerTotalRowChanged;
            
            public event PejlingerTotalRowChangeEventHandler PejlingerTotalRowDeleting;
            
            public event PejlingerTotalRowChangeEventHandler PejlingerTotalRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPejlingerTotalRow(PejlingerTotalRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PejlingerTotalRow AddPejlingerTotalRow(
                        int COUNT, 
                        string NOVANAID, 
                        int BORID, 
                        string JUPFEEDB, 
                        double XUTM, 
                        double YUTM, 
                        double KOORTYPE, 
                        double JUPKOTE, 
                        string BOREHOLENO, 
                        int INTAKENO, 
                        int WATLEVELNO, 
                        string LOCATION, 
                        string BOTROCK, 
                        System.DateTime DRILENDATE, 
                        System.DateTime ABANDONDAT, 
                        string ABANDCAUSE, 
                        double DRILLDEPTH, 
                        double CASIBOT, 
                        string PURPOSE, 
                        string USE, 
                        double INTAKETOP, 
                        double INTAKEBOT, 
                        System.DateTime INTSTDATE2, 
                        System.DateTime INTENDATE2, 
                        string RESROCK, 
                        string REFPOINT, 
                        int ANTINT_B, 
                        int AKTAAR, 
                        int AKTDAGE, 
                        double PEJPRAAR, 
                        int ANTPEJ, 
                        double KALK, 
                        double SUMSAND, 
                        System.DateTime MINDATO, 
                        System.DateTime MAXDATO, 
                        double INTAKTOPK, 
                        double INTAKMIDK, 
                        double INTAKBOTK, 
                        double DTMKOTE, 
                        double KOTEDIFF, 
                        double TOPJUST, 
                        double MIDTJUST, 
                        double BUNDJUST, 
                        double ET_DIST, 
                        string NOVID_INDV, 
                        double INDV_LYR, 
                        double INDVPR_A, 
                        double INT_DIST, 
                        double INT_CLOSE, 
                        int MODELAREA, 
                        int EC1, 
                        int EC2, 
                        int EC3, 
                        int EC4, 
                        int EC5, 
                        int QC_EC5, 
                        int EC6, 
                        string EC_KOMMENT, 
                        int EC_ALL, 
                        int ORG_LAYER, 
                        int LAYER, 
                        int NEW_LAYER, 
                        int LER_LAYER, 
                        int LAYER_ALL, 
                        int OK_LAYER, 
                        string OK_KOMMENT, 
                        int MIDT_FNL, 
                        double MEANPEJ, 
                        double MINPEJ, 
                        double MAXPEJ, 
                        int PEJTS, 
                        int FRASORT, 
                        int BERELAG, 
                        int MC_LAYJUST, 
                        string MC_LAYKOM) {
                PejlingerTotalRow rowPejlingerTotalRow = ((PejlingerTotalRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        COUNT,
                        NOVANAID,
                        BORID,
                        JUPFEEDB,
                        XUTM,
                        YUTM,
                        KOORTYPE,
                        JUPKOTE,
                        BOREHOLENO,
                        INTAKENO,
                        WATLEVELNO,
                        LOCATION,
                        BOTROCK,
                        DRILENDATE,
                        ABANDONDAT,
                        ABANDCAUSE,
                        DRILLDEPTH,
                        CASIBOT,
                        PURPOSE,
                        USE,
                        INTAKETOP,
                        INTAKEBOT,
                        INTSTDATE2,
                        INTENDATE2,
                        RESROCK,
                        REFPOINT,
                        ANTINT_B,
                        AKTAAR,
                        AKTDAGE,
                        PEJPRAAR,
                        ANTPEJ,
                        KALK,
                        SUMSAND,
                        MINDATO,
                        MAXDATO,
                        INTAKTOPK,
                        INTAKMIDK,
                        INTAKBOTK,
                        DTMKOTE,
                        KOTEDIFF,
                        TOPJUST,
                        MIDTJUST,
                        BUNDJUST,
                        ET_DIST,
                        NOVID_INDV,
                        INDV_LYR,
                        INDVPR_A,
                        INT_DIST,
                        INT_CLOSE,
                        MODELAREA,
                        EC1,
                        EC2,
                        EC3,
                        EC4,
                        EC5,
                        QC_EC5,
                        EC6,
                        EC_KOMMENT,
                        EC_ALL,
                        ORG_LAYER,
                        LAYER,
                        NEW_LAYER,
                        LER_LAYER,
                        LAYER_ALL,
                        OK_LAYER,
                        OK_KOMMENT,
                        MIDT_FNL,
                        MEANPEJ,
                        MINPEJ,
                        MAXPEJ,
                        PEJTS,
                        FRASORT,
                        BERELAG,
                        MC_LAYJUST,
                        MC_LAYKOM};
                rowPejlingerTotalRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPejlingerTotalRow);
                return rowPejlingerTotalRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PejlingerTotalDataTable cln = ((PejlingerTotalDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PejlingerTotalDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCOUNT = base.Columns["COUNT"];
                this.columnNOVANAID = base.Columns["NOVANAID"];
                this.columnBORID = base.Columns["BORID"];
                this.columnJUPFEEDB = base.Columns["JUPFEEDB"];
                this.columnXUTM = base.Columns["XUTM"];
                this.columnYUTM = base.Columns["YUTM"];
                this.columnKOORTYPE = base.Columns["KOORTYPE"];
                this.columnJUPKOTE = base.Columns["JUPKOTE"];
                this.columnBOREHOLENO = base.Columns["BOREHOLENO"];
                this.columnINTAKENO = base.Columns["INTAKENO"];
                this.columnWATLEVELNO = base.Columns["WATLEVELNO"];
                this.columnLOCATION = base.Columns["LOCATION"];
                this.columnBOTROCK = base.Columns["BOTROCK"];
                this.columnDRILENDATE = base.Columns["DRILENDATE"];
                this.columnABANDONDAT = base.Columns["ABANDONDAT"];
                this.columnABANDCAUSE = base.Columns["ABANDCAUSE"];
                this.columnDRILLDEPTH = base.Columns["DRILLDEPTH"];
                this.columnCASIBOT = base.Columns["CASIBOT"];
                this.columnPURPOSE = base.Columns["PURPOSE"];
                this.columnUSE = base.Columns["USE"];
                this.columnINTAKETOP = base.Columns["INTAKETOP"];
                this.columnINTAKEBOT = base.Columns["INTAKEBOT"];
                this.columnINTSTDATE2 = base.Columns["INTSTDATE2"];
                this.columnINTENDATE2 = base.Columns["INTENDATE2"];
                this.columnRESROCK = base.Columns["RESROCK"];
                this.columnREFPOINT = base.Columns["REFPOINT"];
                this.columnANTINT_B = base.Columns["ANTINT_B"];
                this.columnAKTAAR = base.Columns["AKTAAR"];
                this.columnAKTDAGE = base.Columns["AKTDAGE"];
                this.columnPEJPRAAR = base.Columns["PEJPRAAR"];
                this.columnANTPEJ = base.Columns["ANTPEJ"];
                this.columnKALK = base.Columns["KALK"];
                this.columnSUMSAND = base.Columns["SUMSAND"];
                this.columnMINDATO = base.Columns["MINDATO"];
                this.columnMAXDATO = base.Columns["MAXDATO"];
                this.columnINTAKTOPK = base.Columns["INTAKTOPK"];
                this.columnINTAKMIDK = base.Columns["INTAKMIDK"];
                this.columnINTAKBOTK = base.Columns["INTAKBOTK"];
                this.columnDTMKOTE = base.Columns["DTMKOTE"];
                this.columnKOTEDIFF = base.Columns["KOTEDIFF"];
                this.columnTOPJUST = base.Columns["TOPJUST"];
                this.columnMIDTJUST = base.Columns["MIDTJUST"];
                this.columnBUNDJUST = base.Columns["BUNDJUST"];
                this.columnET_DIST = base.Columns["ET_DIST"];
                this.columnNOVID_INDV = base.Columns["NOVID_INDV"];
                this.columnINDV_LYR = base.Columns["INDV_LYR"];
                this.columnINDVPR_A = base.Columns["INDVPR_A"];
                this.columnINT_DIST = base.Columns["INT_DIST"];
                this.columnINT_CLOSE = base.Columns["INT_CLOSE"];
                this.columnMODELAREA = base.Columns["MODELAREA"];
                this.columnEC1 = base.Columns["EC1"];
                this.columnEC2 = base.Columns["EC2"];
                this.columnEC3 = base.Columns["EC3"];
                this.columnEC4 = base.Columns["EC4"];
                this.columnEC5 = base.Columns["EC5"];
                this.columnQC_EC5 = base.Columns["QC_EC5"];
                this.columnEC6 = base.Columns["EC6"];
                this.columnEC_KOMMENT = base.Columns["EC_KOMMENT"];
                this.columnEC_ALL = base.Columns["EC_ALL"];
                this.columnORG_LAYER = base.Columns["ORG_LAYER"];
                this.columnLAYER = base.Columns["LAYER"];
                this.columnNEW_LAYER = base.Columns["NEW_LAYER"];
                this.columnLER_LAYER = base.Columns["LER_LAYER"];
                this.columnLAYER_ALL = base.Columns["LAYER_ALL"];
                this.columnOK_LAYER = base.Columns["OK_LAYER"];
                this.columnOK_KOMMENT = base.Columns["OK_KOMMENT"];
                this.columnMIDT_FNL = base.Columns["MIDT_FNL"];
                this.columnMEANPEJ = base.Columns["MEANPEJ"];
                this.columnMINPEJ = base.Columns["MINPEJ"];
                this.columnMAXPEJ = base.Columns["MAXPEJ"];
                this.columnPEJTS = base.Columns["PEJTS"];
                this.columnFRASORT = base.Columns["FRASORT"];
                this.columnBERELAG = base.Columns["BERELAG"];
                this.columnMC_LAYJUST = base.Columns["MC_LAYJUST"];
                this.columnMC_LAYKOM = base.Columns["MC_LAYKOM"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCOUNT = new global::System.Data.DataColumn("COUNT", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOUNT);
                this.columnNOVANAID = new global::System.Data.DataColumn("NOVANAID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOVANAID);
                this.columnBORID = new global::System.Data.DataColumn("BORID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBORID);
                this.columnJUPFEEDB = new global::System.Data.DataColumn("JUPFEEDB", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJUPFEEDB);
                this.columnXUTM = new global::System.Data.DataColumn("XUTM", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnXUTM);
                this.columnYUTM = new global::System.Data.DataColumn("YUTM", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYUTM);
                this.columnKOORTYPE = new global::System.Data.DataColumn("KOORTYPE", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKOORTYPE);
                this.columnJUPKOTE = new global::System.Data.DataColumn("JUPKOTE", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJUPKOTE);
                this.columnBOREHOLENO = new global::System.Data.DataColumn("BOREHOLENO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBOREHOLENO);
                this.columnINTAKENO = new global::System.Data.DataColumn("INTAKENO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINTAKENO);
                this.columnWATLEVELNO = new global::System.Data.DataColumn("WATLEVELNO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWATLEVELNO);
                this.columnLOCATION = new global::System.Data.DataColumn("LOCATION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOCATION);
                this.columnBOTROCK = new global::System.Data.DataColumn("BOTROCK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBOTROCK);
                this.columnDRILENDATE = new global::System.Data.DataColumn("DRILENDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDRILENDATE);
                this.columnABANDONDAT = new global::System.Data.DataColumn("ABANDONDAT", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnABANDONDAT);
                this.columnABANDCAUSE = new global::System.Data.DataColumn("ABANDCAUSE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnABANDCAUSE);
                this.columnDRILLDEPTH = new global::System.Data.DataColumn("DRILLDEPTH", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDRILLDEPTH);
                this.columnCASIBOT = new global::System.Data.DataColumn("CASIBOT", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCASIBOT);
                this.columnPURPOSE = new global::System.Data.DataColumn("PURPOSE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPURPOSE);
                this.columnUSE = new global::System.Data.DataColumn("USE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSE);
                this.columnINTAKETOP = new global::System.Data.DataColumn("INTAKETOP", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINTAKETOP);
                this.columnINTAKEBOT = new global::System.Data.DataColumn("INTAKEBOT", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINTAKEBOT);
                this.columnINTSTDATE2 = new global::System.Data.DataColumn("INTSTDATE2", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINTSTDATE2);
                this.columnINTENDATE2 = new global::System.Data.DataColumn("INTENDATE2", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINTENDATE2);
                this.columnRESROCK = new global::System.Data.DataColumn("RESROCK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRESROCK);
                this.columnREFPOINT = new global::System.Data.DataColumn("REFPOINT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREFPOINT);
                this.columnANTINT_B = new global::System.Data.DataColumn("ANTINT_B", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnANTINT_B);
                this.columnAKTAAR = new global::System.Data.DataColumn("AKTAAR", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAKTAAR);
                this.columnAKTDAGE = new global::System.Data.DataColumn("AKTDAGE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAKTDAGE);
                this.columnPEJPRAAR = new global::System.Data.DataColumn("PEJPRAAR", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPEJPRAAR);
                this.columnANTPEJ = new global::System.Data.DataColumn("ANTPEJ", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnANTPEJ);
                this.columnKALK = new global::System.Data.DataColumn("KALK", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKALK);
                this.columnSUMSAND = new global::System.Data.DataColumn("SUMSAND", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUMSAND);
                this.columnMINDATO = new global::System.Data.DataColumn("MINDATO", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMINDATO);
                this.columnMAXDATO = new global::System.Data.DataColumn("MAXDATO", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAXDATO);
                this.columnINTAKTOPK = new global::System.Data.DataColumn("INTAKTOPK", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINTAKTOPK);
                this.columnINTAKMIDK = new global::System.Data.DataColumn("INTAKMIDK", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINTAKMIDK);
                this.columnINTAKBOTK = new global::System.Data.DataColumn("INTAKBOTK", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINTAKBOTK);
                this.columnDTMKOTE = new global::System.Data.DataColumn("DTMKOTE", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDTMKOTE);
                this.columnKOTEDIFF = new global::System.Data.DataColumn("KOTEDIFF", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKOTEDIFF);
                this.columnTOPJUST = new global::System.Data.DataColumn("TOPJUST", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOPJUST);
                this.columnMIDTJUST = new global::System.Data.DataColumn("MIDTJUST", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMIDTJUST);
                this.columnBUNDJUST = new global::System.Data.DataColumn("BUNDJUST", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBUNDJUST);
                this.columnET_DIST = new global::System.Data.DataColumn("ET_DIST", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnET_DIST);
                this.columnNOVID_INDV = new global::System.Data.DataColumn("NOVID_INDV", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOVID_INDV);
                this.columnINDV_LYR = new global::System.Data.DataColumn("INDV_LYR", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINDV_LYR);
                this.columnINDVPR_A = new global::System.Data.DataColumn("INDVPR_A", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINDVPR_A);
                this.columnINT_DIST = new global::System.Data.DataColumn("INT_DIST", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINT_DIST);
                this.columnINT_CLOSE = new global::System.Data.DataColumn("INT_CLOSE", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINT_CLOSE);
                this.columnMODELAREA = new global::System.Data.DataColumn("MODELAREA", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODELAREA);
                this.columnEC1 = new global::System.Data.DataColumn("EC1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEC1);
                this.columnEC2 = new global::System.Data.DataColumn("EC2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEC2);
                this.columnEC3 = new global::System.Data.DataColumn("EC3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEC3);
                this.columnEC4 = new global::System.Data.DataColumn("EC4", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEC4);
                this.columnEC5 = new global::System.Data.DataColumn("EC5", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEC5);
                this.columnQC_EC5 = new global::System.Data.DataColumn("QC_EC5", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQC_EC5);
                this.columnEC6 = new global::System.Data.DataColumn("EC6", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEC6);
                this.columnEC_KOMMENT = new global::System.Data.DataColumn("EC_KOMMENT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEC_KOMMENT);
                this.columnEC_ALL = new global::System.Data.DataColumn("EC_ALL", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEC_ALL);
                this.columnORG_LAYER = new global::System.Data.DataColumn("ORG_LAYER", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORG_LAYER);
                this.columnLAYER = new global::System.Data.DataColumn("LAYER", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLAYER);
                this.columnNEW_LAYER = new global::System.Data.DataColumn("NEW_LAYER", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNEW_LAYER);
                this.columnLER_LAYER = new global::System.Data.DataColumn("LER_LAYER", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLER_LAYER);
                this.columnLAYER_ALL = new global::System.Data.DataColumn("LAYER_ALL", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLAYER_ALL);
                this.columnOK_LAYER = new global::System.Data.DataColumn("OK_LAYER", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOK_LAYER);
                this.columnOK_KOMMENT = new global::System.Data.DataColumn("OK_KOMMENT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOK_KOMMENT);
                this.columnMIDT_FNL = new global::System.Data.DataColumn("MIDT_FNL", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMIDT_FNL);
                this.columnMEANPEJ = new global::System.Data.DataColumn("MEANPEJ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMEANPEJ);
                this.columnMINPEJ = new global::System.Data.DataColumn("MINPEJ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMINPEJ);
                this.columnMAXPEJ = new global::System.Data.DataColumn("MAXPEJ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAXPEJ);
                this.columnPEJTS = new global::System.Data.DataColumn("PEJTS", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPEJTS);
                this.columnFRASORT = new global::System.Data.DataColumn("FRASORT", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFRASORT);
                this.columnBERELAG = new global::System.Data.DataColumn("BERELAG", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBERELAG);
                this.columnMC_LAYJUST = new global::System.Data.DataColumn("MC_LAYJUST", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMC_LAYJUST);
                this.columnMC_LAYKOM = new global::System.Data.DataColumn("MC_LAYKOM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMC_LAYKOM);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PejlingerTotalRow NewPejlingerTotalRow() {
                return ((PejlingerTotalRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PejlingerTotalRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PejlingerTotalRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PejlingerTotalRowChanged != null)) {
                    this.PejlingerTotalRowChanged(this, new PejlingerTotalRowChangeEvent(((PejlingerTotalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PejlingerTotalRowChanging != null)) {
                    this.PejlingerTotalRowChanging(this, new PejlingerTotalRowChangeEvent(((PejlingerTotalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PejlingerTotalRowDeleted != null)) {
                    this.PejlingerTotalRowDeleted(this, new PejlingerTotalRowChangeEvent(((PejlingerTotalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PejlingerTotalRowDeleting != null)) {
                    this.PejlingerTotalRowDeleting(this, new PejlingerTotalRowChangeEvent(((PejlingerTotalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePejlingerTotalRow(PejlingerTotalRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NovanaTables ds = new NovanaTables();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PejlingerTotalDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PejlingerOutputRow : global::System.Data.DataRow {
            
            private PejlingerOutputDataTable tablePejlingerOutput;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PejlingerOutputRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePejlingerOutput = ((PejlingerOutputDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NOVANAID {
                get {
                    try {
                        return ((string)(this[this.tablePejlingerOutput.NOVANAIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NOVANAID\' in table \'PejlingerOutput\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerOutput.NOVANAIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double XUTM {
                get {
                    try {
                        return ((double)(this[this.tablePejlingerOutput.XUTMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'XUTM\' in table \'PejlingerOutput\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerOutput.XUTMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double YUTM {
                get {
                    try {
                        return ((double)(this[this.tablePejlingerOutput.YUTMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'YUTM\' in table \'PejlingerOutput\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerOutput.YUTMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double JUPKOTE {
                get {
                    try {
                        return ((double)(this[this.tablePejlingerOutput.JUPKOTEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JUPKOTE\' in table \'PejlingerOutput\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerOutput.JUPKOTEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LOCATION {
                get {
                    try {
                        return ((string)(this[this.tablePejlingerOutput.LOCATIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOCATION\' in table \'PejlingerOutput\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerOutput.LOCATIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NUMBEROFOB {
                get {
                    try {
                        return ((int)(this[this.tablePejlingerOutput.NUMBEROFOBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NUMBEROFOB\' in table \'PejlingerOutput\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerOutput.NUMBEROFOBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double INTAKETOP {
                get {
                    try {
                        return ((double)(this[this.tablePejlingerOutput.INTAKETOPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INTAKETOP\' in table \'PejlingerOutput\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerOutput.INTAKETOPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double INTAKEBOT {
                get {
                    try {
                        return ((double)(this[this.tablePejlingerOutput.INTAKEBOTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INTAKEBOT\' in table \'PejlingerOutput\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerOutput.INTAKEBOTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime STARTDATO {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePejlingerOutput.STARTDATOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STARTDATO\' in table \'PejlingerOutput\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerOutput.STARTDATOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ENDDATO {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePejlingerOutput.ENDDATOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ENDDATO\' in table \'PejlingerOutput\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerOutput.ENDDATOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MEANOBS {
                get {
                    try {
                        return ((double)(this[this.tablePejlingerOutput.MEANOBSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MEANOBS\' in table \'PejlingerOutput\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerOutput.MEANOBSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MINOBS {
                get {
                    try {
                        return ((double)(this[this.tablePejlingerOutput.MINOBSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MINOBS\' in table \'PejlingerOutput\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerOutput.MINOBSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MAXOBS {
                get {
                    try {
                        return ((double)(this[this.tablePejlingerOutput.MAXOBSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAXOBS\' in table \'PejlingerOutput\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerOutput.MAXOBSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNOVANAIDNull() {
                return this.IsNull(this.tablePejlingerOutput.NOVANAIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNOVANAIDNull() {
                this[this.tablePejlingerOutput.NOVANAIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsXUTMNull() {
                return this.IsNull(this.tablePejlingerOutput.XUTMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetXUTMNull() {
                this[this.tablePejlingerOutput.XUTMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsYUTMNull() {
                return this.IsNull(this.tablePejlingerOutput.YUTMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetYUTMNull() {
                this[this.tablePejlingerOutput.YUTMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJUPKOTENull() {
                return this.IsNull(this.tablePejlingerOutput.JUPKOTEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJUPKOTENull() {
                this[this.tablePejlingerOutput.JUPKOTEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLOCATIONNull() {
                return this.IsNull(this.tablePejlingerOutput.LOCATIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLOCATIONNull() {
                this[this.tablePejlingerOutput.LOCATIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNUMBEROFOBNull() {
                return this.IsNull(this.tablePejlingerOutput.NUMBEROFOBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNUMBEROFOBNull() {
                this[this.tablePejlingerOutput.NUMBEROFOBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINTAKETOPNull() {
                return this.IsNull(this.tablePejlingerOutput.INTAKETOPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINTAKETOPNull() {
                this[this.tablePejlingerOutput.INTAKETOPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINTAKEBOTNull() {
                return this.IsNull(this.tablePejlingerOutput.INTAKEBOTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINTAKEBOTNull() {
                this[this.tablePejlingerOutput.INTAKEBOTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTARTDATONull() {
                return this.IsNull(this.tablePejlingerOutput.STARTDATOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTARTDATONull() {
                this[this.tablePejlingerOutput.STARTDATOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsENDDATONull() {
                return this.IsNull(this.tablePejlingerOutput.ENDDATOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetENDDATONull() {
                this[this.tablePejlingerOutput.ENDDATOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMEANOBSNull() {
                return this.IsNull(this.tablePejlingerOutput.MEANOBSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMEANOBSNull() {
                this[this.tablePejlingerOutput.MEANOBSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMINOBSNull() {
                return this.IsNull(this.tablePejlingerOutput.MINOBSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMINOBSNull() {
                this[this.tablePejlingerOutput.MINOBSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAXOBSNull() {
                return this.IsNull(this.tablePejlingerOutput.MAXOBSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAXOBSNull() {
                this[this.tablePejlingerOutput.MAXOBSColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PejlingerTotalRow : global::System.Data.DataRow {
            
            private PejlingerTotalDataTable tablePejlingerTotal;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PejlingerTotalRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePejlingerTotal = ((PejlingerTotalDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COUNT {
                get {
                    try {
                        return ((int)(this[this.tablePejlingerTotal.COUNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COUNT\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.COUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NOVANAID {
                get {
                    try {
                        return ((string)(this[this.tablePejlingerTotal.NOVANAIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NOVANAID\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.NOVANAIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BORID {
                get {
                    try {
                        return ((int)(this[this.tablePejlingerTotal.BORIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BORID\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.BORIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JUPFEEDB {
                get {
                    try {
                        return ((string)(this[this.tablePejlingerTotal.JUPFEEDBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JUPFEEDB\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.JUPFEEDBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double XUTM {
                get {
                    try {
                        return ((double)(this[this.tablePejlingerTotal.XUTMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'XUTM\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.XUTMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double YUTM {
                get {
                    try {
                        return ((double)(this[this.tablePejlingerTotal.YUTMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'YUTM\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.YUTMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double KOORTYPE {
                get {
                    try {
                        return ((double)(this[this.tablePejlingerTotal.KOORTYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KOORTYPE\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.KOORTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double JUPKOTE {
                get {
                    try {
                        return ((double)(this[this.tablePejlingerTotal.JUPKOTEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JUPKOTE\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.JUPKOTEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BOREHOLENO {
                get {
                    try {
                        return ((string)(this[this.tablePejlingerTotal.BOREHOLENOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BOREHOLENO\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.BOREHOLENOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int INTAKENO {
                get {
                    try {
                        return ((int)(this[this.tablePejlingerTotal.INTAKENOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INTAKENO\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.INTAKENOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int WATLEVELNO {
                get {
                    try {
                        return ((int)(this[this.tablePejlingerTotal.WATLEVELNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WATLEVELNO\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.WATLEVELNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LOCATION {
                get {
                    try {
                        return ((string)(this[this.tablePejlingerTotal.LOCATIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOCATION\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.LOCATIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BOTROCK {
                get {
                    try {
                        return ((string)(this[this.tablePejlingerTotal.BOTROCKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BOTROCK\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.BOTROCKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DRILENDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePejlingerTotal.DRILENDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DRILENDATE\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.DRILENDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ABANDONDAT {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePejlingerTotal.ABANDONDATColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ABANDONDAT\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.ABANDONDATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ABANDCAUSE {
                get {
                    try {
                        return ((string)(this[this.tablePejlingerTotal.ABANDCAUSEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ABANDCAUSE\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.ABANDCAUSEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DRILLDEPTH {
                get {
                    try {
                        return ((double)(this[this.tablePejlingerTotal.DRILLDEPTHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DRILLDEPTH\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.DRILLDEPTHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double CASIBOT {
                get {
                    try {
                        return ((double)(this[this.tablePejlingerTotal.CASIBOTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CASIBOT\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.CASIBOTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PURPOSE {
                get {
                    try {
                        return ((string)(this[this.tablePejlingerTotal.PURPOSEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PURPOSE\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.PURPOSEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USE {
                get {
                    try {
                        return ((string)(this[this.tablePejlingerTotal.USEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USE\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.USEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double INTAKETOP {
                get {
                    try {
                        return ((double)(this[this.tablePejlingerTotal.INTAKETOPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INTAKETOP\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.INTAKETOPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double INTAKEBOT {
                get {
                    try {
                        return ((double)(this[this.tablePejlingerTotal.INTAKEBOTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INTAKEBOT\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.INTAKEBOTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime INTSTDATE2 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePejlingerTotal.INTSTDATE2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INTSTDATE2\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.INTSTDATE2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime INTENDATE2 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePejlingerTotal.INTENDATE2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INTENDATE2\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.INTENDATE2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RESROCK {
                get {
                    try {
                        return ((string)(this[this.tablePejlingerTotal.RESROCKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RESROCK\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.RESROCKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string REFPOINT {
                get {
                    try {
                        return ((string)(this[this.tablePejlingerTotal.REFPOINTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REFPOINT\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.REFPOINTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ANTINT_B {
                get {
                    try {
                        return ((int)(this[this.tablePejlingerTotal.ANTINT_BColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ANTINT_B\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.ANTINT_BColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AKTAAR {
                get {
                    try {
                        return ((int)(this[this.tablePejlingerTotal.AKTAARColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AKTAAR\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.AKTAARColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AKTDAGE {
                get {
                    try {
                        return ((int)(this[this.tablePejlingerTotal.AKTDAGEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AKTDAGE\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.AKTDAGEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PEJPRAAR {
                get {
                    try {
                        return ((double)(this[this.tablePejlingerTotal.PEJPRAARColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PEJPRAAR\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.PEJPRAARColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ANTPEJ {
                get {
                    try {
                        return ((int)(this[this.tablePejlingerTotal.ANTPEJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ANTPEJ\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.ANTPEJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double KALK {
                get {
                    try {
                        return ((double)(this[this.tablePejlingerTotal.KALKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KALK\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.KALKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SUMSAND {
                get {
                    try {
                        return ((double)(this[this.tablePejlingerTotal.SUMSANDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SUMSAND\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.SUMSANDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MINDATO {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePejlingerTotal.MINDATOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MINDATO\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.MINDATOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MAXDATO {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePejlingerTotal.MAXDATOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAXDATO\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.MAXDATOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double INTAKTOPK {
                get {
                    try {
                        return ((double)(this[this.tablePejlingerTotal.INTAKTOPKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INTAKTOPK\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.INTAKTOPKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double INTAKMIDK {
                get {
                    try {
                        return ((double)(this[this.tablePejlingerTotal.INTAKMIDKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INTAKMIDK\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.INTAKMIDKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double INTAKBOTK {
                get {
                    try {
                        return ((double)(this[this.tablePejlingerTotal.INTAKBOTKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INTAKBOTK\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.INTAKBOTKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DTMKOTE {
                get {
                    try {
                        return ((double)(this[this.tablePejlingerTotal.DTMKOTEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DTMKOTE\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.DTMKOTEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double KOTEDIFF {
                get {
                    try {
                        return ((double)(this[this.tablePejlingerTotal.KOTEDIFFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KOTEDIFF\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.KOTEDIFFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double TOPJUST {
                get {
                    try {
                        return ((double)(this[this.tablePejlingerTotal.TOPJUSTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TOPJUST\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.TOPJUSTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MIDTJUST {
                get {
                    try {
                        return ((double)(this[this.tablePejlingerTotal.MIDTJUSTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MIDTJUST\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.MIDTJUSTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double BUNDJUST {
                get {
                    try {
                        return ((double)(this[this.tablePejlingerTotal.BUNDJUSTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BUNDJUST\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.BUNDJUSTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ET_DIST {
                get {
                    try {
                        return ((double)(this[this.tablePejlingerTotal.ET_DISTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ET_DIST\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.ET_DISTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NOVID_INDV {
                get {
                    try {
                        return ((string)(this[this.tablePejlingerTotal.NOVID_INDVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NOVID_INDV\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.NOVID_INDVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double INDV_LYR {
                get {
                    try {
                        return ((double)(this[this.tablePejlingerTotal.INDV_LYRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INDV_LYR\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.INDV_LYRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double INDVPR_A {
                get {
                    try {
                        return ((double)(this[this.tablePejlingerTotal.INDVPR_AColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INDVPR_A\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.INDVPR_AColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double INT_DIST {
                get {
                    try {
                        return ((double)(this[this.tablePejlingerTotal.INT_DISTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INT_DIST\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.INT_DISTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double INT_CLOSE {
                get {
                    try {
                        return ((double)(this[this.tablePejlingerTotal.INT_CLOSEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INT_CLOSE\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.INT_CLOSEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MODELAREA {
                get {
                    try {
                        return ((int)(this[this.tablePejlingerTotal.MODELAREAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MODELAREA\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.MODELAREAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EC1 {
                get {
                    try {
                        return ((int)(this[this.tablePejlingerTotal.EC1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EC1\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.EC1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EC2 {
                get {
                    try {
                        return ((int)(this[this.tablePejlingerTotal.EC2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EC2\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.EC2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EC3 {
                get {
                    try {
                        return ((int)(this[this.tablePejlingerTotal.EC3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EC3\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.EC3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EC4 {
                get {
                    try {
                        return ((int)(this[this.tablePejlingerTotal.EC4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EC4\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.EC4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EC5 {
                get {
                    try {
                        return ((int)(this[this.tablePejlingerTotal.EC5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EC5\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.EC5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int QC_EC5 {
                get {
                    try {
                        return ((int)(this[this.tablePejlingerTotal.QC_EC5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QC_EC5\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.QC_EC5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EC6 {
                get {
                    try {
                        return ((int)(this[this.tablePejlingerTotal.EC6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EC6\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.EC6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EC_KOMMENT {
                get {
                    try {
                        return ((string)(this[this.tablePejlingerTotal.EC_KOMMENTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EC_KOMMENT\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.EC_KOMMENTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EC_ALL {
                get {
                    try {
                        return ((int)(this[this.tablePejlingerTotal.EC_ALLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EC_ALL\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.EC_ALLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ORG_LAYER {
                get {
                    try {
                        return ((int)(this[this.tablePejlingerTotal.ORG_LAYERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ORG_LAYER\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.ORG_LAYERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LAYER {
                get {
                    try {
                        return ((int)(this[this.tablePejlingerTotal.LAYERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LAYER\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.LAYERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NEW_LAYER {
                get {
                    try {
                        return ((int)(this[this.tablePejlingerTotal.NEW_LAYERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NEW_LAYER\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.NEW_LAYERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LER_LAYER {
                get {
                    try {
                        return ((int)(this[this.tablePejlingerTotal.LER_LAYERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LER_LAYER\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.LER_LAYERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LAYER_ALL {
                get {
                    try {
                        return ((int)(this[this.tablePejlingerTotal.LAYER_ALLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LAYER_ALL\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.LAYER_ALLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OK_LAYER {
                get {
                    try {
                        return ((int)(this[this.tablePejlingerTotal.OK_LAYERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OK_LAYER\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.OK_LAYERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OK_KOMMENT {
                get {
                    try {
                        return ((string)(this[this.tablePejlingerTotal.OK_KOMMENTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OK_KOMMENT\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.OK_KOMMENTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MIDT_FNL {
                get {
                    try {
                        return ((int)(this[this.tablePejlingerTotal.MIDT_FNLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MIDT_FNL\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.MIDT_FNLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MEANPEJ {
                get {
                    try {
                        return ((double)(this[this.tablePejlingerTotal.MEANPEJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MEANPEJ\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.MEANPEJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MINPEJ {
                get {
                    try {
                        return ((double)(this[this.tablePejlingerTotal.MINPEJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MINPEJ\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.MINPEJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MAXPEJ {
                get {
                    try {
                        return ((double)(this[this.tablePejlingerTotal.MAXPEJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAXPEJ\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.MAXPEJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PEJTS {
                get {
                    try {
                        return ((int)(this[this.tablePejlingerTotal.PEJTSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PEJTS\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.PEJTSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FRASORT {
                get {
                    try {
                        return ((int)(this[this.tablePejlingerTotal.FRASORTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FRASORT\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.FRASORTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BERELAG {
                get {
                    try {
                        return ((int)(this[this.tablePejlingerTotal.BERELAGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BERELAG\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.BERELAGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MC_LAYJUST {
                get {
                    try {
                        return ((int)(this[this.tablePejlingerTotal.MC_LAYJUSTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MC_LAYJUST\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.MC_LAYJUSTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MC_LAYKOM {
                get {
                    try {
                        return ((string)(this[this.tablePejlingerTotal.MC_LAYKOMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MC_LAYKOM\' in table \'PejlingerTotal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePejlingerTotal.MC_LAYKOMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOUNTNull() {
                return this.IsNull(this.tablePejlingerTotal.COUNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOUNTNull() {
                this[this.tablePejlingerTotal.COUNTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNOVANAIDNull() {
                return this.IsNull(this.tablePejlingerTotal.NOVANAIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNOVANAIDNull() {
                this[this.tablePejlingerTotal.NOVANAIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBORIDNull() {
                return this.IsNull(this.tablePejlingerTotal.BORIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBORIDNull() {
                this[this.tablePejlingerTotal.BORIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJUPFEEDBNull() {
                return this.IsNull(this.tablePejlingerTotal.JUPFEEDBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJUPFEEDBNull() {
                this[this.tablePejlingerTotal.JUPFEEDBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsXUTMNull() {
                return this.IsNull(this.tablePejlingerTotal.XUTMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetXUTMNull() {
                this[this.tablePejlingerTotal.XUTMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsYUTMNull() {
                return this.IsNull(this.tablePejlingerTotal.YUTMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetYUTMNull() {
                this[this.tablePejlingerTotal.YUTMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKOORTYPENull() {
                return this.IsNull(this.tablePejlingerTotal.KOORTYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKOORTYPENull() {
                this[this.tablePejlingerTotal.KOORTYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJUPKOTENull() {
                return this.IsNull(this.tablePejlingerTotal.JUPKOTEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJUPKOTENull() {
                this[this.tablePejlingerTotal.JUPKOTEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBOREHOLENONull() {
                return this.IsNull(this.tablePejlingerTotal.BOREHOLENOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBOREHOLENONull() {
                this[this.tablePejlingerTotal.BOREHOLENOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINTAKENONull() {
                return this.IsNull(this.tablePejlingerTotal.INTAKENOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINTAKENONull() {
                this[this.tablePejlingerTotal.INTAKENOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWATLEVELNONull() {
                return this.IsNull(this.tablePejlingerTotal.WATLEVELNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWATLEVELNONull() {
                this[this.tablePejlingerTotal.WATLEVELNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLOCATIONNull() {
                return this.IsNull(this.tablePejlingerTotal.LOCATIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLOCATIONNull() {
                this[this.tablePejlingerTotal.LOCATIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBOTROCKNull() {
                return this.IsNull(this.tablePejlingerTotal.BOTROCKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBOTROCKNull() {
                this[this.tablePejlingerTotal.BOTROCKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDRILENDATENull() {
                return this.IsNull(this.tablePejlingerTotal.DRILENDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDRILENDATENull() {
                this[this.tablePejlingerTotal.DRILENDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsABANDONDATNull() {
                return this.IsNull(this.tablePejlingerTotal.ABANDONDATColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetABANDONDATNull() {
                this[this.tablePejlingerTotal.ABANDONDATColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsABANDCAUSENull() {
                return this.IsNull(this.tablePejlingerTotal.ABANDCAUSEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetABANDCAUSENull() {
                this[this.tablePejlingerTotal.ABANDCAUSEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDRILLDEPTHNull() {
                return this.IsNull(this.tablePejlingerTotal.DRILLDEPTHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDRILLDEPTHNull() {
                this[this.tablePejlingerTotal.DRILLDEPTHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCASIBOTNull() {
                return this.IsNull(this.tablePejlingerTotal.CASIBOTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCASIBOTNull() {
                this[this.tablePejlingerTotal.CASIBOTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPURPOSENull() {
                return this.IsNull(this.tablePejlingerTotal.PURPOSEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPURPOSENull() {
                this[this.tablePejlingerTotal.PURPOSEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSENull() {
                return this.IsNull(this.tablePejlingerTotal.USEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSENull() {
                this[this.tablePejlingerTotal.USEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINTAKETOPNull() {
                return this.IsNull(this.tablePejlingerTotal.INTAKETOPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINTAKETOPNull() {
                this[this.tablePejlingerTotal.INTAKETOPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINTAKEBOTNull() {
                return this.IsNull(this.tablePejlingerTotal.INTAKEBOTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINTAKEBOTNull() {
                this[this.tablePejlingerTotal.INTAKEBOTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINTSTDATE2Null() {
                return this.IsNull(this.tablePejlingerTotal.INTSTDATE2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINTSTDATE2Null() {
                this[this.tablePejlingerTotal.INTSTDATE2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINTENDATE2Null() {
                return this.IsNull(this.tablePejlingerTotal.INTENDATE2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINTENDATE2Null() {
                this[this.tablePejlingerTotal.INTENDATE2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRESROCKNull() {
                return this.IsNull(this.tablePejlingerTotal.RESROCKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRESROCKNull() {
                this[this.tablePejlingerTotal.RESROCKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREFPOINTNull() {
                return this.IsNull(this.tablePejlingerTotal.REFPOINTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREFPOINTNull() {
                this[this.tablePejlingerTotal.REFPOINTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsANTINT_BNull() {
                return this.IsNull(this.tablePejlingerTotal.ANTINT_BColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetANTINT_BNull() {
                this[this.tablePejlingerTotal.ANTINT_BColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAKTAARNull() {
                return this.IsNull(this.tablePejlingerTotal.AKTAARColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAKTAARNull() {
                this[this.tablePejlingerTotal.AKTAARColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAKTDAGENull() {
                return this.IsNull(this.tablePejlingerTotal.AKTDAGEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAKTDAGENull() {
                this[this.tablePejlingerTotal.AKTDAGEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPEJPRAARNull() {
                return this.IsNull(this.tablePejlingerTotal.PEJPRAARColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPEJPRAARNull() {
                this[this.tablePejlingerTotal.PEJPRAARColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsANTPEJNull() {
                return this.IsNull(this.tablePejlingerTotal.ANTPEJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetANTPEJNull() {
                this[this.tablePejlingerTotal.ANTPEJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKALKNull() {
                return this.IsNull(this.tablePejlingerTotal.KALKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKALKNull() {
                this[this.tablePejlingerTotal.KALKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSUMSANDNull() {
                return this.IsNull(this.tablePejlingerTotal.SUMSANDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSUMSANDNull() {
                this[this.tablePejlingerTotal.SUMSANDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMINDATONull() {
                return this.IsNull(this.tablePejlingerTotal.MINDATOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMINDATONull() {
                this[this.tablePejlingerTotal.MINDATOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAXDATONull() {
                return this.IsNull(this.tablePejlingerTotal.MAXDATOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAXDATONull() {
                this[this.tablePejlingerTotal.MAXDATOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINTAKTOPKNull() {
                return this.IsNull(this.tablePejlingerTotal.INTAKTOPKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINTAKTOPKNull() {
                this[this.tablePejlingerTotal.INTAKTOPKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINTAKMIDKNull() {
                return this.IsNull(this.tablePejlingerTotal.INTAKMIDKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINTAKMIDKNull() {
                this[this.tablePejlingerTotal.INTAKMIDKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINTAKBOTKNull() {
                return this.IsNull(this.tablePejlingerTotal.INTAKBOTKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINTAKBOTKNull() {
                this[this.tablePejlingerTotal.INTAKBOTKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDTMKOTENull() {
                return this.IsNull(this.tablePejlingerTotal.DTMKOTEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDTMKOTENull() {
                this[this.tablePejlingerTotal.DTMKOTEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKOTEDIFFNull() {
                return this.IsNull(this.tablePejlingerTotal.KOTEDIFFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKOTEDIFFNull() {
                this[this.tablePejlingerTotal.KOTEDIFFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTOPJUSTNull() {
                return this.IsNull(this.tablePejlingerTotal.TOPJUSTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTOPJUSTNull() {
                this[this.tablePejlingerTotal.TOPJUSTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMIDTJUSTNull() {
                return this.IsNull(this.tablePejlingerTotal.MIDTJUSTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMIDTJUSTNull() {
                this[this.tablePejlingerTotal.MIDTJUSTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBUNDJUSTNull() {
                return this.IsNull(this.tablePejlingerTotal.BUNDJUSTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBUNDJUSTNull() {
                this[this.tablePejlingerTotal.BUNDJUSTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsET_DISTNull() {
                return this.IsNull(this.tablePejlingerTotal.ET_DISTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetET_DISTNull() {
                this[this.tablePejlingerTotal.ET_DISTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNOVID_INDVNull() {
                return this.IsNull(this.tablePejlingerTotal.NOVID_INDVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNOVID_INDVNull() {
                this[this.tablePejlingerTotal.NOVID_INDVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINDV_LYRNull() {
                return this.IsNull(this.tablePejlingerTotal.INDV_LYRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINDV_LYRNull() {
                this[this.tablePejlingerTotal.INDV_LYRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINDVPR_ANull() {
                return this.IsNull(this.tablePejlingerTotal.INDVPR_AColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINDVPR_ANull() {
                this[this.tablePejlingerTotal.INDVPR_AColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINT_DISTNull() {
                return this.IsNull(this.tablePejlingerTotal.INT_DISTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINT_DISTNull() {
                this[this.tablePejlingerTotal.INT_DISTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINT_CLOSENull() {
                return this.IsNull(this.tablePejlingerTotal.INT_CLOSEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINT_CLOSENull() {
                this[this.tablePejlingerTotal.INT_CLOSEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMODELAREANull() {
                return this.IsNull(this.tablePejlingerTotal.MODELAREAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMODELAREANull() {
                this[this.tablePejlingerTotal.MODELAREAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEC1Null() {
                return this.IsNull(this.tablePejlingerTotal.EC1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEC1Null() {
                this[this.tablePejlingerTotal.EC1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEC2Null() {
                return this.IsNull(this.tablePejlingerTotal.EC2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEC2Null() {
                this[this.tablePejlingerTotal.EC2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEC3Null() {
                return this.IsNull(this.tablePejlingerTotal.EC3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEC3Null() {
                this[this.tablePejlingerTotal.EC3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEC4Null() {
                return this.IsNull(this.tablePejlingerTotal.EC4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEC4Null() {
                this[this.tablePejlingerTotal.EC4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEC5Null() {
                return this.IsNull(this.tablePejlingerTotal.EC5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEC5Null() {
                this[this.tablePejlingerTotal.EC5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQC_EC5Null() {
                return this.IsNull(this.tablePejlingerTotal.QC_EC5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQC_EC5Null() {
                this[this.tablePejlingerTotal.QC_EC5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEC6Null() {
                return this.IsNull(this.tablePejlingerTotal.EC6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEC6Null() {
                this[this.tablePejlingerTotal.EC6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEC_KOMMENTNull() {
                return this.IsNull(this.tablePejlingerTotal.EC_KOMMENTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEC_KOMMENTNull() {
                this[this.tablePejlingerTotal.EC_KOMMENTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEC_ALLNull() {
                return this.IsNull(this.tablePejlingerTotal.EC_ALLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEC_ALLNull() {
                this[this.tablePejlingerTotal.EC_ALLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsORG_LAYERNull() {
                return this.IsNull(this.tablePejlingerTotal.ORG_LAYERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetORG_LAYERNull() {
                this[this.tablePejlingerTotal.ORG_LAYERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLAYERNull() {
                return this.IsNull(this.tablePejlingerTotal.LAYERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLAYERNull() {
                this[this.tablePejlingerTotal.LAYERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNEW_LAYERNull() {
                return this.IsNull(this.tablePejlingerTotal.NEW_LAYERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNEW_LAYERNull() {
                this[this.tablePejlingerTotal.NEW_LAYERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLER_LAYERNull() {
                return this.IsNull(this.tablePejlingerTotal.LER_LAYERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLER_LAYERNull() {
                this[this.tablePejlingerTotal.LER_LAYERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLAYER_ALLNull() {
                return this.IsNull(this.tablePejlingerTotal.LAYER_ALLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLAYER_ALLNull() {
                this[this.tablePejlingerTotal.LAYER_ALLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOK_LAYERNull() {
                return this.IsNull(this.tablePejlingerTotal.OK_LAYERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOK_LAYERNull() {
                this[this.tablePejlingerTotal.OK_LAYERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOK_KOMMENTNull() {
                return this.IsNull(this.tablePejlingerTotal.OK_KOMMENTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOK_KOMMENTNull() {
                this[this.tablePejlingerTotal.OK_KOMMENTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMIDT_FNLNull() {
                return this.IsNull(this.tablePejlingerTotal.MIDT_FNLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMIDT_FNLNull() {
                this[this.tablePejlingerTotal.MIDT_FNLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMEANPEJNull() {
                return this.IsNull(this.tablePejlingerTotal.MEANPEJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMEANPEJNull() {
                this[this.tablePejlingerTotal.MEANPEJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMINPEJNull() {
                return this.IsNull(this.tablePejlingerTotal.MINPEJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMINPEJNull() {
                this[this.tablePejlingerTotal.MINPEJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAXPEJNull() {
                return this.IsNull(this.tablePejlingerTotal.MAXPEJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAXPEJNull() {
                this[this.tablePejlingerTotal.MAXPEJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPEJTSNull() {
                return this.IsNull(this.tablePejlingerTotal.PEJTSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPEJTSNull() {
                this[this.tablePejlingerTotal.PEJTSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFRASORTNull() {
                return this.IsNull(this.tablePejlingerTotal.FRASORTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFRASORTNull() {
                this[this.tablePejlingerTotal.FRASORTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBERELAGNull() {
                return this.IsNull(this.tablePejlingerTotal.BERELAGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBERELAGNull() {
                this[this.tablePejlingerTotal.BERELAGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMC_LAYJUSTNull() {
                return this.IsNull(this.tablePejlingerTotal.MC_LAYJUSTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMC_LAYJUSTNull() {
                this[this.tablePejlingerTotal.MC_LAYJUSTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMC_LAYKOMNull() {
                return this.IsNull(this.tablePejlingerTotal.MC_LAYKOMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMC_LAYKOMNull() {
                this[this.tablePejlingerTotal.MC_LAYKOMColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PejlingerOutputRowChangeEvent : global::System.EventArgs {
            
            private PejlingerOutputRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PejlingerOutputRowChangeEvent(PejlingerOutputRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PejlingerOutputRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PejlingerTotalRowChangeEvent : global::System.EventArgs {
            
            private PejlingerTotalRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PejlingerTotalRowChangeEvent(PejlingerTotalRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PejlingerTotalRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591