using System;
using System.Collections.Generic;
using DHI.Generic.MikeZero;

namespace MikeSheWrapper.InputFiles
{
  /// <summary>
  /// This is an autogenerated class. Do not edit. 
  /// If you want to add methods create a new partial class in another file
  /// </summary>
  public partial class OverlayItem_1: PFSMapper
  {

    private OverlayBMP _overlayBMP;
    private OverlayGrid _overlayGrid;
    private OverlayShape _overlayShape;
    private OverlayRiver _overlayRiver;
    private OverlayWell _overlayWell;

    internal OverlayItem_1(PFSSection Section)
    {
      _pfsHandle = Section;

      for (int i = 1; i <= Section.GetSectionsNo(); i++)
      {
        PFSSection sub = Section.GetSection(i);
        switch (sub.Name)
        {
        case "OverlayBMP":
          _overlayBMP = new OverlayBMP(sub);
          break;
        case "OverlayGrid":
          _overlayGrid = new OverlayGrid(sub);
          break;
        case "OverlayShape":
          _overlayShape = new OverlayShape(sub);
          break;
        case "OverlayRiver":
          _overlayRiver = new OverlayRiver(sub);
          break;
        case "OverlayWell":
          _overlayWell = new OverlayWell(sub);
          break;
          default:
            _unMappedSections.Add(sub.Name);
          break;
        }
      }
    }

    public OverlayBMP OverlayBMP
    {
     get { return _overlayBMP; }
    }

    public OverlayGrid OverlayGrid
    {
     get { return _overlayGrid; }
    }

    public OverlayShape OverlayShape
    {
     get { return _overlayShape; }
    }

    public OverlayRiver OverlayRiver
    {
     get { return _overlayRiver; }
    }

    public OverlayWell OverlayWell
    {
     get { return _overlayWell; }
    }

    public int Touched
    {
      get
      {
        return _pfsHandle.GetKeyword("Touched", 1).GetParameter(1).ToInt();
      }
      set
      {
        _pfsHandle.GetKeyword("Touched", 1).GetParameter(1).Value = value;
      }
    }

    public int IsDataUsedInSetup
    {
      get
      {
        return _pfsHandle.GetKeyword("IsDataUsedInSetup", 1).GetParameter(1).ToInt();
      }
      set
      {
        _pfsHandle.GetKeyword("IsDataUsedInSetup", 1).GetParameter(1).Value = value;
      }
    }

    public int Type
    {
      get
      {
        return _pfsHandle.GetKeyword("Type", 1).GetParameter(1).ToInt();
      }
      set
      {
        _pfsHandle.GetKeyword("Type", 1).GetParameter(1).Value = value;
      }
    }

  }
}
