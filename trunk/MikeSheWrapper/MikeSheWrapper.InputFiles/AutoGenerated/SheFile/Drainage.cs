using System;
using System.Collections.Generic;
using DHI.Generic.MikeZero;

namespace MikeSheWrapper.InputFiles
{
  /// <summary>
  /// This is an autogenerated class. Do not edit. 
  /// If you want to add methods create a new partial class in another file
  /// </summary>
  public partial class Drainage: PFSMapper
  {

    private Bathymetry _level;
    private Topography _timeConstant;
    private Topography _drainCode;
    private Topography _distributedOptionCode;

    internal Drainage(PFSSection Section)
    {
      _pfsHandle = Section;

      for (int i = 1; i <= Section.GetSectionsNo(); i++)
      {
        PFSSection sub = Section.GetSection(i);
        switch (sub.Name)
        {
        case "Level":
          _level = new Bathymetry(sub);
          break;
        case "TimeConstant":
          _timeConstant = new Topography(sub);
          break;
        case "DrainCode":
          _drainCode = new Topography(sub);
          break;
        case "DistributedOptionCode":
          _distributedOptionCode = new Topography(sub);
          break;
          default:
            _unMappedSections.Add(sub.Name);
          break;
        }
      }
    }

    public Bathymetry Level
    {
     get { return _level; }
    }

    public Topography TimeConstant
    {
     get { return _timeConstant; }
    }

    public Topography DrainCode
    {
     get { return _drainCode; }
    }

    public Topography DistributedOptionCode
    {
     get { return _distributedOptionCode; }
    }

    public int DrainageOption
    {
      get
      {
        return _pfsHandle.GetKeyword("DrainageOption", 1).GetParameter(1).ToInt();
      }
      set
      {
        _pfsHandle.GetKeyword("DrainageOption", 1).GetParameter(1).Value = value;
      }
    }

  }
}
