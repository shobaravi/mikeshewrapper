using System;
using System.Collections.Generic;
using DHI.Generic.MikeZero;

namespace MikeSheWrapper.InputFiles
{
  /// <summary>
  /// This is an autogenerated class. Do not edit. 
  /// If you want to add methods create a new partial class in another file
  /// </summary>
  public partial class CompLayersSZ: PFSMapper
  {

    private Layer_11 _layer_1;
    private Layer_2 _layer_2;
    private Layer_2 _layer_3;
    private Layer_2 _layer_4;
    private Layer_2 _layer_5;
    private Layer_2 _layer_6;
    private Layer_2 _layer_7;
    private Layer_2 _layer_8;
    private Layer_2 _layer_9;
    private Layer_2 _layer_10;

    internal CompLayersSZ(PFSSection Section)
    {
      _pfsHandle = Section;

      for (int i = 1; i <= Section.GetSectionsNo(); i++)
      {
        PFSSection sub = Section.GetSection(i);
        switch (sub.Name)
        {
        case "Layer_1":
          _layer_1 = new Layer_11(sub);
          break;
        case "Layer_2":
          _layer_2 = new Layer_2(sub);
          break;
        case "Layer_3":
          _layer_3 = new Layer_2(sub);
          break;
        case "Layer_4":
          _layer_4 = new Layer_2(sub);
          break;
        case "Layer_5":
          _layer_5 = new Layer_2(sub);
          break;
        case "Layer_6":
          _layer_6 = new Layer_2(sub);
          break;
        case "Layer_7":
          _layer_7 = new Layer_2(sub);
          break;
        case "Layer_8":
          _layer_8 = new Layer_2(sub);
          break;
        case "Layer_9":
          _layer_9 = new Layer_2(sub);
          break;
        case "Layer_10":
          _layer_10 = new Layer_2(sub);
          break;
          default:
            _unMappedSections.Add(sub.Name);
          break;
        }
      }
    }

    public Layer_11 Layer_1
    {
     get { return _layer_1; }
    }

    public Layer_2 Layer_2
    {
     get { return _layer_2; }
    }

    public Layer_2 Layer_3
    {
     get { return _layer_3; }
    }

    public Layer_2 Layer_4
    {
     get { return _layer_4; }
    }

    public Layer_2 Layer_5
    {
     get { return _layer_5; }
    }

    public Layer_2 Layer_6
    {
     get { return _layer_6; }
    }

    public Layer_2 Layer_7
    {
     get { return _layer_7; }
    }

    public Layer_2 Layer_8
    {
     get { return _layer_8; }
    }

    public Layer_2 Layer_9
    {
     get { return _layer_9; }
    }

    public Layer_2 Layer_10
    {
     get { return _layer_10; }
    }

    public int Touched
    {
      get
      {
        return _pfsHandle.GetKeyword("Touched", 1).GetParameter(1).ToInt();
      }
      set
      {
        _pfsHandle.GetKeyword("Touched", 1).GetParameter(1).Value = value;
      }
    }

    public int IsDataUsedInSetup
    {
      get
      {
        return _pfsHandle.GetKeyword("IsDataUsedInSetup", 1).GetParameter(1).ToInt();
      }
      set
      {
        _pfsHandle.GetKeyword("IsDataUsedInSetup", 1).GetParameter(1).Value = value;
      }
    }

    public int MzSEPfsListItemCount
    {
      get
      {
        return _pfsHandle.GetKeyword("MzSEPfsListItemCount", 1).GetParameter(1).ToInt();
      }
      set
      {
        _pfsHandle.GetKeyword("MzSEPfsListItemCount", 1).GetParameter(1).Value = value;
      }
    }

    public int NumberOfLayers
    {
      get
      {
        return _pfsHandle.GetKeyword("NumberOfLayers", 1).GetParameter(1).ToInt();
      }
      set
      {
        _pfsHandle.GetKeyword("NumberOfLayers", 1).GetParameter(1).Value = value;
      }
    }

  }
}
