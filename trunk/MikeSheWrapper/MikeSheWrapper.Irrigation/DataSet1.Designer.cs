//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace MikeSheWrapper.Irrigation {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSet1")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSet1 : global::System.Data.DataSet {
        
        private BOREHOLEDataTable tableBOREHOLE;
        
        private INTAKEDataTable tableINTAKE;
        
        private WATLEVELDataTable tableWATLEVEL;
        
        private global::System.Data.DataRelation relationRINTAKE_BOREHOLE;
        
        private global::System.Data.DataRelation relationRWATLEVEL_INTAKE;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DataSet1() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DataSet1(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["BOREHOLE"] != null)) {
                    base.Tables.Add(new BOREHOLEDataTable(ds.Tables["BOREHOLE"]));
                }
                if ((ds.Tables["INTAKE"] != null)) {
                    base.Tables.Add(new INTAKEDataTable(ds.Tables["INTAKE"]));
                }
                if ((ds.Tables["WATLEVEL"] != null)) {
                    base.Tables.Add(new WATLEVELDataTable(ds.Tables["WATLEVEL"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BOREHOLEDataTable BOREHOLE {
            get {
                return this.tableBOREHOLE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public INTAKEDataTable INTAKE {
            get {
                return this.tableINTAKE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public WATLEVELDataTable WATLEVEL {
            get {
                return this.tableWATLEVEL;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DataSet1 cln = ((DataSet1)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["BOREHOLE"] != null)) {
                    base.Tables.Add(new BOREHOLEDataTable(ds.Tables["BOREHOLE"]));
                }
                if ((ds.Tables["INTAKE"] != null)) {
                    base.Tables.Add(new INTAKEDataTable(ds.Tables["INTAKE"]));
                }
                if ((ds.Tables["WATLEVEL"] != null)) {
                    base.Tables.Add(new WATLEVELDataTable(ds.Tables["WATLEVEL"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableBOREHOLE = ((BOREHOLEDataTable)(base.Tables["BOREHOLE"]));
            if ((initTable == true)) {
                if ((this.tableBOREHOLE != null)) {
                    this.tableBOREHOLE.InitVars();
                }
            }
            this.tableINTAKE = ((INTAKEDataTable)(base.Tables["INTAKE"]));
            if ((initTable == true)) {
                if ((this.tableINTAKE != null)) {
                    this.tableINTAKE.InitVars();
                }
            }
            this.tableWATLEVEL = ((WATLEVELDataTable)(base.Tables["WATLEVEL"]));
            if ((initTable == true)) {
                if ((this.tableWATLEVEL != null)) {
                    this.tableWATLEVEL.InitVars();
                }
            }
            this.relationRINTAKE_BOREHOLE = this.Relations["RINTAKE_BOREHOLE"];
            this.relationRWATLEVEL_INTAKE = this.Relations["RWATLEVEL_INTAKE"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DataSet1";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSet1.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableBOREHOLE = new BOREHOLEDataTable();
            base.Tables.Add(this.tableBOREHOLE);
            this.tableINTAKE = new INTAKEDataTable();
            base.Tables.Add(this.tableINTAKE);
            this.tableWATLEVEL = new WATLEVELDataTable();
            base.Tables.Add(this.tableWATLEVEL);
            this.relationRINTAKE_BOREHOLE = new global::System.Data.DataRelation("RINTAKE_BOREHOLE", new global::System.Data.DataColumn[] {
                        this.tableBOREHOLE.BOREHOLENOColumn}, new global::System.Data.DataColumn[] {
                        this.tableINTAKE.BOREHOLENOColumn}, false);
            this.Relations.Add(this.relationRINTAKE_BOREHOLE);
            this.relationRWATLEVEL_INTAKE = new global::System.Data.DataRelation("RWATLEVEL_INTAKE", new global::System.Data.DataColumn[] {
                        this.tableINTAKE.BOREHOLENOColumn,
                        this.tableINTAKE.INTAKENOColumn}, new global::System.Data.DataColumn[] {
                        this.tableWATLEVEL.BOREHOLENOColumn,
                        this.tableWATLEVEL.INTAKENOColumn}, false);
            this.Relations.Add(this.relationRWATLEVEL_INTAKE);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeBOREHOLE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeINTAKE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeWATLEVEL() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSet1 ds = new DataSet1();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void BOREHOLERowChangeEventHandler(object sender, BOREHOLERowChangeEvent e);
        
        public delegate void INTAKERowChangeEventHandler(object sender, INTAKERowChangeEvent e);
        
        public delegate void WATLEVELRowChangeEventHandler(object sender, WATLEVELRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BOREHOLEDataTable : global::System.Data.TypedTableBase<BOREHOLERow> {
            
            private global::System.Data.DataColumn columnBOREHOLENO;
            
            private global::System.Data.DataColumn columnNAMINGSYS;
            
            private global::System.Data.DataColumn columnPURPOSE;
            
            private global::System.Data.DataColumn columnUSE;
            
            private global::System.Data.DataColumn columnSTATUS;
            
            private global::System.Data.DataColumn columnDRILLDEPTH;
            
            private global::System.Data.DataColumn columnELEVATION;
            
            private global::System.Data.DataColumn columnCTRPELEVA;
            
            private global::System.Data.DataColumn columnVERTICAREF;
            
            private global::System.Data.DataColumn columnCTRPDESCR;
            
            private global::System.Data.DataColumn columnCTRPPRECIS;
            
            private global::System.Data.DataColumn columnCTRPZPRECIS;
            
            private global::System.Data.DataColumn columnCTRPHEIGHT;
            
            private global::System.Data.DataColumn columnELEVAMETHO;
            
            private global::System.Data.DataColumn columnELEVAQUALI;
            
            private global::System.Data.DataColumn columnELEVASOURC;
            
            private global::System.Data.DataColumn columnLOCATION;
            
            private global::System.Data.DataColumn columnCOMMENTS;
            
            private global::System.Data.DataColumn columnVARIOUS;
            
            private global::System.Data.DataColumn columnXUTM;
            
            private global::System.Data.DataColumn columnYUTM;
            
            private global::System.Data.DataColumn columnUTMZONE;
            
            private global::System.Data.DataColumn columnDATUM;
            
            private global::System.Data.DataColumn columnMAPSHEET;
            
            private global::System.Data.DataColumn columnMAPDISTX;
            
            private global::System.Data.DataColumn columnMAPDISTY;
            
            private global::System.Data.DataColumn columnSYS34X;
            
            private global::System.Data.DataColumn columnSYS34Y;
            
            private global::System.Data.DataColumn columnSYS34ZONE;
            
            private global::System.Data.DataColumn columnLATITUDE;
            
            private global::System.Data.DataColumn columnLONGITUDE;
            
            private global::System.Data.DataColumn columnLOCATMETHO;
            
            private global::System.Data.DataColumn columnLOCATQUALI;
            
            private global::System.Data.DataColumn columnLOCATSOURC;
            
            private global::System.Data.DataColumn columnBORHPOSTC;
            
            private global::System.Data.DataColumn columnBORHTOWNNO;
            
            private global::System.Data.DataColumn columnCOUNTYNO;
            
            private global::System.Data.DataColumn columnMUNICIPAL;
            
            private global::System.Data.DataColumn columnHOUSEOWNAS;
            
            private global::System.Data.DataColumn columnLANDREGNO;
            
            private global::System.Data.DataColumn columnDRILLER;
            
            private global::System.Data.DataColumn columnDRILLLOGNO;
            
            private global::System.Data.DataColumn columnDRILLBORNO;
            
            private global::System.Data.DataColumn columnREPORTEDBY;
            
            private global::System.Data.DataColumn columnCONSULTANT;
            
            private global::System.Data.DataColumn columnCONSULOGNO;
            
            private global::System.Data.DataColumn columnCONSUBORNO;
            
            private global::System.Data.DataColumn columnDRILLEDFOR;
            
            private global::System.Data.DataColumn columnDRFORADRES;
            
            private global::System.Data.DataColumn columnDRFORPOSTC;
            
            private global::System.Data.DataColumn columnDRILSTDATE;
            
            private global::System.Data.DataColumn columnDRILENDATE;
            
            private global::System.Data.DataColumn columnABANDONDAT;
            
            private global::System.Data.DataColumn columnPREVBORHNO;
            
            private global::System.Data.DataColumn columnNUMSUPLBOR;
            
            private global::System.Data.DataColumn columnSAMRECEDAT;
            
            private global::System.Data.DataColumn columnSAMDESCDAT;
            
            private global::System.Data.DataColumn columnNUMOFSAMPL;
            
            private global::System.Data.DataColumn columnNUMSAMSTO;
            
            private global::System.Data.DataColumn columnLITHOLNOTE;
            
            private global::System.Data.DataColumn columnTOGEUSDATE;
            
            private global::System.Data.DataColumn columnGRUMOCOUNTYNO;
            
            private global::System.Data.DataColumn columnGRUMOBORNO;
            
            private global::System.Data.DataColumn columnGRUMOBORTYPE;
            
            private global::System.Data.DataColumn columnGRUMOAREANO;
            
            private global::System.Data.DataColumn columnBORHTOWNNO2007;
            
            private global::System.Data.DataColumn columnLOCQUALI;
            
            private global::System.Data.DataColumn columnLOOPAREANO;
            
            private global::System.Data.DataColumn columnLOOPSTATION;
            
            private global::System.Data.DataColumn columnLOOPTYPE;
            
            private global::System.Data.DataColumn columnUSECHANGEDATE;
            
            private global::System.Data.DataColumn columnENVCEN;
            
            private global::System.Data.DataColumn columnABANDCAUSE;
            
            private global::System.Data.DataColumn columnABANDCONTR;
            
            private global::System.Data.DataColumn columnSTARTDAYUNKNOWN;
            
            private global::System.Data.DataColumn columnSTARTMNTHUNKNWN;
            
            private global::System.Data.DataColumn columnWWBOREHOLENO;
            
            private global::System.Data.DataColumn columnXUTM32EUREF89;
            
            private global::System.Data.DataColumn columnYUTM32EUREF89;
            
            private global::System.Data.DataColumn columnZDVR90;
            
            private global::System.Data.DataColumn columnINSTALLATION;
            
            private global::System.Data.DataColumn columnWORKINGCONDITIONS;
            
            private global::System.Data.DataColumn columnAPPROACH;
            
            private global::System.Data.DataColumn columnACCESSREMARK;
            
            private global::System.Data.DataColumn columnLOCATEPERSONEMAIL;
            
            private global::System.Data.DataColumn columnPRESERVATIONZONE;
            
            private global::System.Data.DataColumn columnPROTECTIONZONE;
            
            private global::System.Data.DataColumn columnREGION;
            
            private global::System.Data.DataColumn columnUSECHANGECAUSE;
            
            private global::System.Data.DataColumn columnINSERTDATE;
            
            private global::System.Data.DataColumn columnUPDATEDATE;
            
            private global::System.Data.DataColumn columnINSERTUSER;
            
            private global::System.Data.DataColumn columnUPDATEUSER;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BOREHOLEDataTable() {
                this.TableName = "BOREHOLE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BOREHOLEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected BOREHOLEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BOREHOLENOColumn {
                get {
                    return this.columnBOREHOLENO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NAMINGSYSColumn {
                get {
                    return this.columnNAMINGSYS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PURPOSEColumn {
                get {
                    return this.columnPURPOSE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USEColumn {
                get {
                    return this.columnUSE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STATUSColumn {
                get {
                    return this.columnSTATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DRILLDEPTHColumn {
                get {
                    return this.columnDRILLDEPTH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ELEVATIONColumn {
                get {
                    return this.columnELEVATION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CTRPELEVAColumn {
                get {
                    return this.columnCTRPELEVA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VERTICAREFColumn {
                get {
                    return this.columnVERTICAREF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CTRPDESCRColumn {
                get {
                    return this.columnCTRPDESCR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CTRPPRECISColumn {
                get {
                    return this.columnCTRPPRECIS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CTRPZPRECISColumn {
                get {
                    return this.columnCTRPZPRECIS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CTRPHEIGHTColumn {
                get {
                    return this.columnCTRPHEIGHT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ELEVAMETHOColumn {
                get {
                    return this.columnELEVAMETHO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ELEVAQUALIColumn {
                get {
                    return this.columnELEVAQUALI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ELEVASOURCColumn {
                get {
                    return this.columnELEVASOURC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LOCATIONColumn {
                get {
                    return this.columnLOCATION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMMENTSColumn {
                get {
                    return this.columnCOMMENTS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VARIOUSColumn {
                get {
                    return this.columnVARIOUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn XUTMColumn {
                get {
                    return this.columnXUTM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YUTMColumn {
                get {
                    return this.columnYUTM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UTMZONEColumn {
                get {
                    return this.columnUTMZONE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DATUMColumn {
                get {
                    return this.columnDATUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAPSHEETColumn {
                get {
                    return this.columnMAPSHEET;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAPDISTXColumn {
                get {
                    return this.columnMAPDISTX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAPDISTYColumn {
                get {
                    return this.columnMAPDISTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SYS34XColumn {
                get {
                    return this.columnSYS34X;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SYS34YColumn {
                get {
                    return this.columnSYS34Y;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SYS34ZONEColumn {
                get {
                    return this.columnSYS34ZONE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LATITUDEColumn {
                get {
                    return this.columnLATITUDE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LONGITUDEColumn {
                get {
                    return this.columnLONGITUDE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LOCATMETHOColumn {
                get {
                    return this.columnLOCATMETHO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LOCATQUALIColumn {
                get {
                    return this.columnLOCATQUALI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LOCATSOURCColumn {
                get {
                    return this.columnLOCATSOURC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BORHPOSTCColumn {
                get {
                    return this.columnBORHPOSTC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BORHTOWNNOColumn {
                get {
                    return this.columnBORHTOWNNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COUNTYNOColumn {
                get {
                    return this.columnCOUNTYNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MUNICIPALColumn {
                get {
                    return this.columnMUNICIPAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HOUSEOWNASColumn {
                get {
                    return this.columnHOUSEOWNAS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LANDREGNOColumn {
                get {
                    return this.columnLANDREGNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DRILLERColumn {
                get {
                    return this.columnDRILLER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DRILLLOGNOColumn {
                get {
                    return this.columnDRILLLOGNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DRILLBORNOColumn {
                get {
                    return this.columnDRILLBORNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn REPORTEDBYColumn {
                get {
                    return this.columnREPORTEDBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CONSULTANTColumn {
                get {
                    return this.columnCONSULTANT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CONSULOGNOColumn {
                get {
                    return this.columnCONSULOGNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CONSUBORNOColumn {
                get {
                    return this.columnCONSUBORNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DRILLEDFORColumn {
                get {
                    return this.columnDRILLEDFOR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DRFORADRESColumn {
                get {
                    return this.columnDRFORADRES;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DRFORPOSTCColumn {
                get {
                    return this.columnDRFORPOSTC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DRILSTDATEColumn {
                get {
                    return this.columnDRILSTDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DRILENDATEColumn {
                get {
                    return this.columnDRILENDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ABANDONDATColumn {
                get {
                    return this.columnABANDONDAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PREVBORHNOColumn {
                get {
                    return this.columnPREVBORHNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NUMSUPLBORColumn {
                get {
                    return this.columnNUMSUPLBOR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SAMRECEDATColumn {
                get {
                    return this.columnSAMRECEDAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SAMDESCDATColumn {
                get {
                    return this.columnSAMDESCDAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NUMOFSAMPLColumn {
                get {
                    return this.columnNUMOFSAMPL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NUMSAMSTOColumn {
                get {
                    return this.columnNUMSAMSTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LITHOLNOTEColumn {
                get {
                    return this.columnLITHOLNOTE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TOGEUSDATEColumn {
                get {
                    return this.columnTOGEUSDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GRUMOCOUNTYNOColumn {
                get {
                    return this.columnGRUMOCOUNTYNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GRUMOBORNOColumn {
                get {
                    return this.columnGRUMOBORNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GRUMOBORTYPEColumn {
                get {
                    return this.columnGRUMOBORTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GRUMOAREANOColumn {
                get {
                    return this.columnGRUMOAREANO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BORHTOWNNO2007Column {
                get {
                    return this.columnBORHTOWNNO2007;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LOCQUALIColumn {
                get {
                    return this.columnLOCQUALI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LOOPAREANOColumn {
                get {
                    return this.columnLOOPAREANO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LOOPSTATIONColumn {
                get {
                    return this.columnLOOPSTATION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LOOPTYPEColumn {
                get {
                    return this.columnLOOPTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USECHANGEDATEColumn {
                get {
                    return this.columnUSECHANGEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ENVCENColumn {
                get {
                    return this.columnENVCEN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ABANDCAUSEColumn {
                get {
                    return this.columnABANDCAUSE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ABANDCONTRColumn {
                get {
                    return this.columnABANDCONTR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STARTDAYUNKNOWNColumn {
                get {
                    return this.columnSTARTDAYUNKNOWN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STARTMNTHUNKNWNColumn {
                get {
                    return this.columnSTARTMNTHUNKNWN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WWBOREHOLENOColumn {
                get {
                    return this.columnWWBOREHOLENO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn XUTM32EUREF89Column {
                get {
                    return this.columnXUTM32EUREF89;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YUTM32EUREF89Column {
                get {
                    return this.columnYUTM32EUREF89;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZDVR90Column {
                get {
                    return this.columnZDVR90;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INSTALLATIONColumn {
                get {
                    return this.columnINSTALLATION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WORKINGCONDITIONSColumn {
                get {
                    return this.columnWORKINGCONDITIONS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn APPROACHColumn {
                get {
                    return this.columnAPPROACH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ACCESSREMARKColumn {
                get {
                    return this.columnACCESSREMARK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LOCATEPERSONEMAILColumn {
                get {
                    return this.columnLOCATEPERSONEMAIL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRESERVATIONZONEColumn {
                get {
                    return this.columnPRESERVATIONZONE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PROTECTIONZONEColumn {
                get {
                    return this.columnPROTECTIONZONE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn REGIONColumn {
                get {
                    return this.columnREGION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USECHANGECAUSEColumn {
                get {
                    return this.columnUSECHANGECAUSE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INSERTDATEColumn {
                get {
                    return this.columnINSERTDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UPDATEDATEColumn {
                get {
                    return this.columnUPDATEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INSERTUSERColumn {
                get {
                    return this.columnINSERTUSER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UPDATEUSERColumn {
                get {
                    return this.columnUPDATEUSER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BOREHOLERow this[int index] {
                get {
                    return ((BOREHOLERow)(this.Rows[index]));
                }
            }
            
            public event BOREHOLERowChangeEventHandler BOREHOLERowChanging;
            
            public event BOREHOLERowChangeEventHandler BOREHOLERowChanged;
            
            public event BOREHOLERowChangeEventHandler BOREHOLERowDeleting;
            
            public event BOREHOLERowChangeEventHandler BOREHOLERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddBOREHOLERow(BOREHOLERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BOREHOLERow AddBOREHOLERow(
                        string BOREHOLENO, 
                        string NAMINGSYS, 
                        string PURPOSE, 
                        string USE, 
                        string STATUS, 
                        double DRILLDEPTH, 
                        double ELEVATION, 
                        double CTRPELEVA, 
                        string VERTICAREF, 
                        string CTRPDESCR, 
                        float CTRPPRECIS, 
                        float CTRPZPRECIS, 
                        float CTRPHEIGHT, 
                        string ELEVAMETHO, 
                        string ELEVAQUALI, 
                        string ELEVASOURC, 
                        string LOCATION, 
                        string COMMENTS, 
                        string VARIOUS, 
                        double XUTM, 
                        double YUTM, 
                        int UTMZONE, 
                        string DATUM, 
                        string MAPSHEET, 
                        double MAPDISTX, 
                        double MAPDISTY, 
                        double SYS34X, 
                        double SYS34Y, 
                        int SYS34ZONE, 
                        double LATITUDE, 
                        double LONGITUDE, 
                        string LOCATMETHO, 
                        string LOCATQUALI, 
                        string LOCATSOURC, 
                        int BORHPOSTC, 
                        int BORHTOWNNO, 
                        int COUNTYNO, 
                        string MUNICIPAL, 
                        int HOUSEOWNAS, 
                        string LANDREGNO, 
                        string DRILLER, 
                        string DRILLLOGNO, 
                        string DRILLBORNO, 
                        string REPORTEDBY, 
                        string CONSULTANT, 
                        string CONSULOGNO, 
                        string CONSUBORNO, 
                        string DRILLEDFOR, 
                        string DRFORADRES, 
                        int DRFORPOSTC, 
                        System.DateTime DRILSTDATE, 
                        System.DateTime DRILENDATE, 
                        System.DateTime ABANDONDAT, 
                        string PREVBORHNO, 
                        int NUMSUPLBOR, 
                        System.DateTime SAMRECEDAT, 
                        System.DateTime SAMDESCDAT, 
                        int NUMOFSAMPL, 
                        int NUMSAMSTO, 
                        string LITHOLNOTE, 
                        System.DateTime TOGEUSDATE, 
                        int GRUMOCOUNTYNO, 
                        int GRUMOBORNO, 
                        int GRUMOBORTYPE, 
                        int GRUMOAREANO, 
                        int BORHTOWNNO2007, 
                        string LOCQUALI, 
                        int LOOPAREANO, 
                        int LOOPSTATION, 
                        int LOOPTYPE, 
                        System.DateTime USECHANGEDATE, 
                        int ENVCEN, 
                        string ABANDCAUSE, 
                        string ABANDCONTR, 
                        string STARTDAYUNKNOWN, 
                        string STARTMNTHUNKNWN, 
                        string WWBOREHOLENO, 
                        double XUTM32EUREF89, 
                        double YUTM32EUREF89, 
                        double ZDVR90, 
                        string INSTALLATION, 
                        string WORKINGCONDITIONS, 
                        string APPROACH, 
                        string ACCESSREMARK, 
                        string LOCATEPERSONEMAIL, 
                        int PRESERVATIONZONE, 
                        int PROTECTIONZONE, 
                        int REGION, 
                        int USECHANGECAUSE, 
                        System.DateTime INSERTDATE, 
                        System.DateTime UPDATEDATE, 
                        string INSERTUSER, 
                        string UPDATEUSER) {
                BOREHOLERow rowBOREHOLERow = ((BOREHOLERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        BOREHOLENO,
                        NAMINGSYS,
                        PURPOSE,
                        USE,
                        STATUS,
                        DRILLDEPTH,
                        ELEVATION,
                        CTRPELEVA,
                        VERTICAREF,
                        CTRPDESCR,
                        CTRPPRECIS,
                        CTRPZPRECIS,
                        CTRPHEIGHT,
                        ELEVAMETHO,
                        ELEVAQUALI,
                        ELEVASOURC,
                        LOCATION,
                        COMMENTS,
                        VARIOUS,
                        XUTM,
                        YUTM,
                        UTMZONE,
                        DATUM,
                        MAPSHEET,
                        MAPDISTX,
                        MAPDISTY,
                        SYS34X,
                        SYS34Y,
                        SYS34ZONE,
                        LATITUDE,
                        LONGITUDE,
                        LOCATMETHO,
                        LOCATQUALI,
                        LOCATSOURC,
                        BORHPOSTC,
                        BORHTOWNNO,
                        COUNTYNO,
                        MUNICIPAL,
                        HOUSEOWNAS,
                        LANDREGNO,
                        DRILLER,
                        DRILLLOGNO,
                        DRILLBORNO,
                        REPORTEDBY,
                        CONSULTANT,
                        CONSULOGNO,
                        CONSUBORNO,
                        DRILLEDFOR,
                        DRFORADRES,
                        DRFORPOSTC,
                        DRILSTDATE,
                        DRILENDATE,
                        ABANDONDAT,
                        PREVBORHNO,
                        NUMSUPLBOR,
                        SAMRECEDAT,
                        SAMDESCDAT,
                        NUMOFSAMPL,
                        NUMSAMSTO,
                        LITHOLNOTE,
                        TOGEUSDATE,
                        GRUMOCOUNTYNO,
                        GRUMOBORNO,
                        GRUMOBORTYPE,
                        GRUMOAREANO,
                        BORHTOWNNO2007,
                        LOCQUALI,
                        LOOPAREANO,
                        LOOPSTATION,
                        LOOPTYPE,
                        USECHANGEDATE,
                        ENVCEN,
                        ABANDCAUSE,
                        ABANDCONTR,
                        STARTDAYUNKNOWN,
                        STARTMNTHUNKNWN,
                        WWBOREHOLENO,
                        XUTM32EUREF89,
                        YUTM32EUREF89,
                        ZDVR90,
                        INSTALLATION,
                        WORKINGCONDITIONS,
                        APPROACH,
                        ACCESSREMARK,
                        LOCATEPERSONEMAIL,
                        PRESERVATIONZONE,
                        PROTECTIONZONE,
                        REGION,
                        USECHANGECAUSE,
                        INSERTDATE,
                        UPDATEDATE,
                        INSERTUSER,
                        UPDATEUSER};
                rowBOREHOLERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBOREHOLERow);
                return rowBOREHOLERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BOREHOLERow FindByBOREHOLENO(string BOREHOLENO) {
                return ((BOREHOLERow)(this.Rows.Find(new object[] {
                            BOREHOLENO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                BOREHOLEDataTable cln = ((BOREHOLEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BOREHOLEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnBOREHOLENO = base.Columns["BOREHOLENO"];
                this.columnNAMINGSYS = base.Columns["NAMINGSYS"];
                this.columnPURPOSE = base.Columns["PURPOSE"];
                this.columnUSE = base.Columns["USE"];
                this.columnSTATUS = base.Columns["STATUS"];
                this.columnDRILLDEPTH = base.Columns["DRILLDEPTH"];
                this.columnELEVATION = base.Columns["ELEVATION"];
                this.columnCTRPELEVA = base.Columns["CTRPELEVA"];
                this.columnVERTICAREF = base.Columns["VERTICAREF"];
                this.columnCTRPDESCR = base.Columns["CTRPDESCR"];
                this.columnCTRPPRECIS = base.Columns["CTRPPRECIS"];
                this.columnCTRPZPRECIS = base.Columns["CTRPZPRECIS"];
                this.columnCTRPHEIGHT = base.Columns["CTRPHEIGHT"];
                this.columnELEVAMETHO = base.Columns["ELEVAMETHO"];
                this.columnELEVAQUALI = base.Columns["ELEVAQUALI"];
                this.columnELEVASOURC = base.Columns["ELEVASOURC"];
                this.columnLOCATION = base.Columns["LOCATION"];
                this.columnCOMMENTS = base.Columns["COMMENTS"];
                this.columnVARIOUS = base.Columns["VARIOUS"];
                this.columnXUTM = base.Columns["XUTM"];
                this.columnYUTM = base.Columns["YUTM"];
                this.columnUTMZONE = base.Columns["UTMZONE"];
                this.columnDATUM = base.Columns["DATUM"];
                this.columnMAPSHEET = base.Columns["MAPSHEET"];
                this.columnMAPDISTX = base.Columns["MAPDISTX"];
                this.columnMAPDISTY = base.Columns["MAPDISTY"];
                this.columnSYS34X = base.Columns["SYS34X"];
                this.columnSYS34Y = base.Columns["SYS34Y"];
                this.columnSYS34ZONE = base.Columns["SYS34ZONE"];
                this.columnLATITUDE = base.Columns["LATITUDE"];
                this.columnLONGITUDE = base.Columns["LONGITUDE"];
                this.columnLOCATMETHO = base.Columns["LOCATMETHO"];
                this.columnLOCATQUALI = base.Columns["LOCATQUALI"];
                this.columnLOCATSOURC = base.Columns["LOCATSOURC"];
                this.columnBORHPOSTC = base.Columns["BORHPOSTC"];
                this.columnBORHTOWNNO = base.Columns["BORHTOWNNO"];
                this.columnCOUNTYNO = base.Columns["COUNTYNO"];
                this.columnMUNICIPAL = base.Columns["MUNICIPAL"];
                this.columnHOUSEOWNAS = base.Columns["HOUSEOWNAS"];
                this.columnLANDREGNO = base.Columns["LANDREGNO"];
                this.columnDRILLER = base.Columns["DRILLER"];
                this.columnDRILLLOGNO = base.Columns["DRILLLOGNO"];
                this.columnDRILLBORNO = base.Columns["DRILLBORNO"];
                this.columnREPORTEDBY = base.Columns["REPORTEDBY"];
                this.columnCONSULTANT = base.Columns["CONSULTANT"];
                this.columnCONSULOGNO = base.Columns["CONSULOGNO"];
                this.columnCONSUBORNO = base.Columns["CONSUBORNO"];
                this.columnDRILLEDFOR = base.Columns["DRILLEDFOR"];
                this.columnDRFORADRES = base.Columns["DRFORADRES"];
                this.columnDRFORPOSTC = base.Columns["DRFORPOSTC"];
                this.columnDRILSTDATE = base.Columns["DRILSTDATE"];
                this.columnDRILENDATE = base.Columns["DRILENDATE"];
                this.columnABANDONDAT = base.Columns["ABANDONDAT"];
                this.columnPREVBORHNO = base.Columns["PREVBORHNO"];
                this.columnNUMSUPLBOR = base.Columns["NUMSUPLBOR"];
                this.columnSAMRECEDAT = base.Columns["SAMRECEDAT"];
                this.columnSAMDESCDAT = base.Columns["SAMDESCDAT"];
                this.columnNUMOFSAMPL = base.Columns["NUMOFSAMPL"];
                this.columnNUMSAMSTO = base.Columns["NUMSAMSTO"];
                this.columnLITHOLNOTE = base.Columns["LITHOLNOTE"];
                this.columnTOGEUSDATE = base.Columns["TOGEUSDATE"];
                this.columnGRUMOCOUNTYNO = base.Columns["GRUMOCOUNTYNO"];
                this.columnGRUMOBORNO = base.Columns["GRUMOBORNO"];
                this.columnGRUMOBORTYPE = base.Columns["GRUMOBORTYPE"];
                this.columnGRUMOAREANO = base.Columns["GRUMOAREANO"];
                this.columnBORHTOWNNO2007 = base.Columns["BORHTOWNNO2007"];
                this.columnLOCQUALI = base.Columns["LOCQUALI"];
                this.columnLOOPAREANO = base.Columns["LOOPAREANO"];
                this.columnLOOPSTATION = base.Columns["LOOPSTATION"];
                this.columnLOOPTYPE = base.Columns["LOOPTYPE"];
                this.columnUSECHANGEDATE = base.Columns["USECHANGEDATE"];
                this.columnENVCEN = base.Columns["ENVCEN"];
                this.columnABANDCAUSE = base.Columns["ABANDCAUSE"];
                this.columnABANDCONTR = base.Columns["ABANDCONTR"];
                this.columnSTARTDAYUNKNOWN = base.Columns["STARTDAYUNKNOWN"];
                this.columnSTARTMNTHUNKNWN = base.Columns["STARTMNTHUNKNWN"];
                this.columnWWBOREHOLENO = base.Columns["WWBOREHOLENO"];
                this.columnXUTM32EUREF89 = base.Columns["XUTM32EUREF89"];
                this.columnYUTM32EUREF89 = base.Columns["YUTM32EUREF89"];
                this.columnZDVR90 = base.Columns["ZDVR90"];
                this.columnINSTALLATION = base.Columns["INSTALLATION"];
                this.columnWORKINGCONDITIONS = base.Columns["WORKINGCONDITIONS"];
                this.columnAPPROACH = base.Columns["APPROACH"];
                this.columnACCESSREMARK = base.Columns["ACCESSREMARK"];
                this.columnLOCATEPERSONEMAIL = base.Columns["LOCATEPERSONEMAIL"];
                this.columnPRESERVATIONZONE = base.Columns["PRESERVATIONZONE"];
                this.columnPROTECTIONZONE = base.Columns["PROTECTIONZONE"];
                this.columnREGION = base.Columns["REGION"];
                this.columnUSECHANGECAUSE = base.Columns["USECHANGECAUSE"];
                this.columnINSERTDATE = base.Columns["INSERTDATE"];
                this.columnUPDATEDATE = base.Columns["UPDATEDATE"];
                this.columnINSERTUSER = base.Columns["INSERTUSER"];
                this.columnUPDATEUSER = base.Columns["UPDATEUSER"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnBOREHOLENO = new global::System.Data.DataColumn("BOREHOLENO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBOREHOLENO);
                this.columnNAMINGSYS = new global::System.Data.DataColumn("NAMINGSYS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAMINGSYS);
                this.columnPURPOSE = new global::System.Data.DataColumn("PURPOSE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPURPOSE);
                this.columnUSE = new global::System.Data.DataColumn("USE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSE);
                this.columnSTATUS = new global::System.Data.DataColumn("STATUS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTATUS);
                this.columnDRILLDEPTH = new global::System.Data.DataColumn("DRILLDEPTH", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDRILLDEPTH);
                this.columnELEVATION = new global::System.Data.DataColumn("ELEVATION", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnELEVATION);
                this.columnCTRPELEVA = new global::System.Data.DataColumn("CTRPELEVA", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCTRPELEVA);
                this.columnVERTICAREF = new global::System.Data.DataColumn("VERTICAREF", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVERTICAREF);
                this.columnCTRPDESCR = new global::System.Data.DataColumn("CTRPDESCR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCTRPDESCR);
                this.columnCTRPPRECIS = new global::System.Data.DataColumn("CTRPPRECIS", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCTRPPRECIS);
                this.columnCTRPZPRECIS = new global::System.Data.DataColumn("CTRPZPRECIS", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCTRPZPRECIS);
                this.columnCTRPHEIGHT = new global::System.Data.DataColumn("CTRPHEIGHT", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCTRPHEIGHT);
                this.columnELEVAMETHO = new global::System.Data.DataColumn("ELEVAMETHO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnELEVAMETHO);
                this.columnELEVAQUALI = new global::System.Data.DataColumn("ELEVAQUALI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnELEVAQUALI);
                this.columnELEVASOURC = new global::System.Data.DataColumn("ELEVASOURC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnELEVASOURC);
                this.columnLOCATION = new global::System.Data.DataColumn("LOCATION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOCATION);
                this.columnCOMMENTS = new global::System.Data.DataColumn("COMMENTS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMMENTS);
                this.columnVARIOUS = new global::System.Data.DataColumn("VARIOUS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVARIOUS);
                this.columnXUTM = new global::System.Data.DataColumn("XUTM", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnXUTM);
                this.columnYUTM = new global::System.Data.DataColumn("YUTM", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYUTM);
                this.columnUTMZONE = new global::System.Data.DataColumn("UTMZONE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUTMZONE);
                this.columnDATUM = new global::System.Data.DataColumn("DATUM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATUM);
                this.columnMAPSHEET = new global::System.Data.DataColumn("MAPSHEET", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAPSHEET);
                this.columnMAPDISTX = new global::System.Data.DataColumn("MAPDISTX", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAPDISTX);
                this.columnMAPDISTY = new global::System.Data.DataColumn("MAPDISTY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAPDISTY);
                this.columnSYS34X = new global::System.Data.DataColumn("SYS34X", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSYS34X);
                this.columnSYS34Y = new global::System.Data.DataColumn("SYS34Y", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSYS34Y);
                this.columnSYS34ZONE = new global::System.Data.DataColumn("SYS34ZONE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSYS34ZONE);
                this.columnLATITUDE = new global::System.Data.DataColumn("LATITUDE", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLATITUDE);
                this.columnLONGITUDE = new global::System.Data.DataColumn("LONGITUDE", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLONGITUDE);
                this.columnLOCATMETHO = new global::System.Data.DataColumn("LOCATMETHO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOCATMETHO);
                this.columnLOCATQUALI = new global::System.Data.DataColumn("LOCATQUALI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOCATQUALI);
                this.columnLOCATSOURC = new global::System.Data.DataColumn("LOCATSOURC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOCATSOURC);
                this.columnBORHPOSTC = new global::System.Data.DataColumn("BORHPOSTC", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBORHPOSTC);
                this.columnBORHTOWNNO = new global::System.Data.DataColumn("BORHTOWNNO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBORHTOWNNO);
                this.columnCOUNTYNO = new global::System.Data.DataColumn("COUNTYNO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOUNTYNO);
                this.columnMUNICIPAL = new global::System.Data.DataColumn("MUNICIPAL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMUNICIPAL);
                this.columnHOUSEOWNAS = new global::System.Data.DataColumn("HOUSEOWNAS", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHOUSEOWNAS);
                this.columnLANDREGNO = new global::System.Data.DataColumn("LANDREGNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLANDREGNO);
                this.columnDRILLER = new global::System.Data.DataColumn("DRILLER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDRILLER);
                this.columnDRILLLOGNO = new global::System.Data.DataColumn("DRILLLOGNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDRILLLOGNO);
                this.columnDRILLBORNO = new global::System.Data.DataColumn("DRILLBORNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDRILLBORNO);
                this.columnREPORTEDBY = new global::System.Data.DataColumn("REPORTEDBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREPORTEDBY);
                this.columnCONSULTANT = new global::System.Data.DataColumn("CONSULTANT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCONSULTANT);
                this.columnCONSULOGNO = new global::System.Data.DataColumn("CONSULOGNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCONSULOGNO);
                this.columnCONSUBORNO = new global::System.Data.DataColumn("CONSUBORNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCONSUBORNO);
                this.columnDRILLEDFOR = new global::System.Data.DataColumn("DRILLEDFOR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDRILLEDFOR);
                this.columnDRFORADRES = new global::System.Data.DataColumn("DRFORADRES", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDRFORADRES);
                this.columnDRFORPOSTC = new global::System.Data.DataColumn("DRFORPOSTC", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDRFORPOSTC);
                this.columnDRILSTDATE = new global::System.Data.DataColumn("DRILSTDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDRILSTDATE);
                this.columnDRILENDATE = new global::System.Data.DataColumn("DRILENDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDRILENDATE);
                this.columnABANDONDAT = new global::System.Data.DataColumn("ABANDONDAT", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnABANDONDAT);
                this.columnPREVBORHNO = new global::System.Data.DataColumn("PREVBORHNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPREVBORHNO);
                this.columnNUMSUPLBOR = new global::System.Data.DataColumn("NUMSUPLBOR", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUMSUPLBOR);
                this.columnSAMRECEDAT = new global::System.Data.DataColumn("SAMRECEDAT", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAMRECEDAT);
                this.columnSAMDESCDAT = new global::System.Data.DataColumn("SAMDESCDAT", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAMDESCDAT);
                this.columnNUMOFSAMPL = new global::System.Data.DataColumn("NUMOFSAMPL", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUMOFSAMPL);
                this.columnNUMSAMSTO = new global::System.Data.DataColumn("NUMSAMSTO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUMSAMSTO);
                this.columnLITHOLNOTE = new global::System.Data.DataColumn("LITHOLNOTE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLITHOLNOTE);
                this.columnTOGEUSDATE = new global::System.Data.DataColumn("TOGEUSDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOGEUSDATE);
                this.columnGRUMOCOUNTYNO = new global::System.Data.DataColumn("GRUMOCOUNTYNO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGRUMOCOUNTYNO);
                this.columnGRUMOBORNO = new global::System.Data.DataColumn("GRUMOBORNO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGRUMOBORNO);
                this.columnGRUMOBORTYPE = new global::System.Data.DataColumn("GRUMOBORTYPE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGRUMOBORTYPE);
                this.columnGRUMOAREANO = new global::System.Data.DataColumn("GRUMOAREANO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGRUMOAREANO);
                this.columnBORHTOWNNO2007 = new global::System.Data.DataColumn("BORHTOWNNO2007", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBORHTOWNNO2007);
                this.columnLOCQUALI = new global::System.Data.DataColumn("LOCQUALI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOCQUALI);
                this.columnLOOPAREANO = new global::System.Data.DataColumn("LOOPAREANO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOOPAREANO);
                this.columnLOOPSTATION = new global::System.Data.DataColumn("LOOPSTATION", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOOPSTATION);
                this.columnLOOPTYPE = new global::System.Data.DataColumn("LOOPTYPE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOOPTYPE);
                this.columnUSECHANGEDATE = new global::System.Data.DataColumn("USECHANGEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSECHANGEDATE);
                this.columnENVCEN = new global::System.Data.DataColumn("ENVCEN", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnENVCEN);
                this.columnABANDCAUSE = new global::System.Data.DataColumn("ABANDCAUSE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnABANDCAUSE);
                this.columnABANDCONTR = new global::System.Data.DataColumn("ABANDCONTR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnABANDCONTR);
                this.columnSTARTDAYUNKNOWN = new global::System.Data.DataColumn("STARTDAYUNKNOWN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTARTDAYUNKNOWN);
                this.columnSTARTMNTHUNKNWN = new global::System.Data.DataColumn("STARTMNTHUNKNWN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTARTMNTHUNKNWN);
                this.columnWWBOREHOLENO = new global::System.Data.DataColumn("WWBOREHOLENO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWWBOREHOLENO);
                this.columnXUTM32EUREF89 = new global::System.Data.DataColumn("XUTM32EUREF89", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnXUTM32EUREF89);
                this.columnYUTM32EUREF89 = new global::System.Data.DataColumn("YUTM32EUREF89", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYUTM32EUREF89);
                this.columnZDVR90 = new global::System.Data.DataColumn("ZDVR90", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZDVR90);
                this.columnINSTALLATION = new global::System.Data.DataColumn("INSTALLATION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINSTALLATION);
                this.columnWORKINGCONDITIONS = new global::System.Data.DataColumn("WORKINGCONDITIONS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWORKINGCONDITIONS);
                this.columnAPPROACH = new global::System.Data.DataColumn("APPROACH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAPPROACH);
                this.columnACCESSREMARK = new global::System.Data.DataColumn("ACCESSREMARK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCESSREMARK);
                this.columnLOCATEPERSONEMAIL = new global::System.Data.DataColumn("LOCATEPERSONEMAIL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOCATEPERSONEMAIL);
                this.columnPRESERVATIONZONE = new global::System.Data.DataColumn("PRESERVATIONZONE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRESERVATIONZONE);
                this.columnPROTECTIONZONE = new global::System.Data.DataColumn("PROTECTIONZONE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROTECTIONZONE);
                this.columnREGION = new global::System.Data.DataColumn("REGION", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREGION);
                this.columnUSECHANGECAUSE = new global::System.Data.DataColumn("USECHANGECAUSE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSECHANGECAUSE);
                this.columnINSERTDATE = new global::System.Data.DataColumn("INSERTDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINSERTDATE);
                this.columnUPDATEDATE = new global::System.Data.DataColumn("UPDATEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUPDATEDATE);
                this.columnINSERTUSER = new global::System.Data.DataColumn("INSERTUSER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINSERTUSER);
                this.columnUPDATEUSER = new global::System.Data.DataColumn("UPDATEUSER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUPDATEUSER);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnBOREHOLENO}, true));
                this.columnBOREHOLENO.AllowDBNull = false;
                this.columnBOREHOLENO.Unique = true;
                this.columnBOREHOLENO.MaxLength = 10;
                this.columnNAMINGSYS.MaxLength = 10;
                this.columnPURPOSE.MaxLength = 2;
                this.columnUSE.MaxLength = 2;
                this.columnSTATUS.MaxLength = 2;
                this.columnVERTICAREF.MaxLength = 5;
                this.columnCTRPDESCR.MaxLength = 2;
                this.columnELEVAMETHO.MaxLength = 2;
                this.columnELEVAQUALI.MaxLength = 2;
                this.columnELEVASOURC.MaxLength = 1;
                this.columnLOCATION.MaxLength = 128;
                this.columnCOMMENTS.MaxLength = 60;
                this.columnVARIOUS.MaxLength = 20;
                this.columnDATUM.MaxLength = 7;
                this.columnMAPSHEET.MaxLength = 9;
                this.columnLOCATMETHO.MaxLength = 3;
                this.columnLOCATQUALI.MaxLength = 2;
                this.columnLOCATSOURC.MaxLength = 2;
                this.columnMUNICIPAL.MaxLength = 25;
                this.columnLANDREGNO.MaxLength = 10;
                this.columnDRILLER.MaxLength = 18;
                this.columnDRILLLOGNO.MaxLength = 20;
                this.columnDRILLBORNO.MaxLength = 20;
                this.columnREPORTEDBY.MaxLength = 1;
                this.columnCONSULTANT.MaxLength = 20;
                this.columnCONSULOGNO.MaxLength = 20;
                this.columnCONSUBORNO.MaxLength = 20;
                this.columnDRILLEDFOR.MaxLength = 50;
                this.columnDRFORADRES.MaxLength = 50;
                this.columnPREVBORHNO.MaxLength = 10;
                this.columnLITHOLNOTE.MaxLength = 255;
                this.columnLOCQUALI.MaxLength = 2;
                this.columnABANDCAUSE.MaxLength = 1;
                this.columnABANDCONTR.MaxLength = 18;
                this.columnSTARTDAYUNKNOWN.MaxLength = 4;
                this.columnSTARTMNTHUNKNWN.MaxLength = 4;
                this.columnWWBOREHOLENO.MaxLength = 20;
                this.columnINSTALLATION.MaxLength = 2;
                this.columnWORKINGCONDITIONS.MaxLength = 2;
                this.columnAPPROACH.MaxLength = 2;
                this.columnACCESSREMARK.MaxLength = 255;
                this.columnLOCATEPERSONEMAIL.MaxLength = 64;
                this.columnINSERTUSER.MaxLength = 50;
                this.columnUPDATEUSER.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BOREHOLERow NewBOREHOLERow() {
                return ((BOREHOLERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BOREHOLERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(BOREHOLERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BOREHOLERowChanged != null)) {
                    this.BOREHOLERowChanged(this, new BOREHOLERowChangeEvent(((BOREHOLERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BOREHOLERowChanging != null)) {
                    this.BOREHOLERowChanging(this, new BOREHOLERowChangeEvent(((BOREHOLERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BOREHOLERowDeleted != null)) {
                    this.BOREHOLERowDeleted(this, new BOREHOLERowChangeEvent(((BOREHOLERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BOREHOLERowDeleting != null)) {
                    this.BOREHOLERowDeleting(this, new BOREHOLERowChangeEvent(((BOREHOLERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveBOREHOLERow(BOREHOLERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BOREHOLEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class INTAKEDataTable : global::System.Data.TypedTableBase<INTAKERow> {
            
            private global::System.Data.DataColumn columnBOREHOLENO;
            
            private global::System.Data.DataColumn columnINTAKENO;
            
            private global::System.Data.DataColumn columnSTRINGNO;
            
            private global::System.Data.DataColumn columnWATERAGE;
            
            private global::System.Data.DataColumn columnDEPOSITNO;
            
            private global::System.Data.DataColumn columnDEPOSITTYPE;
            
            private global::System.Data.DataColumn columnMAINCLASS;
            
            private global::System.Data.DataColumn columnMONITORINGTYPE;
            
            private global::System.Data.DataColumn columnRESERVOIRROCK;
            
            private global::System.Data.DataColumn columnRESERVOIRTYPE;
            
            private global::System.Data.DataColumn columnSPECIALUSABLE;
            
            private global::System.Data.DataColumn columnWATERTABLETYPE;
            
            private global::System.Data.DataColumn columnSOUNDABILITY;
            
            private global::System.Data.DataColumn columnSOUNDABILITYREMARK;
            
            private global::System.Data.DataColumn columnSOUNDTUBEINSIDEDIAM;
            
            private global::System.Data.DataColumn columnINSERTDATE;
            
            private global::System.Data.DataColumn columnUPDATEDATE;
            
            private global::System.Data.DataColumn columnINSERTUSER;
            
            private global::System.Data.DataColumn columnUPDATEUSER;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public INTAKEDataTable() {
                this.TableName = "INTAKE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal INTAKEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected INTAKEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BOREHOLENOColumn {
                get {
                    return this.columnBOREHOLENO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INTAKENOColumn {
                get {
                    return this.columnINTAKENO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STRINGNOColumn {
                get {
                    return this.columnSTRINGNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WATERAGEColumn {
                get {
                    return this.columnWATERAGE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEPOSITNOColumn {
                get {
                    return this.columnDEPOSITNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEPOSITTYPEColumn {
                get {
                    return this.columnDEPOSITTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAINCLASSColumn {
                get {
                    return this.columnMAINCLASS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MONITORINGTYPEColumn {
                get {
                    return this.columnMONITORINGTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RESERVOIRROCKColumn {
                get {
                    return this.columnRESERVOIRROCK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RESERVOIRTYPEColumn {
                get {
                    return this.columnRESERVOIRTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SPECIALUSABLEColumn {
                get {
                    return this.columnSPECIALUSABLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WATERTABLETYPEColumn {
                get {
                    return this.columnWATERTABLETYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SOUNDABILITYColumn {
                get {
                    return this.columnSOUNDABILITY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SOUNDABILITYREMARKColumn {
                get {
                    return this.columnSOUNDABILITYREMARK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SOUNDTUBEINSIDEDIAMColumn {
                get {
                    return this.columnSOUNDTUBEINSIDEDIAM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INSERTDATEColumn {
                get {
                    return this.columnINSERTDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UPDATEDATEColumn {
                get {
                    return this.columnUPDATEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INSERTUSERColumn {
                get {
                    return this.columnINSERTUSER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UPDATEUSERColumn {
                get {
                    return this.columnUPDATEUSER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public INTAKERow this[int index] {
                get {
                    return ((INTAKERow)(this.Rows[index]));
                }
            }
            
            public event INTAKERowChangeEventHandler INTAKERowChanging;
            
            public event INTAKERowChangeEventHandler INTAKERowChanged;
            
            public event INTAKERowChangeEventHandler INTAKERowDeleting;
            
            public event INTAKERowChangeEventHandler INTAKERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddINTAKERow(INTAKERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public INTAKERow AddINTAKERow(
                        BOREHOLERow parentBOREHOLERowByRINTAKE_BOREHOLE, 
                        int INTAKENO, 
                        int STRINGNO, 
                        string WATERAGE, 
                        string DEPOSITNO, 
                        int DEPOSITTYPE, 
                        string MAINCLASS, 
                        int MONITORINGTYPE, 
                        string RESERVOIRROCK, 
                        int RESERVOIRTYPE, 
                        string SPECIALUSABLE, 
                        int WATERTABLETYPE, 
                        string SOUNDABILITY, 
                        string SOUNDABILITYREMARK, 
                        double SOUNDTUBEINSIDEDIAM, 
                        System.DateTime INSERTDATE, 
                        System.DateTime UPDATEDATE, 
                        string INSERTUSER, 
                        string UPDATEUSER) {
                INTAKERow rowINTAKERow = ((INTAKERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        INTAKENO,
                        STRINGNO,
                        WATERAGE,
                        DEPOSITNO,
                        DEPOSITTYPE,
                        MAINCLASS,
                        MONITORINGTYPE,
                        RESERVOIRROCK,
                        RESERVOIRTYPE,
                        SPECIALUSABLE,
                        WATERTABLETYPE,
                        SOUNDABILITY,
                        SOUNDABILITYREMARK,
                        SOUNDTUBEINSIDEDIAM,
                        INSERTDATE,
                        UPDATEDATE,
                        INSERTUSER,
                        UPDATEUSER};
                if ((parentBOREHOLERowByRINTAKE_BOREHOLE != null)) {
                    columnValuesArray[0] = parentBOREHOLERowByRINTAKE_BOREHOLE[0];
                }
                rowINTAKERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowINTAKERow);
                return rowINTAKERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public INTAKERow FindByBOREHOLENOINTAKENO(string BOREHOLENO, int INTAKENO) {
                return ((INTAKERow)(this.Rows.Find(new object[] {
                            BOREHOLENO,
                            INTAKENO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                INTAKEDataTable cln = ((INTAKEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new INTAKEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnBOREHOLENO = base.Columns["BOREHOLENO"];
                this.columnINTAKENO = base.Columns["INTAKENO"];
                this.columnSTRINGNO = base.Columns["STRINGNO"];
                this.columnWATERAGE = base.Columns["WATERAGE"];
                this.columnDEPOSITNO = base.Columns["DEPOSITNO"];
                this.columnDEPOSITTYPE = base.Columns["DEPOSITTYPE"];
                this.columnMAINCLASS = base.Columns["MAINCLASS"];
                this.columnMONITORINGTYPE = base.Columns["MONITORINGTYPE"];
                this.columnRESERVOIRROCK = base.Columns["RESERVOIRROCK"];
                this.columnRESERVOIRTYPE = base.Columns["RESERVOIRTYPE"];
                this.columnSPECIALUSABLE = base.Columns["SPECIALUSABLE"];
                this.columnWATERTABLETYPE = base.Columns["WATERTABLETYPE"];
                this.columnSOUNDABILITY = base.Columns["SOUNDABILITY"];
                this.columnSOUNDABILITYREMARK = base.Columns["SOUNDABILITYREMARK"];
                this.columnSOUNDTUBEINSIDEDIAM = base.Columns["SOUNDTUBEINSIDEDIAM"];
                this.columnINSERTDATE = base.Columns["INSERTDATE"];
                this.columnUPDATEDATE = base.Columns["UPDATEDATE"];
                this.columnINSERTUSER = base.Columns["INSERTUSER"];
                this.columnUPDATEUSER = base.Columns["UPDATEUSER"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnBOREHOLENO = new global::System.Data.DataColumn("BOREHOLENO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBOREHOLENO);
                this.columnINTAKENO = new global::System.Data.DataColumn("INTAKENO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINTAKENO);
                this.columnSTRINGNO = new global::System.Data.DataColumn("STRINGNO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTRINGNO);
                this.columnWATERAGE = new global::System.Data.DataColumn("WATERAGE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWATERAGE);
                this.columnDEPOSITNO = new global::System.Data.DataColumn("DEPOSITNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPOSITNO);
                this.columnDEPOSITTYPE = new global::System.Data.DataColumn("DEPOSITTYPE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPOSITTYPE);
                this.columnMAINCLASS = new global::System.Data.DataColumn("MAINCLASS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAINCLASS);
                this.columnMONITORINGTYPE = new global::System.Data.DataColumn("MONITORINGTYPE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMONITORINGTYPE);
                this.columnRESERVOIRROCK = new global::System.Data.DataColumn("RESERVOIRROCK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRESERVOIRROCK);
                this.columnRESERVOIRTYPE = new global::System.Data.DataColumn("RESERVOIRTYPE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRESERVOIRTYPE);
                this.columnSPECIALUSABLE = new global::System.Data.DataColumn("SPECIALUSABLE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSPECIALUSABLE);
                this.columnWATERTABLETYPE = new global::System.Data.DataColumn("WATERTABLETYPE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWATERTABLETYPE);
                this.columnSOUNDABILITY = new global::System.Data.DataColumn("SOUNDABILITY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOUNDABILITY);
                this.columnSOUNDABILITYREMARK = new global::System.Data.DataColumn("SOUNDABILITYREMARK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOUNDABILITYREMARK);
                this.columnSOUNDTUBEINSIDEDIAM = new global::System.Data.DataColumn("SOUNDTUBEINSIDEDIAM", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOUNDTUBEINSIDEDIAM);
                this.columnINSERTDATE = new global::System.Data.DataColumn("INSERTDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINSERTDATE);
                this.columnUPDATEDATE = new global::System.Data.DataColumn("UPDATEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUPDATEDATE);
                this.columnINSERTUSER = new global::System.Data.DataColumn("INSERTUSER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINSERTUSER);
                this.columnUPDATEUSER = new global::System.Data.DataColumn("UPDATEUSER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUPDATEUSER);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnBOREHOLENO,
                                this.columnINTAKENO}, true));
                this.columnBOREHOLENO.AllowDBNull = false;
                this.columnBOREHOLENO.MaxLength = 10;
                this.columnINTAKENO.AllowDBNull = false;
                this.columnWATERAGE.MaxLength = 1;
                this.columnDEPOSITNO.MaxLength = 22;
                this.columnMAINCLASS.MaxLength = 1;
                this.columnRESERVOIRROCK.MaxLength = 2;
                this.columnSPECIALUSABLE.MaxLength = 1;
                this.columnSOUNDABILITY.MaxLength = 4;
                this.columnSOUNDABILITYREMARK.MaxLength = 255;
                this.columnINSERTUSER.MaxLength = 50;
                this.columnUPDATEUSER.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public INTAKERow NewINTAKERow() {
                return ((INTAKERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new INTAKERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(INTAKERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.INTAKERowChanged != null)) {
                    this.INTAKERowChanged(this, new INTAKERowChangeEvent(((INTAKERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.INTAKERowChanging != null)) {
                    this.INTAKERowChanging(this, new INTAKERowChangeEvent(((INTAKERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.INTAKERowDeleted != null)) {
                    this.INTAKERowDeleted(this, new INTAKERowChangeEvent(((INTAKERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.INTAKERowDeleting != null)) {
                    this.INTAKERowDeleting(this, new INTAKERowChangeEvent(((INTAKERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveINTAKERow(INTAKERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "INTAKEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class WATLEVELDataTable : global::System.Data.TypedTableBase<WATLEVELRow> {
            
            private global::System.Data.DataColumn columnBOREHOLENO;
            
            private global::System.Data.DataColumn columnWATLEVELNO;
            
            private global::System.Data.DataColumn columnINTAKENO;
            
            private global::System.Data.DataColumn columnTIMEOFMEAS;
            
            private global::System.Data.DataColumn columnPROJECT;
            
            private global::System.Data.DataColumn columnWATERLEVEL;
            
            private global::System.Data.DataColumn columnWATLEVGRSU;
            
            private global::System.Data.DataColumn columnWATLEVMSL;
            
            private global::System.Data.DataColumn columnWATLEVMP;
            
            private global::System.Data.DataColumn columnHOURSNOPUM;
            
            private global::System.Data.DataColumn columnCATEGORY;
            
            private global::System.Data.DataColumn columnMETHOD;
            
            private global::System.Data.DataColumn columnQUALITY;
            
            private global::System.Data.DataColumn columnREFPOINT;
            
            private global::System.Data.DataColumn columnREMARK;
            
            private global::System.Data.DataColumn columnVERTICAREF;
            
            private global::System.Data.DataColumn columnATMOSPRESSHPA;
            
            private global::System.Data.DataColumn columnEXTREMES;
            
            private global::System.Data.DataColumn columnSITUATION;
            
            private global::System.Data.DataColumn columnWATLEVELROUNDNO;
            
            private global::System.Data.DataColumn columnINSERTDATE;
            
            private global::System.Data.DataColumn columnUPDATEDATE;
            
            private global::System.Data.DataColumn columnINSERTUSER;
            
            private global::System.Data.DataColumn columnUPDATEUSER;
            
            private global::System.Data.DataColumn columnDATAOWNER;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WATLEVELDataTable() {
                this.TableName = "WATLEVEL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WATLEVELDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected WATLEVELDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BOREHOLENOColumn {
                get {
                    return this.columnBOREHOLENO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WATLEVELNOColumn {
                get {
                    return this.columnWATLEVELNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INTAKENOColumn {
                get {
                    return this.columnINTAKENO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TIMEOFMEASColumn {
                get {
                    return this.columnTIMEOFMEAS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PROJECTColumn {
                get {
                    return this.columnPROJECT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WATERLEVELColumn {
                get {
                    return this.columnWATERLEVEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WATLEVGRSUColumn {
                get {
                    return this.columnWATLEVGRSU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WATLEVMSLColumn {
                get {
                    return this.columnWATLEVMSL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WATLEVMPColumn {
                get {
                    return this.columnWATLEVMP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HOURSNOPUMColumn {
                get {
                    return this.columnHOURSNOPUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CATEGORYColumn {
                get {
                    return this.columnCATEGORY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn METHODColumn {
                get {
                    return this.columnMETHOD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QUALITYColumn {
                get {
                    return this.columnQUALITY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn REFPOINTColumn {
                get {
                    return this.columnREFPOINT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn REMARKColumn {
                get {
                    return this.columnREMARK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VERTICAREFColumn {
                get {
                    return this.columnVERTICAREF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ATMOSPRESSHPAColumn {
                get {
                    return this.columnATMOSPRESSHPA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EXTREMESColumn {
                get {
                    return this.columnEXTREMES;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SITUATIONColumn {
                get {
                    return this.columnSITUATION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WATLEVELROUNDNOColumn {
                get {
                    return this.columnWATLEVELROUNDNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INSERTDATEColumn {
                get {
                    return this.columnINSERTDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UPDATEDATEColumn {
                get {
                    return this.columnUPDATEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INSERTUSERColumn {
                get {
                    return this.columnINSERTUSER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UPDATEUSERColumn {
                get {
                    return this.columnUPDATEUSER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DATAOWNERColumn {
                get {
                    return this.columnDATAOWNER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WATLEVELRow this[int index] {
                get {
                    return ((WATLEVELRow)(this.Rows[index]));
                }
            }
            
            public event WATLEVELRowChangeEventHandler WATLEVELRowChanging;
            
            public event WATLEVELRowChangeEventHandler WATLEVELRowChanged;
            
            public event WATLEVELRowChangeEventHandler WATLEVELRowDeleting;
            
            public event WATLEVELRowChangeEventHandler WATLEVELRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddWATLEVELRow(WATLEVELRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WATLEVELRow AddWATLEVELRow(
                        string BOREHOLENO, 
                        int WATLEVELNO, 
                        int INTAKENO, 
                        System.DateTime TIMEOFMEAS, 
                        string PROJECT, 
                        double WATERLEVEL, 
                        double WATLEVGRSU, 
                        double WATLEVMSL, 
                        double WATLEVMP, 
                        double HOURSNOPUM, 
                        string CATEGORY, 
                        string METHOD, 
                        string QUALITY, 
                        string REFPOINT, 
                        string REMARK, 
                        string VERTICAREF, 
                        float ATMOSPRESSHPA, 
                        string EXTREMES, 
                        int SITUATION, 
                        int WATLEVELROUNDNO, 
                        System.DateTime INSERTDATE, 
                        System.DateTime UPDATEDATE, 
                        string INSERTUSER, 
                        string UPDATEUSER, 
                        string DATAOWNER) {
                WATLEVELRow rowWATLEVELRow = ((WATLEVELRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        BOREHOLENO,
                        WATLEVELNO,
                        INTAKENO,
                        TIMEOFMEAS,
                        PROJECT,
                        WATERLEVEL,
                        WATLEVGRSU,
                        WATLEVMSL,
                        WATLEVMP,
                        HOURSNOPUM,
                        CATEGORY,
                        METHOD,
                        QUALITY,
                        REFPOINT,
                        REMARK,
                        VERTICAREF,
                        ATMOSPRESSHPA,
                        EXTREMES,
                        SITUATION,
                        WATLEVELROUNDNO,
                        INSERTDATE,
                        UPDATEDATE,
                        INSERTUSER,
                        UPDATEUSER,
                        DATAOWNER};
                rowWATLEVELRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowWATLEVELRow);
                return rowWATLEVELRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WATLEVELRow FindByBOREHOLENOWATLEVELNO(string BOREHOLENO, int WATLEVELNO) {
                return ((WATLEVELRow)(this.Rows.Find(new object[] {
                            BOREHOLENO,
                            WATLEVELNO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                WATLEVELDataTable cln = ((WATLEVELDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new WATLEVELDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnBOREHOLENO = base.Columns["BOREHOLENO"];
                this.columnWATLEVELNO = base.Columns["WATLEVELNO"];
                this.columnINTAKENO = base.Columns["INTAKENO"];
                this.columnTIMEOFMEAS = base.Columns["TIMEOFMEAS"];
                this.columnPROJECT = base.Columns["PROJECT"];
                this.columnWATERLEVEL = base.Columns["WATERLEVEL"];
                this.columnWATLEVGRSU = base.Columns["WATLEVGRSU"];
                this.columnWATLEVMSL = base.Columns["WATLEVMSL"];
                this.columnWATLEVMP = base.Columns["WATLEVMP"];
                this.columnHOURSNOPUM = base.Columns["HOURSNOPUM"];
                this.columnCATEGORY = base.Columns["CATEGORY"];
                this.columnMETHOD = base.Columns["METHOD"];
                this.columnQUALITY = base.Columns["QUALITY"];
                this.columnREFPOINT = base.Columns["REFPOINT"];
                this.columnREMARK = base.Columns["REMARK"];
                this.columnVERTICAREF = base.Columns["VERTICAREF"];
                this.columnATMOSPRESSHPA = base.Columns["ATMOSPRESSHPA"];
                this.columnEXTREMES = base.Columns["EXTREMES"];
                this.columnSITUATION = base.Columns["SITUATION"];
                this.columnWATLEVELROUNDNO = base.Columns["WATLEVELROUNDNO"];
                this.columnINSERTDATE = base.Columns["INSERTDATE"];
                this.columnUPDATEDATE = base.Columns["UPDATEDATE"];
                this.columnINSERTUSER = base.Columns["INSERTUSER"];
                this.columnUPDATEUSER = base.Columns["UPDATEUSER"];
                this.columnDATAOWNER = base.Columns["DATAOWNER"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnBOREHOLENO = new global::System.Data.DataColumn("BOREHOLENO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBOREHOLENO);
                this.columnWATLEVELNO = new global::System.Data.DataColumn("WATLEVELNO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWATLEVELNO);
                this.columnINTAKENO = new global::System.Data.DataColumn("INTAKENO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINTAKENO);
                this.columnTIMEOFMEAS = new global::System.Data.DataColumn("TIMEOFMEAS", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIMEOFMEAS);
                this.columnPROJECT = new global::System.Data.DataColumn("PROJECT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROJECT);
                this.columnWATERLEVEL = new global::System.Data.DataColumn("WATERLEVEL", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWATERLEVEL);
                this.columnWATLEVGRSU = new global::System.Data.DataColumn("WATLEVGRSU", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWATLEVGRSU);
                this.columnWATLEVMSL = new global::System.Data.DataColumn("WATLEVMSL", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWATLEVMSL);
                this.columnWATLEVMP = new global::System.Data.DataColumn("WATLEVMP", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWATLEVMP);
                this.columnHOURSNOPUM = new global::System.Data.DataColumn("HOURSNOPUM", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHOURSNOPUM);
                this.columnCATEGORY = new global::System.Data.DataColumn("CATEGORY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCATEGORY);
                this.columnMETHOD = new global::System.Data.DataColumn("METHOD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMETHOD);
                this.columnQUALITY = new global::System.Data.DataColumn("QUALITY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQUALITY);
                this.columnREFPOINT = new global::System.Data.DataColumn("REFPOINT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREFPOINT);
                this.columnREMARK = new global::System.Data.DataColumn("REMARK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREMARK);
                this.columnVERTICAREF = new global::System.Data.DataColumn("VERTICAREF", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVERTICAREF);
                this.columnATMOSPRESSHPA = new global::System.Data.DataColumn("ATMOSPRESSHPA", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATMOSPRESSHPA);
                this.columnEXTREMES = new global::System.Data.DataColumn("EXTREMES", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXTREMES);
                this.columnSITUATION = new global::System.Data.DataColumn("SITUATION", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSITUATION);
                this.columnWATLEVELROUNDNO = new global::System.Data.DataColumn("WATLEVELROUNDNO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWATLEVELROUNDNO);
                this.columnINSERTDATE = new global::System.Data.DataColumn("INSERTDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINSERTDATE);
                this.columnUPDATEDATE = new global::System.Data.DataColumn("UPDATEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUPDATEDATE);
                this.columnINSERTUSER = new global::System.Data.DataColumn("INSERTUSER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINSERTUSER);
                this.columnUPDATEUSER = new global::System.Data.DataColumn("UPDATEUSER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUPDATEUSER);
                this.columnDATAOWNER = new global::System.Data.DataColumn("DATAOWNER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATAOWNER);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnBOREHOLENO,
                                this.columnWATLEVELNO}, true));
                this.columnBOREHOLENO.AllowDBNull = false;
                this.columnBOREHOLENO.MaxLength = 10;
                this.columnWATLEVELNO.AllowDBNull = false;
                this.columnPROJECT.MaxLength = 5;
                this.columnCATEGORY.MaxLength = 1;
                this.columnMETHOD.MaxLength = 1;
                this.columnQUALITY.MaxLength = 1;
                this.columnREFPOINT.MaxLength = 1;
                this.columnREMARK.MaxLength = 60;
                this.columnVERTICAREF.MaxLength = 7;
                this.columnEXTREMES.MaxLength = 1;
                this.columnINSERTUSER.MaxLength = 50;
                this.columnUPDATEUSER.MaxLength = 50;
                this.columnDATAOWNER.MaxLength = 2;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WATLEVELRow NewWATLEVELRow() {
                return ((WATLEVELRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new WATLEVELRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(WATLEVELRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.WATLEVELRowChanged != null)) {
                    this.WATLEVELRowChanged(this, new WATLEVELRowChangeEvent(((WATLEVELRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.WATLEVELRowChanging != null)) {
                    this.WATLEVELRowChanging(this, new WATLEVELRowChangeEvent(((WATLEVELRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.WATLEVELRowDeleted != null)) {
                    this.WATLEVELRowDeleted(this, new WATLEVELRowChangeEvent(((WATLEVELRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.WATLEVELRowDeleting != null)) {
                    this.WATLEVELRowDeleting(this, new WATLEVELRowChangeEvent(((WATLEVELRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveWATLEVELRow(WATLEVELRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "WATLEVELDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class BOREHOLERow : global::System.Data.DataRow {
            
            private BOREHOLEDataTable tableBOREHOLE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BOREHOLERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBOREHOLE = ((BOREHOLEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BOREHOLENO {
                get {
                    return ((string)(this[this.tableBOREHOLE.BOREHOLENOColumn]));
                }
                set {
                    this[this.tableBOREHOLE.BOREHOLENOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NAMINGSYS {
                get {
                    try {
                        return ((string)(this[this.tableBOREHOLE.NAMINGSYSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NAMINGSYS\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.NAMINGSYSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PURPOSE {
                get {
                    try {
                        return ((string)(this[this.tableBOREHOLE.PURPOSEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PURPOSE\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.PURPOSEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USE {
                get {
                    try {
                        return ((string)(this[this.tableBOREHOLE.USEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USE\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.USEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string STATUS {
                get {
                    try {
                        return ((string)(this[this.tableBOREHOLE.STATUSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STATUS\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.STATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DRILLDEPTH {
                get {
                    try {
                        return ((double)(this[this.tableBOREHOLE.DRILLDEPTHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DRILLDEPTH\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.DRILLDEPTHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ELEVATION {
                get {
                    try {
                        return ((double)(this[this.tableBOREHOLE.ELEVATIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ELEVATION\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.ELEVATIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double CTRPELEVA {
                get {
                    try {
                        return ((double)(this[this.tableBOREHOLE.CTRPELEVAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CTRPELEVA\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.CTRPELEVAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VERTICAREF {
                get {
                    try {
                        return ((string)(this[this.tableBOREHOLE.VERTICAREFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VERTICAREF\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.VERTICAREFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CTRPDESCR {
                get {
                    try {
                        return ((string)(this[this.tableBOREHOLE.CTRPDESCRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CTRPDESCR\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.CTRPDESCRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float CTRPPRECIS {
                get {
                    try {
                        return ((float)(this[this.tableBOREHOLE.CTRPPRECISColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CTRPPRECIS\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.CTRPPRECISColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float CTRPZPRECIS {
                get {
                    try {
                        return ((float)(this[this.tableBOREHOLE.CTRPZPRECISColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CTRPZPRECIS\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.CTRPZPRECISColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float CTRPHEIGHT {
                get {
                    try {
                        return ((float)(this[this.tableBOREHOLE.CTRPHEIGHTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CTRPHEIGHT\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.CTRPHEIGHTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ELEVAMETHO {
                get {
                    try {
                        return ((string)(this[this.tableBOREHOLE.ELEVAMETHOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ELEVAMETHO\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.ELEVAMETHOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ELEVAQUALI {
                get {
                    try {
                        return ((string)(this[this.tableBOREHOLE.ELEVAQUALIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ELEVAQUALI\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.ELEVAQUALIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ELEVASOURC {
                get {
                    try {
                        return ((string)(this[this.tableBOREHOLE.ELEVASOURCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ELEVASOURC\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.ELEVASOURCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LOCATION {
                get {
                    try {
                        return ((string)(this[this.tableBOREHOLE.LOCATIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOCATION\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.LOCATIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COMMENTS {
                get {
                    try {
                        return ((string)(this[this.tableBOREHOLE.COMMENTSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COMMENTS\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.COMMENTSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VARIOUS {
                get {
                    try {
                        return ((string)(this[this.tableBOREHOLE.VARIOUSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VARIOUS\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.VARIOUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double XUTM {
                get {
                    try {
                        return ((double)(this[this.tableBOREHOLE.XUTMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'XUTM\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.XUTMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double YUTM {
                get {
                    try {
                        return ((double)(this[this.tableBOREHOLE.YUTMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'YUTM\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.YUTMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UTMZONE {
                get {
                    try {
                        return ((int)(this[this.tableBOREHOLE.UTMZONEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UTMZONE\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.UTMZONEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DATUM {
                get {
                    try {
                        return ((string)(this[this.tableBOREHOLE.DATUMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DATUM\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.DATUMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAPSHEET {
                get {
                    try {
                        return ((string)(this[this.tableBOREHOLE.MAPSHEETColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAPSHEET\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.MAPSHEETColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MAPDISTX {
                get {
                    try {
                        return ((double)(this[this.tableBOREHOLE.MAPDISTXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAPDISTX\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.MAPDISTXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MAPDISTY {
                get {
                    try {
                        return ((double)(this[this.tableBOREHOLE.MAPDISTYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAPDISTY\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.MAPDISTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SYS34X {
                get {
                    try {
                        return ((double)(this[this.tableBOREHOLE.SYS34XColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SYS34X\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.SYS34XColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SYS34Y {
                get {
                    try {
                        return ((double)(this[this.tableBOREHOLE.SYS34YColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SYS34Y\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.SYS34YColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SYS34ZONE {
                get {
                    try {
                        return ((int)(this[this.tableBOREHOLE.SYS34ZONEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SYS34ZONE\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.SYS34ZONEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double LATITUDE {
                get {
                    try {
                        return ((double)(this[this.tableBOREHOLE.LATITUDEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LATITUDE\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.LATITUDEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double LONGITUDE {
                get {
                    try {
                        return ((double)(this[this.tableBOREHOLE.LONGITUDEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LONGITUDE\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.LONGITUDEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LOCATMETHO {
                get {
                    try {
                        return ((string)(this[this.tableBOREHOLE.LOCATMETHOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOCATMETHO\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.LOCATMETHOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LOCATQUALI {
                get {
                    try {
                        return ((string)(this[this.tableBOREHOLE.LOCATQUALIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOCATQUALI\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.LOCATQUALIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LOCATSOURC {
                get {
                    try {
                        return ((string)(this[this.tableBOREHOLE.LOCATSOURCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOCATSOURC\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.LOCATSOURCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BORHPOSTC {
                get {
                    try {
                        return ((int)(this[this.tableBOREHOLE.BORHPOSTCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BORHPOSTC\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.BORHPOSTCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BORHTOWNNO {
                get {
                    try {
                        return ((int)(this[this.tableBOREHOLE.BORHTOWNNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BORHTOWNNO\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.BORHTOWNNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int COUNTYNO {
                get {
                    try {
                        return ((int)(this[this.tableBOREHOLE.COUNTYNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COUNTYNO\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.COUNTYNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MUNICIPAL {
                get {
                    try {
                        return ((string)(this[this.tableBOREHOLE.MUNICIPALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MUNICIPAL\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.MUNICIPALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int HOUSEOWNAS {
                get {
                    try {
                        return ((int)(this[this.tableBOREHOLE.HOUSEOWNASColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HOUSEOWNAS\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.HOUSEOWNASColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LANDREGNO {
                get {
                    try {
                        return ((string)(this[this.tableBOREHOLE.LANDREGNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LANDREGNO\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.LANDREGNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DRILLER {
                get {
                    try {
                        return ((string)(this[this.tableBOREHOLE.DRILLERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DRILLER\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.DRILLERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DRILLLOGNO {
                get {
                    try {
                        return ((string)(this[this.tableBOREHOLE.DRILLLOGNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DRILLLOGNO\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.DRILLLOGNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DRILLBORNO {
                get {
                    try {
                        return ((string)(this[this.tableBOREHOLE.DRILLBORNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DRILLBORNO\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.DRILLBORNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string REPORTEDBY {
                get {
                    try {
                        return ((string)(this[this.tableBOREHOLE.REPORTEDBYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REPORTEDBY\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.REPORTEDBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CONSULTANT {
                get {
                    try {
                        return ((string)(this[this.tableBOREHOLE.CONSULTANTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CONSULTANT\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.CONSULTANTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CONSULOGNO {
                get {
                    try {
                        return ((string)(this[this.tableBOREHOLE.CONSULOGNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CONSULOGNO\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.CONSULOGNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CONSUBORNO {
                get {
                    try {
                        return ((string)(this[this.tableBOREHOLE.CONSUBORNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CONSUBORNO\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.CONSUBORNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DRILLEDFOR {
                get {
                    try {
                        return ((string)(this[this.tableBOREHOLE.DRILLEDFORColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DRILLEDFOR\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.DRILLEDFORColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DRFORADRES {
                get {
                    try {
                        return ((string)(this[this.tableBOREHOLE.DRFORADRESColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DRFORADRES\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.DRFORADRESColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DRFORPOSTC {
                get {
                    try {
                        return ((int)(this[this.tableBOREHOLE.DRFORPOSTCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DRFORPOSTC\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.DRFORPOSTCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DRILSTDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBOREHOLE.DRILSTDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DRILSTDATE\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.DRILSTDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DRILENDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBOREHOLE.DRILENDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DRILENDATE\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.DRILENDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ABANDONDAT {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBOREHOLE.ABANDONDATColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ABANDONDAT\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.ABANDONDATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PREVBORHNO {
                get {
                    try {
                        return ((string)(this[this.tableBOREHOLE.PREVBORHNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PREVBORHNO\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.PREVBORHNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NUMSUPLBOR {
                get {
                    try {
                        return ((int)(this[this.tableBOREHOLE.NUMSUPLBORColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NUMSUPLBOR\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.NUMSUPLBORColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SAMRECEDAT {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBOREHOLE.SAMRECEDATColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SAMRECEDAT\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.SAMRECEDATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SAMDESCDAT {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBOREHOLE.SAMDESCDATColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SAMDESCDAT\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.SAMDESCDATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NUMOFSAMPL {
                get {
                    try {
                        return ((int)(this[this.tableBOREHOLE.NUMOFSAMPLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NUMOFSAMPL\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.NUMOFSAMPLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NUMSAMSTO {
                get {
                    try {
                        return ((int)(this[this.tableBOREHOLE.NUMSAMSTOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NUMSAMSTO\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.NUMSAMSTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LITHOLNOTE {
                get {
                    try {
                        return ((string)(this[this.tableBOREHOLE.LITHOLNOTEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LITHOLNOTE\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.LITHOLNOTEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TOGEUSDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBOREHOLE.TOGEUSDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TOGEUSDATE\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.TOGEUSDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GRUMOCOUNTYNO {
                get {
                    try {
                        return ((int)(this[this.tableBOREHOLE.GRUMOCOUNTYNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GRUMOCOUNTYNO\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.GRUMOCOUNTYNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GRUMOBORNO {
                get {
                    try {
                        return ((int)(this[this.tableBOREHOLE.GRUMOBORNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GRUMOBORNO\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.GRUMOBORNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GRUMOBORTYPE {
                get {
                    try {
                        return ((int)(this[this.tableBOREHOLE.GRUMOBORTYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GRUMOBORTYPE\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.GRUMOBORTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GRUMOAREANO {
                get {
                    try {
                        return ((int)(this[this.tableBOREHOLE.GRUMOAREANOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GRUMOAREANO\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.GRUMOAREANOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BORHTOWNNO2007 {
                get {
                    try {
                        return ((int)(this[this.tableBOREHOLE.BORHTOWNNO2007Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BORHTOWNNO2007\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.BORHTOWNNO2007Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LOCQUALI {
                get {
                    try {
                        return ((string)(this[this.tableBOREHOLE.LOCQUALIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOCQUALI\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.LOCQUALIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LOOPAREANO {
                get {
                    try {
                        return ((int)(this[this.tableBOREHOLE.LOOPAREANOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOOPAREANO\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.LOOPAREANOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LOOPSTATION {
                get {
                    try {
                        return ((int)(this[this.tableBOREHOLE.LOOPSTATIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOOPSTATION\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.LOOPSTATIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LOOPTYPE {
                get {
                    try {
                        return ((int)(this[this.tableBOREHOLE.LOOPTYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOOPTYPE\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.LOOPTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime USECHANGEDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBOREHOLE.USECHANGEDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USECHANGEDATE\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.USECHANGEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ENVCEN {
                get {
                    try {
                        return ((int)(this[this.tableBOREHOLE.ENVCENColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ENVCEN\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.ENVCENColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ABANDCAUSE {
                get {
                    try {
                        return ((string)(this[this.tableBOREHOLE.ABANDCAUSEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ABANDCAUSE\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.ABANDCAUSEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ABANDCONTR {
                get {
                    try {
                        return ((string)(this[this.tableBOREHOLE.ABANDCONTRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ABANDCONTR\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.ABANDCONTRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string STARTDAYUNKNOWN {
                get {
                    try {
                        return ((string)(this[this.tableBOREHOLE.STARTDAYUNKNOWNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STARTDAYUNKNOWN\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.STARTDAYUNKNOWNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string STARTMNTHUNKNWN {
                get {
                    try {
                        return ((string)(this[this.tableBOREHOLE.STARTMNTHUNKNWNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STARTMNTHUNKNWN\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.STARTMNTHUNKNWNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WWBOREHOLENO {
                get {
                    try {
                        return ((string)(this[this.tableBOREHOLE.WWBOREHOLENOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WWBOREHOLENO\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.WWBOREHOLENOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double XUTM32EUREF89 {
                get {
                    try {
                        return ((double)(this[this.tableBOREHOLE.XUTM32EUREF89Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'XUTM32EUREF89\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.XUTM32EUREF89Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double YUTM32EUREF89 {
                get {
                    try {
                        return ((double)(this[this.tableBOREHOLE.YUTM32EUREF89Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'YUTM32EUREF89\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.YUTM32EUREF89Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ZDVR90 {
                get {
                    try {
                        return ((double)(this[this.tableBOREHOLE.ZDVR90Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ZDVR90\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.ZDVR90Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INSTALLATION {
                get {
                    try {
                        return ((string)(this[this.tableBOREHOLE.INSTALLATIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INSTALLATION\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.INSTALLATIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WORKINGCONDITIONS {
                get {
                    try {
                        return ((string)(this[this.tableBOREHOLE.WORKINGCONDITIONSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WORKINGCONDITIONS\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.WORKINGCONDITIONSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string APPROACH {
                get {
                    try {
                        return ((string)(this[this.tableBOREHOLE.APPROACHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'APPROACH\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.APPROACHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ACCESSREMARK {
                get {
                    try {
                        return ((string)(this[this.tableBOREHOLE.ACCESSREMARKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ACCESSREMARK\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.ACCESSREMARKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LOCATEPERSONEMAIL {
                get {
                    try {
                        return ((string)(this[this.tableBOREHOLE.LOCATEPERSONEMAILColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOCATEPERSONEMAIL\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.LOCATEPERSONEMAILColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PRESERVATIONZONE {
                get {
                    try {
                        return ((int)(this[this.tableBOREHOLE.PRESERVATIONZONEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRESERVATIONZONE\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.PRESERVATIONZONEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PROTECTIONZONE {
                get {
                    try {
                        return ((int)(this[this.tableBOREHOLE.PROTECTIONZONEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PROTECTIONZONE\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.PROTECTIONZONEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int REGION {
                get {
                    try {
                        return ((int)(this[this.tableBOREHOLE.REGIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REGION\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.REGIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int USECHANGECAUSE {
                get {
                    try {
                        return ((int)(this[this.tableBOREHOLE.USECHANGECAUSEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USECHANGECAUSE\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.USECHANGECAUSEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime INSERTDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBOREHOLE.INSERTDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INSERTDATE\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.INSERTDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime UPDATEDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBOREHOLE.UPDATEDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UPDATEDATE\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.UPDATEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INSERTUSER {
                get {
                    try {
                        return ((string)(this[this.tableBOREHOLE.INSERTUSERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INSERTUSER\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.INSERTUSERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UPDATEUSER {
                get {
                    try {
                        return ((string)(this[this.tableBOREHOLE.UPDATEUSERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UPDATEUSER\' in table \'BOREHOLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBOREHOLE.UPDATEUSERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNAMINGSYSNull() {
                return this.IsNull(this.tableBOREHOLE.NAMINGSYSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNAMINGSYSNull() {
                this[this.tableBOREHOLE.NAMINGSYSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPURPOSENull() {
                return this.IsNull(this.tableBOREHOLE.PURPOSEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPURPOSENull() {
                this[this.tableBOREHOLE.PURPOSEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSENull() {
                return this.IsNull(this.tableBOREHOLE.USEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSENull() {
                this[this.tableBOREHOLE.USEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTATUSNull() {
                return this.IsNull(this.tableBOREHOLE.STATUSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTATUSNull() {
                this[this.tableBOREHOLE.STATUSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDRILLDEPTHNull() {
                return this.IsNull(this.tableBOREHOLE.DRILLDEPTHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDRILLDEPTHNull() {
                this[this.tableBOREHOLE.DRILLDEPTHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsELEVATIONNull() {
                return this.IsNull(this.tableBOREHOLE.ELEVATIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetELEVATIONNull() {
                this[this.tableBOREHOLE.ELEVATIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCTRPELEVANull() {
                return this.IsNull(this.tableBOREHOLE.CTRPELEVAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCTRPELEVANull() {
                this[this.tableBOREHOLE.CTRPELEVAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVERTICAREFNull() {
                return this.IsNull(this.tableBOREHOLE.VERTICAREFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVERTICAREFNull() {
                this[this.tableBOREHOLE.VERTICAREFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCTRPDESCRNull() {
                return this.IsNull(this.tableBOREHOLE.CTRPDESCRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCTRPDESCRNull() {
                this[this.tableBOREHOLE.CTRPDESCRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCTRPPRECISNull() {
                return this.IsNull(this.tableBOREHOLE.CTRPPRECISColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCTRPPRECISNull() {
                this[this.tableBOREHOLE.CTRPPRECISColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCTRPZPRECISNull() {
                return this.IsNull(this.tableBOREHOLE.CTRPZPRECISColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCTRPZPRECISNull() {
                this[this.tableBOREHOLE.CTRPZPRECISColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCTRPHEIGHTNull() {
                return this.IsNull(this.tableBOREHOLE.CTRPHEIGHTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCTRPHEIGHTNull() {
                this[this.tableBOREHOLE.CTRPHEIGHTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsELEVAMETHONull() {
                return this.IsNull(this.tableBOREHOLE.ELEVAMETHOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetELEVAMETHONull() {
                this[this.tableBOREHOLE.ELEVAMETHOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsELEVAQUALINull() {
                return this.IsNull(this.tableBOREHOLE.ELEVAQUALIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetELEVAQUALINull() {
                this[this.tableBOREHOLE.ELEVAQUALIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsELEVASOURCNull() {
                return this.IsNull(this.tableBOREHOLE.ELEVASOURCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetELEVASOURCNull() {
                this[this.tableBOREHOLE.ELEVASOURCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLOCATIONNull() {
                return this.IsNull(this.tableBOREHOLE.LOCATIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLOCATIONNull() {
                this[this.tableBOREHOLE.LOCATIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOMMENTSNull() {
                return this.IsNull(this.tableBOREHOLE.COMMENTSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOMMENTSNull() {
                this[this.tableBOREHOLE.COMMENTSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVARIOUSNull() {
                return this.IsNull(this.tableBOREHOLE.VARIOUSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVARIOUSNull() {
                this[this.tableBOREHOLE.VARIOUSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsXUTMNull() {
                return this.IsNull(this.tableBOREHOLE.XUTMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetXUTMNull() {
                this[this.tableBOREHOLE.XUTMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsYUTMNull() {
                return this.IsNull(this.tableBOREHOLE.YUTMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetYUTMNull() {
                this[this.tableBOREHOLE.YUTMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUTMZONENull() {
                return this.IsNull(this.tableBOREHOLE.UTMZONEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUTMZONENull() {
                this[this.tableBOREHOLE.UTMZONEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDATUMNull() {
                return this.IsNull(this.tableBOREHOLE.DATUMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDATUMNull() {
                this[this.tableBOREHOLE.DATUMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAPSHEETNull() {
                return this.IsNull(this.tableBOREHOLE.MAPSHEETColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAPSHEETNull() {
                this[this.tableBOREHOLE.MAPSHEETColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAPDISTXNull() {
                return this.IsNull(this.tableBOREHOLE.MAPDISTXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAPDISTXNull() {
                this[this.tableBOREHOLE.MAPDISTXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAPDISTYNull() {
                return this.IsNull(this.tableBOREHOLE.MAPDISTYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAPDISTYNull() {
                this[this.tableBOREHOLE.MAPDISTYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSYS34XNull() {
                return this.IsNull(this.tableBOREHOLE.SYS34XColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSYS34XNull() {
                this[this.tableBOREHOLE.SYS34XColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSYS34YNull() {
                return this.IsNull(this.tableBOREHOLE.SYS34YColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSYS34YNull() {
                this[this.tableBOREHOLE.SYS34YColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSYS34ZONENull() {
                return this.IsNull(this.tableBOREHOLE.SYS34ZONEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSYS34ZONENull() {
                this[this.tableBOREHOLE.SYS34ZONEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLATITUDENull() {
                return this.IsNull(this.tableBOREHOLE.LATITUDEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLATITUDENull() {
                this[this.tableBOREHOLE.LATITUDEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLONGITUDENull() {
                return this.IsNull(this.tableBOREHOLE.LONGITUDEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLONGITUDENull() {
                this[this.tableBOREHOLE.LONGITUDEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLOCATMETHONull() {
                return this.IsNull(this.tableBOREHOLE.LOCATMETHOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLOCATMETHONull() {
                this[this.tableBOREHOLE.LOCATMETHOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLOCATQUALINull() {
                return this.IsNull(this.tableBOREHOLE.LOCATQUALIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLOCATQUALINull() {
                this[this.tableBOREHOLE.LOCATQUALIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLOCATSOURCNull() {
                return this.IsNull(this.tableBOREHOLE.LOCATSOURCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLOCATSOURCNull() {
                this[this.tableBOREHOLE.LOCATSOURCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBORHPOSTCNull() {
                return this.IsNull(this.tableBOREHOLE.BORHPOSTCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBORHPOSTCNull() {
                this[this.tableBOREHOLE.BORHPOSTCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBORHTOWNNONull() {
                return this.IsNull(this.tableBOREHOLE.BORHTOWNNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBORHTOWNNONull() {
                this[this.tableBOREHOLE.BORHTOWNNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOUNTYNONull() {
                return this.IsNull(this.tableBOREHOLE.COUNTYNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOUNTYNONull() {
                this[this.tableBOREHOLE.COUNTYNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMUNICIPALNull() {
                return this.IsNull(this.tableBOREHOLE.MUNICIPALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMUNICIPALNull() {
                this[this.tableBOREHOLE.MUNICIPALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHOUSEOWNASNull() {
                return this.IsNull(this.tableBOREHOLE.HOUSEOWNASColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHOUSEOWNASNull() {
                this[this.tableBOREHOLE.HOUSEOWNASColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLANDREGNONull() {
                return this.IsNull(this.tableBOREHOLE.LANDREGNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLANDREGNONull() {
                this[this.tableBOREHOLE.LANDREGNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDRILLERNull() {
                return this.IsNull(this.tableBOREHOLE.DRILLERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDRILLERNull() {
                this[this.tableBOREHOLE.DRILLERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDRILLLOGNONull() {
                return this.IsNull(this.tableBOREHOLE.DRILLLOGNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDRILLLOGNONull() {
                this[this.tableBOREHOLE.DRILLLOGNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDRILLBORNONull() {
                return this.IsNull(this.tableBOREHOLE.DRILLBORNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDRILLBORNONull() {
                this[this.tableBOREHOLE.DRILLBORNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREPORTEDBYNull() {
                return this.IsNull(this.tableBOREHOLE.REPORTEDBYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREPORTEDBYNull() {
                this[this.tableBOREHOLE.REPORTEDBYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCONSULTANTNull() {
                return this.IsNull(this.tableBOREHOLE.CONSULTANTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCONSULTANTNull() {
                this[this.tableBOREHOLE.CONSULTANTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCONSULOGNONull() {
                return this.IsNull(this.tableBOREHOLE.CONSULOGNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCONSULOGNONull() {
                this[this.tableBOREHOLE.CONSULOGNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCONSUBORNONull() {
                return this.IsNull(this.tableBOREHOLE.CONSUBORNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCONSUBORNONull() {
                this[this.tableBOREHOLE.CONSUBORNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDRILLEDFORNull() {
                return this.IsNull(this.tableBOREHOLE.DRILLEDFORColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDRILLEDFORNull() {
                this[this.tableBOREHOLE.DRILLEDFORColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDRFORADRESNull() {
                return this.IsNull(this.tableBOREHOLE.DRFORADRESColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDRFORADRESNull() {
                this[this.tableBOREHOLE.DRFORADRESColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDRFORPOSTCNull() {
                return this.IsNull(this.tableBOREHOLE.DRFORPOSTCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDRFORPOSTCNull() {
                this[this.tableBOREHOLE.DRFORPOSTCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDRILSTDATENull() {
                return this.IsNull(this.tableBOREHOLE.DRILSTDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDRILSTDATENull() {
                this[this.tableBOREHOLE.DRILSTDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDRILENDATENull() {
                return this.IsNull(this.tableBOREHOLE.DRILENDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDRILENDATENull() {
                this[this.tableBOREHOLE.DRILENDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsABANDONDATNull() {
                return this.IsNull(this.tableBOREHOLE.ABANDONDATColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetABANDONDATNull() {
                this[this.tableBOREHOLE.ABANDONDATColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPREVBORHNONull() {
                return this.IsNull(this.tableBOREHOLE.PREVBORHNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPREVBORHNONull() {
                this[this.tableBOREHOLE.PREVBORHNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNUMSUPLBORNull() {
                return this.IsNull(this.tableBOREHOLE.NUMSUPLBORColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNUMSUPLBORNull() {
                this[this.tableBOREHOLE.NUMSUPLBORColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSAMRECEDATNull() {
                return this.IsNull(this.tableBOREHOLE.SAMRECEDATColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSAMRECEDATNull() {
                this[this.tableBOREHOLE.SAMRECEDATColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSAMDESCDATNull() {
                return this.IsNull(this.tableBOREHOLE.SAMDESCDATColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSAMDESCDATNull() {
                this[this.tableBOREHOLE.SAMDESCDATColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNUMOFSAMPLNull() {
                return this.IsNull(this.tableBOREHOLE.NUMOFSAMPLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNUMOFSAMPLNull() {
                this[this.tableBOREHOLE.NUMOFSAMPLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNUMSAMSTONull() {
                return this.IsNull(this.tableBOREHOLE.NUMSAMSTOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNUMSAMSTONull() {
                this[this.tableBOREHOLE.NUMSAMSTOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLITHOLNOTENull() {
                return this.IsNull(this.tableBOREHOLE.LITHOLNOTEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLITHOLNOTENull() {
                this[this.tableBOREHOLE.LITHOLNOTEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTOGEUSDATENull() {
                return this.IsNull(this.tableBOREHOLE.TOGEUSDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTOGEUSDATENull() {
                this[this.tableBOREHOLE.TOGEUSDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGRUMOCOUNTYNONull() {
                return this.IsNull(this.tableBOREHOLE.GRUMOCOUNTYNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGRUMOCOUNTYNONull() {
                this[this.tableBOREHOLE.GRUMOCOUNTYNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGRUMOBORNONull() {
                return this.IsNull(this.tableBOREHOLE.GRUMOBORNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGRUMOBORNONull() {
                this[this.tableBOREHOLE.GRUMOBORNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGRUMOBORTYPENull() {
                return this.IsNull(this.tableBOREHOLE.GRUMOBORTYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGRUMOBORTYPENull() {
                this[this.tableBOREHOLE.GRUMOBORTYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGRUMOAREANONull() {
                return this.IsNull(this.tableBOREHOLE.GRUMOAREANOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGRUMOAREANONull() {
                this[this.tableBOREHOLE.GRUMOAREANOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBORHTOWNNO2007Null() {
                return this.IsNull(this.tableBOREHOLE.BORHTOWNNO2007Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBORHTOWNNO2007Null() {
                this[this.tableBOREHOLE.BORHTOWNNO2007Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLOCQUALINull() {
                return this.IsNull(this.tableBOREHOLE.LOCQUALIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLOCQUALINull() {
                this[this.tableBOREHOLE.LOCQUALIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLOOPAREANONull() {
                return this.IsNull(this.tableBOREHOLE.LOOPAREANOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLOOPAREANONull() {
                this[this.tableBOREHOLE.LOOPAREANOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLOOPSTATIONNull() {
                return this.IsNull(this.tableBOREHOLE.LOOPSTATIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLOOPSTATIONNull() {
                this[this.tableBOREHOLE.LOOPSTATIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLOOPTYPENull() {
                return this.IsNull(this.tableBOREHOLE.LOOPTYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLOOPTYPENull() {
                this[this.tableBOREHOLE.LOOPTYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSECHANGEDATENull() {
                return this.IsNull(this.tableBOREHOLE.USECHANGEDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSECHANGEDATENull() {
                this[this.tableBOREHOLE.USECHANGEDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsENVCENNull() {
                return this.IsNull(this.tableBOREHOLE.ENVCENColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetENVCENNull() {
                this[this.tableBOREHOLE.ENVCENColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsABANDCAUSENull() {
                return this.IsNull(this.tableBOREHOLE.ABANDCAUSEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetABANDCAUSENull() {
                this[this.tableBOREHOLE.ABANDCAUSEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsABANDCONTRNull() {
                return this.IsNull(this.tableBOREHOLE.ABANDCONTRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetABANDCONTRNull() {
                this[this.tableBOREHOLE.ABANDCONTRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTARTDAYUNKNOWNNull() {
                return this.IsNull(this.tableBOREHOLE.STARTDAYUNKNOWNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTARTDAYUNKNOWNNull() {
                this[this.tableBOREHOLE.STARTDAYUNKNOWNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTARTMNTHUNKNWNNull() {
                return this.IsNull(this.tableBOREHOLE.STARTMNTHUNKNWNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTARTMNTHUNKNWNNull() {
                this[this.tableBOREHOLE.STARTMNTHUNKNWNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWWBOREHOLENONull() {
                return this.IsNull(this.tableBOREHOLE.WWBOREHOLENOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWWBOREHOLENONull() {
                this[this.tableBOREHOLE.WWBOREHOLENOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsXUTM32EUREF89Null() {
                return this.IsNull(this.tableBOREHOLE.XUTM32EUREF89Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetXUTM32EUREF89Null() {
                this[this.tableBOREHOLE.XUTM32EUREF89Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsYUTM32EUREF89Null() {
                return this.IsNull(this.tableBOREHOLE.YUTM32EUREF89Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetYUTM32EUREF89Null() {
                this[this.tableBOREHOLE.YUTM32EUREF89Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZDVR90Null() {
                return this.IsNull(this.tableBOREHOLE.ZDVR90Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZDVR90Null() {
                this[this.tableBOREHOLE.ZDVR90Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINSTALLATIONNull() {
                return this.IsNull(this.tableBOREHOLE.INSTALLATIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINSTALLATIONNull() {
                this[this.tableBOREHOLE.INSTALLATIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWORKINGCONDITIONSNull() {
                return this.IsNull(this.tableBOREHOLE.WORKINGCONDITIONSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWORKINGCONDITIONSNull() {
                this[this.tableBOREHOLE.WORKINGCONDITIONSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAPPROACHNull() {
                return this.IsNull(this.tableBOREHOLE.APPROACHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAPPROACHNull() {
                this[this.tableBOREHOLE.APPROACHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsACCESSREMARKNull() {
                return this.IsNull(this.tableBOREHOLE.ACCESSREMARKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetACCESSREMARKNull() {
                this[this.tableBOREHOLE.ACCESSREMARKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLOCATEPERSONEMAILNull() {
                return this.IsNull(this.tableBOREHOLE.LOCATEPERSONEMAILColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLOCATEPERSONEMAILNull() {
                this[this.tableBOREHOLE.LOCATEPERSONEMAILColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRESERVATIONZONENull() {
                return this.IsNull(this.tableBOREHOLE.PRESERVATIONZONEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRESERVATIONZONENull() {
                this[this.tableBOREHOLE.PRESERVATIONZONEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPROTECTIONZONENull() {
                return this.IsNull(this.tableBOREHOLE.PROTECTIONZONEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPROTECTIONZONENull() {
                this[this.tableBOREHOLE.PROTECTIONZONEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREGIONNull() {
                return this.IsNull(this.tableBOREHOLE.REGIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREGIONNull() {
                this[this.tableBOREHOLE.REGIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSECHANGECAUSENull() {
                return this.IsNull(this.tableBOREHOLE.USECHANGECAUSEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSECHANGECAUSENull() {
                this[this.tableBOREHOLE.USECHANGECAUSEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINSERTDATENull() {
                return this.IsNull(this.tableBOREHOLE.INSERTDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINSERTDATENull() {
                this[this.tableBOREHOLE.INSERTDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUPDATEDATENull() {
                return this.IsNull(this.tableBOREHOLE.UPDATEDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUPDATEDATENull() {
                this[this.tableBOREHOLE.UPDATEDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINSERTUSERNull() {
                return this.IsNull(this.tableBOREHOLE.INSERTUSERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINSERTUSERNull() {
                this[this.tableBOREHOLE.INSERTUSERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUPDATEUSERNull() {
                return this.IsNull(this.tableBOREHOLE.UPDATEUSERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUPDATEUSERNull() {
                this[this.tableBOREHOLE.UPDATEUSERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public INTAKERow[] GetINTAKERows() {
                if ((this.Table.ChildRelations["RINTAKE_BOREHOLE"] == null)) {
                    return new INTAKERow[0];
                }
                else {
                    return ((INTAKERow[])(base.GetChildRows(this.Table.ChildRelations["RINTAKE_BOREHOLE"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class INTAKERow : global::System.Data.DataRow {
            
            private INTAKEDataTable tableINTAKE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal INTAKERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableINTAKE = ((INTAKEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BOREHOLENO {
                get {
                    return ((string)(this[this.tableINTAKE.BOREHOLENOColumn]));
                }
                set {
                    this[this.tableINTAKE.BOREHOLENOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int INTAKENO {
                get {
                    return ((int)(this[this.tableINTAKE.INTAKENOColumn]));
                }
                set {
                    this[this.tableINTAKE.INTAKENOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int STRINGNO {
                get {
                    try {
                        return ((int)(this[this.tableINTAKE.STRINGNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STRINGNO\' in table \'INTAKE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableINTAKE.STRINGNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WATERAGE {
                get {
                    try {
                        return ((string)(this[this.tableINTAKE.WATERAGEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WATERAGE\' in table \'INTAKE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableINTAKE.WATERAGEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEPOSITNO {
                get {
                    try {
                        return ((string)(this[this.tableINTAKE.DEPOSITNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DEPOSITNO\' in table \'INTAKE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableINTAKE.DEPOSITNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DEPOSITTYPE {
                get {
                    try {
                        return ((int)(this[this.tableINTAKE.DEPOSITTYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DEPOSITTYPE\' in table \'INTAKE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableINTAKE.DEPOSITTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAINCLASS {
                get {
                    try {
                        return ((string)(this[this.tableINTAKE.MAINCLASSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAINCLASS\' in table \'INTAKE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableINTAKE.MAINCLASSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MONITORINGTYPE {
                get {
                    try {
                        return ((int)(this[this.tableINTAKE.MONITORINGTYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MONITORINGTYPE\' in table \'INTAKE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableINTAKE.MONITORINGTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RESERVOIRROCK {
                get {
                    try {
                        return ((string)(this[this.tableINTAKE.RESERVOIRROCKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RESERVOIRROCK\' in table \'INTAKE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableINTAKE.RESERVOIRROCKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RESERVOIRTYPE {
                get {
                    try {
                        return ((int)(this[this.tableINTAKE.RESERVOIRTYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RESERVOIRTYPE\' in table \'INTAKE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableINTAKE.RESERVOIRTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SPECIALUSABLE {
                get {
                    try {
                        return ((string)(this[this.tableINTAKE.SPECIALUSABLEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SPECIALUSABLE\' in table \'INTAKE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableINTAKE.SPECIALUSABLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int WATERTABLETYPE {
                get {
                    try {
                        return ((int)(this[this.tableINTAKE.WATERTABLETYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WATERTABLETYPE\' in table \'INTAKE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableINTAKE.WATERTABLETYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SOUNDABILITY {
                get {
                    try {
                        return ((string)(this[this.tableINTAKE.SOUNDABILITYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SOUNDABILITY\' in table \'INTAKE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableINTAKE.SOUNDABILITYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SOUNDABILITYREMARK {
                get {
                    try {
                        return ((string)(this[this.tableINTAKE.SOUNDABILITYREMARKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SOUNDABILITYREMARK\' in table \'INTAKE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableINTAKE.SOUNDABILITYREMARKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SOUNDTUBEINSIDEDIAM {
                get {
                    try {
                        return ((double)(this[this.tableINTAKE.SOUNDTUBEINSIDEDIAMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SOUNDTUBEINSIDEDIAM\' in table \'INTAKE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableINTAKE.SOUNDTUBEINSIDEDIAMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime INSERTDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableINTAKE.INSERTDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INSERTDATE\' in table \'INTAKE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableINTAKE.INSERTDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime UPDATEDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableINTAKE.UPDATEDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UPDATEDATE\' in table \'INTAKE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableINTAKE.UPDATEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INSERTUSER {
                get {
                    try {
                        return ((string)(this[this.tableINTAKE.INSERTUSERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INSERTUSER\' in table \'INTAKE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableINTAKE.INSERTUSERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UPDATEUSER {
                get {
                    try {
                        return ((string)(this[this.tableINTAKE.UPDATEUSERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UPDATEUSER\' in table \'INTAKE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableINTAKE.UPDATEUSERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BOREHOLERow BOREHOLERow {
                get {
                    return ((BOREHOLERow)(this.GetParentRow(this.Table.ParentRelations["RINTAKE_BOREHOLE"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["RINTAKE_BOREHOLE"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTRINGNONull() {
                return this.IsNull(this.tableINTAKE.STRINGNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTRINGNONull() {
                this[this.tableINTAKE.STRINGNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWATERAGENull() {
                return this.IsNull(this.tableINTAKE.WATERAGEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWATERAGENull() {
                this[this.tableINTAKE.WATERAGEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEPOSITNONull() {
                return this.IsNull(this.tableINTAKE.DEPOSITNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEPOSITNONull() {
                this[this.tableINTAKE.DEPOSITNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEPOSITTYPENull() {
                return this.IsNull(this.tableINTAKE.DEPOSITTYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEPOSITTYPENull() {
                this[this.tableINTAKE.DEPOSITTYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAINCLASSNull() {
                return this.IsNull(this.tableINTAKE.MAINCLASSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAINCLASSNull() {
                this[this.tableINTAKE.MAINCLASSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMONITORINGTYPENull() {
                return this.IsNull(this.tableINTAKE.MONITORINGTYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMONITORINGTYPENull() {
                this[this.tableINTAKE.MONITORINGTYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRESERVOIRROCKNull() {
                return this.IsNull(this.tableINTAKE.RESERVOIRROCKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRESERVOIRROCKNull() {
                this[this.tableINTAKE.RESERVOIRROCKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRESERVOIRTYPENull() {
                return this.IsNull(this.tableINTAKE.RESERVOIRTYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRESERVOIRTYPENull() {
                this[this.tableINTAKE.RESERVOIRTYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSPECIALUSABLENull() {
                return this.IsNull(this.tableINTAKE.SPECIALUSABLEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSPECIALUSABLENull() {
                this[this.tableINTAKE.SPECIALUSABLEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWATERTABLETYPENull() {
                return this.IsNull(this.tableINTAKE.WATERTABLETYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWATERTABLETYPENull() {
                this[this.tableINTAKE.WATERTABLETYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSOUNDABILITYNull() {
                return this.IsNull(this.tableINTAKE.SOUNDABILITYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSOUNDABILITYNull() {
                this[this.tableINTAKE.SOUNDABILITYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSOUNDABILITYREMARKNull() {
                return this.IsNull(this.tableINTAKE.SOUNDABILITYREMARKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSOUNDABILITYREMARKNull() {
                this[this.tableINTAKE.SOUNDABILITYREMARKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSOUNDTUBEINSIDEDIAMNull() {
                return this.IsNull(this.tableINTAKE.SOUNDTUBEINSIDEDIAMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSOUNDTUBEINSIDEDIAMNull() {
                this[this.tableINTAKE.SOUNDTUBEINSIDEDIAMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINSERTDATENull() {
                return this.IsNull(this.tableINTAKE.INSERTDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINSERTDATENull() {
                this[this.tableINTAKE.INSERTDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUPDATEDATENull() {
                return this.IsNull(this.tableINTAKE.UPDATEDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUPDATEDATENull() {
                this[this.tableINTAKE.UPDATEDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINSERTUSERNull() {
                return this.IsNull(this.tableINTAKE.INSERTUSERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINSERTUSERNull() {
                this[this.tableINTAKE.INSERTUSERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUPDATEUSERNull() {
                return this.IsNull(this.tableINTAKE.UPDATEUSERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUPDATEUSERNull() {
                this[this.tableINTAKE.UPDATEUSERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WATLEVELRow[] GetWATLEVELRows() {
                if ((this.Table.ChildRelations["RWATLEVEL_INTAKE"] == null)) {
                    return new WATLEVELRow[0];
                }
                else {
                    return ((WATLEVELRow[])(base.GetChildRows(this.Table.ChildRelations["RWATLEVEL_INTAKE"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class WATLEVELRow : global::System.Data.DataRow {
            
            private WATLEVELDataTable tableWATLEVEL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal WATLEVELRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableWATLEVEL = ((WATLEVELDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BOREHOLENO {
                get {
                    return ((string)(this[this.tableWATLEVEL.BOREHOLENOColumn]));
                }
                set {
                    this[this.tableWATLEVEL.BOREHOLENOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int WATLEVELNO {
                get {
                    return ((int)(this[this.tableWATLEVEL.WATLEVELNOColumn]));
                }
                set {
                    this[this.tableWATLEVEL.WATLEVELNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int INTAKENO {
                get {
                    try {
                        return ((int)(this[this.tableWATLEVEL.INTAKENOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INTAKENO\' in table \'WATLEVEL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWATLEVEL.INTAKENOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TIMEOFMEAS {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableWATLEVEL.TIMEOFMEASColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TIMEOFMEAS\' in table \'WATLEVEL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWATLEVEL.TIMEOFMEASColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PROJECT {
                get {
                    try {
                        return ((string)(this[this.tableWATLEVEL.PROJECTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PROJECT\' in table \'WATLEVEL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWATLEVEL.PROJECTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double WATERLEVEL {
                get {
                    try {
                        return ((double)(this[this.tableWATLEVEL.WATERLEVELColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WATERLEVEL\' in table \'WATLEVEL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWATLEVEL.WATERLEVELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double WATLEVGRSU {
                get {
                    try {
                        return ((double)(this[this.tableWATLEVEL.WATLEVGRSUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WATLEVGRSU\' in table \'WATLEVEL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWATLEVEL.WATLEVGRSUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double WATLEVMSL {
                get {
                    try {
                        return ((double)(this[this.tableWATLEVEL.WATLEVMSLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WATLEVMSL\' in table \'WATLEVEL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWATLEVEL.WATLEVMSLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double WATLEVMP {
                get {
                    try {
                        return ((double)(this[this.tableWATLEVEL.WATLEVMPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WATLEVMP\' in table \'WATLEVEL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWATLEVEL.WATLEVMPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double HOURSNOPUM {
                get {
                    try {
                        return ((double)(this[this.tableWATLEVEL.HOURSNOPUMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HOURSNOPUM\' in table \'WATLEVEL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWATLEVEL.HOURSNOPUMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CATEGORY {
                get {
                    try {
                        return ((string)(this[this.tableWATLEVEL.CATEGORYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CATEGORY\' in table \'WATLEVEL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWATLEVEL.CATEGORYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string METHOD {
                get {
                    try {
                        return ((string)(this[this.tableWATLEVEL.METHODColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'METHOD\' in table \'WATLEVEL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWATLEVEL.METHODColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QUALITY {
                get {
                    try {
                        return ((string)(this[this.tableWATLEVEL.QUALITYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QUALITY\' in table \'WATLEVEL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWATLEVEL.QUALITYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string REFPOINT {
                get {
                    try {
                        return ((string)(this[this.tableWATLEVEL.REFPOINTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REFPOINT\' in table \'WATLEVEL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWATLEVEL.REFPOINTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string REMARK {
                get {
                    try {
                        return ((string)(this[this.tableWATLEVEL.REMARKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REMARK\' in table \'WATLEVEL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWATLEVEL.REMARKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VERTICAREF {
                get {
                    try {
                        return ((string)(this[this.tableWATLEVEL.VERTICAREFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VERTICAREF\' in table \'WATLEVEL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWATLEVEL.VERTICAREFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float ATMOSPRESSHPA {
                get {
                    try {
                        return ((float)(this[this.tableWATLEVEL.ATMOSPRESSHPAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ATMOSPRESSHPA\' in table \'WATLEVEL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWATLEVEL.ATMOSPRESSHPAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EXTREMES {
                get {
                    try {
                        return ((string)(this[this.tableWATLEVEL.EXTREMESColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EXTREMES\' in table \'WATLEVEL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWATLEVEL.EXTREMESColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SITUATION {
                get {
                    try {
                        return ((int)(this[this.tableWATLEVEL.SITUATIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SITUATION\' in table \'WATLEVEL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWATLEVEL.SITUATIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int WATLEVELROUNDNO {
                get {
                    try {
                        return ((int)(this[this.tableWATLEVEL.WATLEVELROUNDNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WATLEVELROUNDNO\' in table \'WATLEVEL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWATLEVEL.WATLEVELROUNDNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime INSERTDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableWATLEVEL.INSERTDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INSERTDATE\' in table \'WATLEVEL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWATLEVEL.INSERTDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime UPDATEDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableWATLEVEL.UPDATEDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UPDATEDATE\' in table \'WATLEVEL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWATLEVEL.UPDATEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INSERTUSER {
                get {
                    try {
                        return ((string)(this[this.tableWATLEVEL.INSERTUSERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INSERTUSER\' in table \'WATLEVEL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWATLEVEL.INSERTUSERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UPDATEUSER {
                get {
                    try {
                        return ((string)(this[this.tableWATLEVEL.UPDATEUSERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UPDATEUSER\' in table \'WATLEVEL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWATLEVEL.UPDATEUSERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DATAOWNER {
                get {
                    try {
                        return ((string)(this[this.tableWATLEVEL.DATAOWNERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DATAOWNER\' in table \'WATLEVEL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWATLEVEL.DATAOWNERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public INTAKERow INTAKERowParent {
                get {
                    return ((INTAKERow)(this.GetParentRow(this.Table.ParentRelations["RWATLEVEL_INTAKE"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["RWATLEVEL_INTAKE"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINTAKENONull() {
                return this.IsNull(this.tableWATLEVEL.INTAKENOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINTAKENONull() {
                this[this.tableWATLEVEL.INTAKENOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTIMEOFMEASNull() {
                return this.IsNull(this.tableWATLEVEL.TIMEOFMEASColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTIMEOFMEASNull() {
                this[this.tableWATLEVEL.TIMEOFMEASColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPROJECTNull() {
                return this.IsNull(this.tableWATLEVEL.PROJECTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPROJECTNull() {
                this[this.tableWATLEVEL.PROJECTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWATERLEVELNull() {
                return this.IsNull(this.tableWATLEVEL.WATERLEVELColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWATERLEVELNull() {
                this[this.tableWATLEVEL.WATERLEVELColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWATLEVGRSUNull() {
                return this.IsNull(this.tableWATLEVEL.WATLEVGRSUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWATLEVGRSUNull() {
                this[this.tableWATLEVEL.WATLEVGRSUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWATLEVMSLNull() {
                return this.IsNull(this.tableWATLEVEL.WATLEVMSLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWATLEVMSLNull() {
                this[this.tableWATLEVEL.WATLEVMSLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWATLEVMPNull() {
                return this.IsNull(this.tableWATLEVEL.WATLEVMPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWATLEVMPNull() {
                this[this.tableWATLEVEL.WATLEVMPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHOURSNOPUMNull() {
                return this.IsNull(this.tableWATLEVEL.HOURSNOPUMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHOURSNOPUMNull() {
                this[this.tableWATLEVEL.HOURSNOPUMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCATEGORYNull() {
                return this.IsNull(this.tableWATLEVEL.CATEGORYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCATEGORYNull() {
                this[this.tableWATLEVEL.CATEGORYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMETHODNull() {
                return this.IsNull(this.tableWATLEVEL.METHODColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMETHODNull() {
                this[this.tableWATLEVEL.METHODColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQUALITYNull() {
                return this.IsNull(this.tableWATLEVEL.QUALITYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQUALITYNull() {
                this[this.tableWATLEVEL.QUALITYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREFPOINTNull() {
                return this.IsNull(this.tableWATLEVEL.REFPOINTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREFPOINTNull() {
                this[this.tableWATLEVEL.REFPOINTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREMARKNull() {
                return this.IsNull(this.tableWATLEVEL.REMARKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREMARKNull() {
                this[this.tableWATLEVEL.REMARKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVERTICAREFNull() {
                return this.IsNull(this.tableWATLEVEL.VERTICAREFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVERTICAREFNull() {
                this[this.tableWATLEVEL.VERTICAREFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsATMOSPRESSHPANull() {
                return this.IsNull(this.tableWATLEVEL.ATMOSPRESSHPAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetATMOSPRESSHPANull() {
                this[this.tableWATLEVEL.ATMOSPRESSHPAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEXTREMESNull() {
                return this.IsNull(this.tableWATLEVEL.EXTREMESColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEXTREMESNull() {
                this[this.tableWATLEVEL.EXTREMESColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSITUATIONNull() {
                return this.IsNull(this.tableWATLEVEL.SITUATIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSITUATIONNull() {
                this[this.tableWATLEVEL.SITUATIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWATLEVELROUNDNONull() {
                return this.IsNull(this.tableWATLEVEL.WATLEVELROUNDNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWATLEVELROUNDNONull() {
                this[this.tableWATLEVEL.WATLEVELROUNDNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINSERTDATENull() {
                return this.IsNull(this.tableWATLEVEL.INSERTDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINSERTDATENull() {
                this[this.tableWATLEVEL.INSERTDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUPDATEDATENull() {
                return this.IsNull(this.tableWATLEVEL.UPDATEDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUPDATEDATENull() {
                this[this.tableWATLEVEL.UPDATEDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINSERTUSERNull() {
                return this.IsNull(this.tableWATLEVEL.INSERTUSERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINSERTUSERNull() {
                this[this.tableWATLEVEL.INSERTUSERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUPDATEUSERNull() {
                return this.IsNull(this.tableWATLEVEL.UPDATEUSERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUPDATEUSERNull() {
                this[this.tableWATLEVEL.UPDATEUSERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDATAOWNERNull() {
                return this.IsNull(this.tableWATLEVEL.DATAOWNERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDATAOWNERNull() {
                this[this.tableWATLEVEL.DATAOWNERColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class BOREHOLERowChangeEvent : global::System.EventArgs {
            
            private BOREHOLERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BOREHOLERowChangeEvent(BOREHOLERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BOREHOLERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class INTAKERowChangeEvent : global::System.EventArgs {
            
            private INTAKERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public INTAKERowChangeEvent(INTAKERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public INTAKERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class WATLEVELRowChangeEvent : global::System.EventArgs {
            
            private WATLEVELRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WATLEVELRowChangeEvent(WATLEVELRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public WATLEVELRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace MikeSheWrapper.Irrigation.DataSet1TableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class BOREHOLETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbTransaction _transaction;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public BOREHOLETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "BOREHOLE";
            tableMapping.ColumnMappings.Add("BOREHOLENO", "BOREHOLENO");
            tableMapping.ColumnMappings.Add("NAMINGSYS", "NAMINGSYS");
            tableMapping.ColumnMappings.Add("PURPOSE", "PURPOSE");
            tableMapping.ColumnMappings.Add("USE", "USE");
            tableMapping.ColumnMappings.Add("STATUS", "STATUS");
            tableMapping.ColumnMappings.Add("DRILLDEPTH", "DRILLDEPTH");
            tableMapping.ColumnMappings.Add("ELEVATION", "ELEVATION");
            tableMapping.ColumnMappings.Add("CTRPELEVA", "CTRPELEVA");
            tableMapping.ColumnMappings.Add("VERTICAREF", "VERTICAREF");
            tableMapping.ColumnMappings.Add("CTRPDESCR", "CTRPDESCR");
            tableMapping.ColumnMappings.Add("CTRPPRECIS", "CTRPPRECIS");
            tableMapping.ColumnMappings.Add("CTRPZPRECIS", "CTRPZPRECIS");
            tableMapping.ColumnMappings.Add("CTRPHEIGHT", "CTRPHEIGHT");
            tableMapping.ColumnMappings.Add("ELEVAMETHO", "ELEVAMETHO");
            tableMapping.ColumnMappings.Add("ELEVAQUALI", "ELEVAQUALI");
            tableMapping.ColumnMappings.Add("ELEVASOURC", "ELEVASOURC");
            tableMapping.ColumnMappings.Add("LOCATION", "LOCATION");
            tableMapping.ColumnMappings.Add("COMMENTS", "COMMENTS");
            tableMapping.ColumnMappings.Add("VARIOUS", "VARIOUS");
            tableMapping.ColumnMappings.Add("XUTM", "XUTM");
            tableMapping.ColumnMappings.Add("YUTM", "YUTM");
            tableMapping.ColumnMappings.Add("UTMZONE", "UTMZONE");
            tableMapping.ColumnMappings.Add("DATUM", "DATUM");
            tableMapping.ColumnMappings.Add("MAPSHEET", "MAPSHEET");
            tableMapping.ColumnMappings.Add("MAPDISTX", "MAPDISTX");
            tableMapping.ColumnMappings.Add("MAPDISTY", "MAPDISTY");
            tableMapping.ColumnMappings.Add("SYS34X", "SYS34X");
            tableMapping.ColumnMappings.Add("SYS34Y", "SYS34Y");
            tableMapping.ColumnMappings.Add("SYS34ZONE", "SYS34ZONE");
            tableMapping.ColumnMappings.Add("LATITUDE", "LATITUDE");
            tableMapping.ColumnMappings.Add("LONGITUDE", "LONGITUDE");
            tableMapping.ColumnMappings.Add("LOCATMETHO", "LOCATMETHO");
            tableMapping.ColumnMappings.Add("LOCATQUALI", "LOCATQUALI");
            tableMapping.ColumnMappings.Add("LOCATSOURC", "LOCATSOURC");
            tableMapping.ColumnMappings.Add("BORHPOSTC", "BORHPOSTC");
            tableMapping.ColumnMappings.Add("BORHTOWNNO", "BORHTOWNNO");
            tableMapping.ColumnMappings.Add("COUNTYNO", "COUNTYNO");
            tableMapping.ColumnMappings.Add("MUNICIPAL", "MUNICIPAL");
            tableMapping.ColumnMappings.Add("HOUSEOWNAS", "HOUSEOWNAS");
            tableMapping.ColumnMappings.Add("LANDREGNO", "LANDREGNO");
            tableMapping.ColumnMappings.Add("DRILLER", "DRILLER");
            tableMapping.ColumnMappings.Add("DRILLLOGNO", "DRILLLOGNO");
            tableMapping.ColumnMappings.Add("DRILLBORNO", "DRILLBORNO");
            tableMapping.ColumnMappings.Add("REPORTEDBY", "REPORTEDBY");
            tableMapping.ColumnMappings.Add("CONSULTANT", "CONSULTANT");
            tableMapping.ColumnMappings.Add("CONSULOGNO", "CONSULOGNO");
            tableMapping.ColumnMappings.Add("CONSUBORNO", "CONSUBORNO");
            tableMapping.ColumnMappings.Add("DRILLEDFOR", "DRILLEDFOR");
            tableMapping.ColumnMappings.Add("DRFORADRES", "DRFORADRES");
            tableMapping.ColumnMappings.Add("DRFORPOSTC", "DRFORPOSTC");
            tableMapping.ColumnMappings.Add("DRILSTDATE", "DRILSTDATE");
            tableMapping.ColumnMappings.Add("DRILENDATE", "DRILENDATE");
            tableMapping.ColumnMappings.Add("ABANDONDAT", "ABANDONDAT");
            tableMapping.ColumnMappings.Add("PREVBORHNO", "PREVBORHNO");
            tableMapping.ColumnMappings.Add("NUMSUPLBOR", "NUMSUPLBOR");
            tableMapping.ColumnMappings.Add("SAMRECEDAT", "SAMRECEDAT");
            tableMapping.ColumnMappings.Add("SAMDESCDAT", "SAMDESCDAT");
            tableMapping.ColumnMappings.Add("NUMOFSAMPL", "NUMOFSAMPL");
            tableMapping.ColumnMappings.Add("NUMSAMSTO", "NUMSAMSTO");
            tableMapping.ColumnMappings.Add("LITHOLNOTE", "LITHOLNOTE");
            tableMapping.ColumnMappings.Add("TOGEUSDATE", "TOGEUSDATE");
            tableMapping.ColumnMappings.Add("GRUMOCOUNTYNO", "GRUMOCOUNTYNO");
            tableMapping.ColumnMappings.Add("GRUMOBORNO", "GRUMOBORNO");
            tableMapping.ColumnMappings.Add("GRUMOBORTYPE", "GRUMOBORTYPE");
            tableMapping.ColumnMappings.Add("GRUMOAREANO", "GRUMOAREANO");
            tableMapping.ColumnMappings.Add("BORHTOWNNO2007", "BORHTOWNNO2007");
            tableMapping.ColumnMappings.Add("LOCQUALI", "LOCQUALI");
            tableMapping.ColumnMappings.Add("LOOPAREANO", "LOOPAREANO");
            tableMapping.ColumnMappings.Add("LOOPSTATION", "LOOPSTATION");
            tableMapping.ColumnMappings.Add("LOOPTYPE", "LOOPTYPE");
            tableMapping.ColumnMappings.Add("USECHANGEDATE", "USECHANGEDATE");
            tableMapping.ColumnMappings.Add("ENVCEN", "ENVCEN");
            tableMapping.ColumnMappings.Add("ABANDCAUSE", "ABANDCAUSE");
            tableMapping.ColumnMappings.Add("ABANDCONTR", "ABANDCONTR");
            tableMapping.ColumnMappings.Add("STARTDAYUNKNOWN", "STARTDAYUNKNOWN");
            tableMapping.ColumnMappings.Add("STARTMNTHUNKNWN", "STARTMNTHUNKNWN");
            tableMapping.ColumnMappings.Add("WWBOREHOLENO", "WWBOREHOLENO");
            tableMapping.ColumnMappings.Add("XUTM32EUREF89", "XUTM32EUREF89");
            tableMapping.ColumnMappings.Add("YUTM32EUREF89", "YUTM32EUREF89");
            tableMapping.ColumnMappings.Add("ZDVR90", "ZDVR90");
            tableMapping.ColumnMappings.Add("INSTALLATION", "INSTALLATION");
            tableMapping.ColumnMappings.Add("WORKINGCONDITIONS", "WORKINGCONDITIONS");
            tableMapping.ColumnMappings.Add("APPROACH", "APPROACH");
            tableMapping.ColumnMappings.Add("ACCESSREMARK", "ACCESSREMARK");
            tableMapping.ColumnMappings.Add("LOCATEPERSONEMAIL", "LOCATEPERSONEMAIL");
            tableMapping.ColumnMappings.Add("PRESERVATIONZONE", "PRESERVATIONZONE");
            tableMapping.ColumnMappings.Add("PROTECTIONZONE", "PROTECTIONZONE");
            tableMapping.ColumnMappings.Add("REGION", "REGION");
            tableMapping.ColumnMappings.Add("USECHANGECAUSE", "USECHANGECAUSE");
            tableMapping.ColumnMappings.Add("INSERTDATE", "INSERTDATE");
            tableMapping.ColumnMappings.Add("UPDATEDATE", "UPDATEDATE");
            tableMapping.ColumnMappings.Add("INSERTUSER", "INSERTUSER");
            tableMapping.ColumnMappings.Add("UPDATEUSER", "UPDATEUSER");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM `BOREHOLE` WHERE ((`BOREHOLENO` = ?) AND ((? = 1 AND `NAMINGSYS` IS N" +
                "ULL) OR (`NAMINGSYS` = ?)) AND ((? = 1 AND `PURPOSE` IS NULL) OR (`PURPOSE` = ?)" +
                ") AND ((? = 1 AND `USE` IS NULL) OR (`USE` = ?)) AND ((? = 1 AND `STATUS` IS NUL" +
                "L) OR (`STATUS` = ?)) AND ((? = 1 AND `DRILLDEPTH` IS NULL) OR (`DRILLDEPTH` = ?" +
                ")) AND ((? = 1 AND `ELEVATION` IS NULL) OR (`ELEVATION` = ?)) AND ((? = 1 AND `C" +
                "TRPELEVA` IS NULL) OR (`CTRPELEVA` = ?)) AND ((? = 1 AND `VERTICAREF` IS NULL) O" +
                "R (`VERTICAREF` = ?)) AND ((? = 1 AND `CTRPDESCR` IS NULL) OR (`CTRPDESCR` = ?))" +
                " AND ((? = 1 AND `CTRPPRECIS` IS NULL) OR (`CTRPPRECIS` = ?)) AND ((? = 1 AND `C" +
                "TRPZPRECIS` IS NULL) OR (`CTRPZPRECIS` = ?)) AND ((? = 1 AND `CTRPHEIGHT` IS NUL" +
                "L) OR (`CTRPHEIGHT` = ?)) AND ((? = 1 AND `ELEVAMETHO` IS NULL) OR (`ELEVAMETHO`" +
                " = ?)) AND ((? = 1 AND `ELEVAQUALI` IS NULL) OR (`ELEVAQUALI` = ?)) AND ((? = 1 " +
                "AND `ELEVASOURC` IS NULL) OR (`ELEVASOURC` = ?)) AND ((? = 1 AND `LOCATION` IS N" +
                "ULL) OR (`LOCATION` = ?)) AND ((? = 1 AND `COMMENTS` IS NULL) OR (`COMMENTS` = ?" +
                ")) AND ((? = 1 AND `VARIOUS` IS NULL) OR (`VARIOUS` = ?)) AND ((? = 1 AND `XUTM`" +
                " IS NULL) OR (`XUTM` = ?)) AND ((? = 1 AND `YUTM` IS NULL) OR (`YUTM` = ?)) AND " +
                "((? = 1 AND `UTMZONE` IS NULL) OR (`UTMZONE` = ?)) AND ((? = 1 AND `DATUM` IS NU" +
                "LL) OR (`DATUM` = ?)) AND ((? = 1 AND `MAPSHEET` IS NULL) OR (`MAPSHEET` = ?)) A" +
                "ND ((? = 1 AND `MAPDISTX` IS NULL) OR (`MAPDISTX` = ?)) AND ((? = 1 AND `MAPDIST" +
                "Y` IS NULL) OR (`MAPDISTY` = ?)) AND ((? = 1 AND `SYS34X` IS NULL) OR (`SYS34X` " +
                "= ?)) AND ((? = 1 AND `SYS34Y` IS NULL) OR (`SYS34Y` = ?)) AND ((? = 1 AND `SYS3" +
                "4ZONE` IS NULL) OR (`SYS34ZONE` = ?)) AND ((? = 1 AND `LATITUDE` IS NULL) OR (`L" +
                "ATITUDE` = ?)) AND ((? = 1 AND `LONGITUDE` IS NULL) OR (`LONGITUDE` = ?)) AND ((" +
                "? = 1 AND `LOCATMETHO` IS NULL) OR (`LOCATMETHO` = ?)) AND ((? = 1 AND `LOCATQUA" +
                "LI` IS NULL) OR (`LOCATQUALI` = ?)) AND ((? = 1 AND `LOCATSOURC` IS NULL) OR (`L" +
                "OCATSOURC` = ?)) AND ((? = 1 AND `BORHPOSTC` IS NULL) OR (`BORHPOSTC` = ?)) AND " +
                "((? = 1 AND `BORHTOWNNO` IS NULL) OR (`BORHTOWNNO` = ?)) AND ((? = 1 AND `COUNTY" +
                "NO` IS NULL) OR (`COUNTYNO` = ?)) AND ((? = 1 AND `MUNICIPAL` IS NULL) OR (`MUNI" +
                "CIPAL` = ?)) AND ((? = 1 AND `HOUSEOWNAS` IS NULL) OR (`HOUSEOWNAS` = ?)) AND ((" +
                "? = 1 AND `LANDREGNO` IS NULL) OR (`LANDREGNO` = ?)) AND ((? = 1 AND `DRILLER` I" +
                "S NULL) OR (`DRILLER` = ?)) AND ((? = 1 AND `DRILLLOGNO` IS NULL) OR (`DRILLLOGN" +
                "O` = ?)) AND ((? = 1 AND `DRILLBORNO` IS NULL) OR (`DRILLBORNO` = ?)) AND ((? = " +
                "1 AND `REPORTEDBY` IS NULL) OR (`REPORTEDBY` = ?)) AND ((? = 1 AND `CONSULTANT` " +
                "IS NULL) OR (`CONSULTANT` = ?)) AND ((? = 1 AND `CONSULOGNO` IS NULL) OR (`CONSU" +
                "LOGNO` = ?)) AND ((? = 1 AND `CONSUBORNO` IS NULL) OR (`CONSUBORNO` = ?)) AND ((" +
                "? = 1 AND `DRILLEDFOR` IS NULL) OR (`DRILLEDFOR` = ?)) AND ((? = 1 AND `DRFORADR" +
                "ES` IS NULL) OR (`DRFORADRES` = ?)) AND ((? = 1 AND `DRFORPOSTC` IS NULL) OR (`D" +
                "RFORPOSTC` = ?)) AND ((? = 1 AND `DRILSTDATE` IS NULL) OR (`DRILSTDATE` = ?)) AN" +
                "D ((? = 1 AND `DRILENDATE` IS NULL) OR (`DRILENDATE` = ?)) AND ((? = 1 AND `ABAN" +
                "DONDAT` IS NULL) OR (`ABANDONDAT` = ?)) AND ((? = 1 AND `PREVBORHNO` IS NULL) OR" +
                " (`PREVBORHNO` = ?)) AND ((? = 1 AND `NUMSUPLBOR` IS NULL) OR (`NUMSUPLBOR` = ?)" +
                ") AND ((? = 1 AND `SAMRECEDAT` IS NULL) OR (`SAMRECEDAT` = ?)) AND ((? = 1 AND `" +
                "SAMDESCDAT` IS NULL) OR (`SAMDESCDAT` = ?)) AND ((? = 1 AND `NUMOFSAMPL` IS NULL" +
                ") OR (`NUMOFSAMPL` = ?)) AND ((? = 1 AND `NUMSAMSTO` IS NULL) OR (`NUMSAMSTO` = " +
                "?)) AND ((? = 1 AND `LITHOLNOTE` IS NULL) OR (`LITHOLNOTE` = ?)) AND ((? = 1 AND" +
                " `TOGEUSDATE` IS NULL) OR (`TOGEUSDATE` = ?)) AND ((? = 1 AND `GRUMOCOUNTYNO` IS" +
                " NULL) OR (`GRUMOCOUNTYNO` = ?)) AND ((? = 1 AND `GRUMOBORNO` IS NULL) OR (`GRUM" +
                "OBORNO` = ?)) AND ((? = 1 AND `GRUMOBORTYPE` IS NULL) OR (`GRUMOBORTYPE` = ?)) A" +
                "ND ((? = 1 AND `GRUMOAREANO` IS NULL) OR (`GRUMOAREANO` = ?)) AND ((? = 1 AND `B" +
                "ORHTOWNNO2007` IS NULL) OR (`BORHTOWNNO2007` = ?)) AND ((? = 1 AND `LOCQUALI` IS" +
                " NULL) OR (`LOCQUALI` = ?)) AND ((? = 1 AND `LOOPAREANO` IS NULL) OR (`LOOPAREAN" +
                "O` = ?)) AND ((? = 1 AND `LOOPSTATION` IS NULL) OR (`LOOPSTATION` = ?)) AND ((? " +
                "= 1 AND `LOOPTYPE` IS NULL) OR (`LOOPTYPE` = ?)) AND ((? = 1 AND `USECHANGEDATE`" +
                " IS NULL) OR (`USECHANGEDATE` = ?)) AND ((? = 1 AND `ENVCEN` IS NULL) OR (`ENVCE" +
                "N` = ?)) AND ((? = 1 AND `ABANDCAUSE` IS NULL) OR (`ABANDCAUSE` = ?)) AND ((? = " +
                "1 AND `ABANDCONTR` IS NULL) OR (`ABANDCONTR` = ?)) AND ((? = 1 AND `STARTDAYUNKN" +
                "OWN` IS NULL) OR (`STARTDAYUNKNOWN` = ?)) AND ((? = 1 AND `STARTMNTHUNKNWN` IS N" +
                "ULL) OR (`STARTMNTHUNKNWN` = ?)) AND ((? = 1 AND `WWBOREHOLENO` IS NULL) OR (`WW" +
                "BOREHOLENO` = ?)) AND ((? = 1 AND `XUTM32EUREF89` IS NULL) OR (`XUTM32EUREF89` =" +
                " ?)) AND ((? = 1 AND `YUTM32EUREF89` IS NULL) OR (`YUTM32EUREF89` = ?)) AND ((? " +
                "= 1 AND `ZDVR90` IS NULL) OR (`ZDVR90` = ?)) AND ((? = 1 AND `INSTALLATION` IS N" +
                "ULL) OR (`INSTALLATION` = ?)) AND ((? = 1 AND `WORKINGCONDITIONS` IS NULL) OR (`" +
                "WORKINGCONDITIONS` = ?)) AND ((? = 1 AND `APPROACH` IS NULL) OR (`APPROACH` = ?)" +
                ") AND ((? = 1 AND `ACCESSREMARK` IS NULL) OR (`ACCESSREMARK` = ?)) AND ((? = 1 A" +
                "ND `LOCATEPERSONEMAIL` IS NULL) OR (`LOCATEPERSONEMAIL` = ?)) AND ((? = 1 AND `P" +
                "RESERVATIONZONE` IS NULL) OR (`PRESERVATIONZONE` = ?)) AND ((? = 1 AND `PROTECTI" +
                "ONZONE` IS NULL) OR (`PROTECTIONZONE` = ?)) AND ((? = 1 AND `REGION` IS NULL) OR" +
                " (`REGION` = ?)) AND ((? = 1 AND `USECHANGECAUSE` IS NULL) OR (`USECHANGECAUSE` " +
                "= ?)) AND ((? = 1 AND `INSERTDATE` IS NULL) OR (`INSERTDATE` = ?)) AND ((? = 1 A" +
                "ND `UPDATEDATE` IS NULL) OR (`UPDATEDATE` = ?)) AND ((? = 1 AND `INSERTUSER` IS " +
                "NULL) OR (`INSERTUSER` = ?)) AND ((? = 1 AND `UPDATEUSER` IS NULL) OR (`UPDATEUS" +
                "ER` = ?)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_BOREHOLENO", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BOREHOLENO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_NAMINGSYS", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NAMINGSYS", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_NAMINGSYS", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NAMINGSYS", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_PURPOSE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PURPOSE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PURPOSE", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PURPOSE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_USE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "USE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_USE", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "USE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_STATUS", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "STATUS", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_STATUS", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "STATUS", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_DRILLDEPTH", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DRILLDEPTH", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_DRILLDEPTH", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DRILLDEPTH", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ELEVATION", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ELEVATION", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ELEVATION", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ELEVATION", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_CTRPELEVA", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CTRPELEVA", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_CTRPELEVA", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CTRPELEVA", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_VERTICAREF", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VERTICAREF", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_VERTICAREF", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VERTICAREF", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_CTRPDESCR", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CTRPDESCR", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_CTRPDESCR", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CTRPDESCR", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_CTRPPRECIS", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CTRPPRECIS", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_CTRPPRECIS", global::System.Data.OleDb.OleDbType.Single, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CTRPPRECIS", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_CTRPZPRECIS", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CTRPZPRECIS", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_CTRPZPRECIS", global::System.Data.OleDb.OleDbType.Single, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CTRPZPRECIS", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_CTRPHEIGHT", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CTRPHEIGHT", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_CTRPHEIGHT", global::System.Data.OleDb.OleDbType.Single, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CTRPHEIGHT", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ELEVAMETHO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ELEVAMETHO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ELEVAMETHO", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ELEVAMETHO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ELEVAQUALI", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ELEVAQUALI", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ELEVAQUALI", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ELEVAQUALI", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ELEVASOURC", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ELEVASOURC", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ELEVASOURC", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ELEVASOURC", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_LOCATION", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LOCATION", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LOCATION", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LOCATION", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_COMMENTS", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "COMMENTS", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_COMMENTS", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "COMMENTS", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_VARIOUS", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VARIOUS", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_VARIOUS", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VARIOUS", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_XUTM", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "XUTM", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_XUTM", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "XUTM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_YUTM", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "YUTM", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_YUTM", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "YUTM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_UTMZONE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "UTMZONE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_UTMZONE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "UTMZONE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_DATUM", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DATUM", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_DATUM", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DATUM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MAPSHEET", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MAPSHEET", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MAPSHEET", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MAPSHEET", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MAPDISTX", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MAPDISTX", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MAPDISTX", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MAPDISTX", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MAPDISTY", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MAPDISTY", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MAPDISTY", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MAPDISTY", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_SYS34X", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SYS34X", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SYS34X", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SYS34X", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_SYS34Y", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SYS34Y", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SYS34Y", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SYS34Y", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_SYS34ZONE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SYS34ZONE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SYS34ZONE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SYS34ZONE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_LATITUDE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LATITUDE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LATITUDE", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LATITUDE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_LONGITUDE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LONGITUDE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LONGITUDE", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LONGITUDE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_LOCATMETHO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LOCATMETHO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LOCATMETHO", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LOCATMETHO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_LOCATQUALI", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LOCATQUALI", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LOCATQUALI", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LOCATQUALI", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_LOCATSOURC", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LOCATSOURC", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LOCATSOURC", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LOCATSOURC", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_BORHPOSTC", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BORHPOSTC", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_BORHPOSTC", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BORHPOSTC", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_BORHTOWNNO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BORHTOWNNO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_BORHTOWNNO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BORHTOWNNO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_COUNTYNO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "COUNTYNO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_COUNTYNO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "COUNTYNO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MUNICIPAL", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MUNICIPAL", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MUNICIPAL", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MUNICIPAL", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_HOUSEOWNAS", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HOUSEOWNAS", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_HOUSEOWNAS", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HOUSEOWNAS", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_LANDREGNO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LANDREGNO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LANDREGNO", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LANDREGNO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_DRILLER", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DRILLER", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_DRILLER", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DRILLER", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_DRILLLOGNO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DRILLLOGNO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_DRILLLOGNO", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DRILLLOGNO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_DRILLBORNO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DRILLBORNO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_DRILLBORNO", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DRILLBORNO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_REPORTEDBY", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "REPORTEDBY", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_REPORTEDBY", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "REPORTEDBY", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_CONSULTANT", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CONSULTANT", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_CONSULTANT", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CONSULTANT", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_CONSULOGNO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CONSULOGNO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_CONSULOGNO", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CONSULOGNO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_CONSUBORNO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CONSUBORNO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_CONSUBORNO", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CONSUBORNO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_DRILLEDFOR", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DRILLEDFOR", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_DRILLEDFOR", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DRILLEDFOR", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_DRFORADRES", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DRFORADRES", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_DRFORADRES", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DRFORADRES", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_DRFORPOSTC", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DRFORPOSTC", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_DRFORPOSTC", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DRFORPOSTC", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_DRILSTDATE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DRILSTDATE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_DRILSTDATE", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DRILSTDATE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_DRILENDATE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DRILENDATE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_DRILENDATE", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DRILENDATE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ABANDONDAT", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ABANDONDAT", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ABANDONDAT", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ABANDONDAT", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_PREVBORHNO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PREVBORHNO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PREVBORHNO", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PREVBORHNO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_NUMSUPLBOR", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NUMSUPLBOR", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_NUMSUPLBOR", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NUMSUPLBOR", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_SAMRECEDAT", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SAMRECEDAT", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SAMRECEDAT", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SAMRECEDAT", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_SAMDESCDAT", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SAMDESCDAT", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SAMDESCDAT", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SAMDESCDAT", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_NUMOFSAMPL", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NUMOFSAMPL", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_NUMOFSAMPL", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NUMOFSAMPL", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_NUMSAMSTO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NUMSAMSTO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_NUMSAMSTO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NUMSAMSTO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_LITHOLNOTE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LITHOLNOTE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LITHOLNOTE", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LITHOLNOTE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_TOGEUSDATE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TOGEUSDATE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_TOGEUSDATE", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TOGEUSDATE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_GRUMOCOUNTYNO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "GRUMOCOUNTYNO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_GRUMOCOUNTYNO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "GRUMOCOUNTYNO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_GRUMOBORNO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "GRUMOBORNO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_GRUMOBORNO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "GRUMOBORNO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_GRUMOBORTYPE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "GRUMOBORTYPE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_GRUMOBORTYPE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "GRUMOBORTYPE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_GRUMOAREANO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "GRUMOAREANO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_GRUMOAREANO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "GRUMOAREANO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_BORHTOWNNO2007", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BORHTOWNNO2007", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_BORHTOWNNO2007", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BORHTOWNNO2007", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_LOCQUALI", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LOCQUALI", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LOCQUALI", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LOCQUALI", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_LOOPAREANO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LOOPAREANO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LOOPAREANO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LOOPAREANO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_LOOPSTATION", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LOOPSTATION", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LOOPSTATION", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LOOPSTATION", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_LOOPTYPE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LOOPTYPE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LOOPTYPE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LOOPTYPE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_USECHANGEDATE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "USECHANGEDATE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_USECHANGEDATE", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "USECHANGEDATE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ENVCEN", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ENVCEN", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ENVCEN", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ENVCEN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ABANDCAUSE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ABANDCAUSE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ABANDCAUSE", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ABANDCAUSE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ABANDCONTR", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ABANDCONTR", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ABANDCONTR", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ABANDCONTR", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_STARTDAYUNKNOWN", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "STARTDAYUNKNOWN", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_STARTDAYUNKNOWN", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "STARTDAYUNKNOWN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_STARTMNTHUNKNWN", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "STARTMNTHUNKNWN", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_STARTMNTHUNKNWN", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "STARTMNTHUNKNWN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_WWBOREHOLENO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "WWBOREHOLENO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_WWBOREHOLENO", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "WWBOREHOLENO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_XUTM32EUREF89", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "XUTM32EUREF89", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_XUTM32EUREF89", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "XUTM32EUREF89", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_YUTM32EUREF89", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "YUTM32EUREF89", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_YUTM32EUREF89", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "YUTM32EUREF89", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ZDVR90", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ZDVR90", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ZDVR90", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ZDVR90", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_INSTALLATION", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "INSTALLATION", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_INSTALLATION", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "INSTALLATION", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_WORKINGCONDITIONS", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "WORKINGCONDITIONS", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_WORKINGCONDITIONS", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "WORKINGCONDITIONS", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_APPROACH", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "APPROACH", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_APPROACH", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "APPROACH", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ACCESSREMARK", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ACCESSREMARK", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ACCESSREMARK", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ACCESSREMARK", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_LOCATEPERSONEMAIL", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LOCATEPERSONEMAIL", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LOCATEPERSONEMAIL", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LOCATEPERSONEMAIL", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_PRESERVATIONZONE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PRESERVATIONZONE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PRESERVATIONZONE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PRESERVATIONZONE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_PROTECTIONZONE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PROTECTIONZONE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PROTECTIONZONE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PROTECTIONZONE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_REGION", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "REGION", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_REGION", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "REGION", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_USECHANGECAUSE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "USECHANGECAUSE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_USECHANGECAUSE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "USECHANGECAUSE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_INSERTDATE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "INSERTDATE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_INSERTDATE", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "INSERTDATE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_UPDATEDATE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "UPDATEDATE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_UPDATEDATE", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "UPDATEDATE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_INSERTUSER", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "INSERTUSER", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_INSERTUSER", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "INSERTUSER", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_UPDATEUSER", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "UPDATEUSER", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_UPDATEUSER", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "UPDATEUSER", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `BOREHOLE` (`BOREHOLENO`, `NAMINGSYS`, `PURPOSE`, `USE`, `STATUS`, `D" +
                "RILLDEPTH`, `ELEVATION`, `CTRPELEVA`, `VERTICAREF`, `CTRPDESCR`, `CTRPPRECIS`, `" +
                "CTRPZPRECIS`, `CTRPHEIGHT`, `ELEVAMETHO`, `ELEVAQUALI`, `ELEVASOURC`, `LOCATION`" +
                ", `COMMENTS`, `VARIOUS`, `XUTM`, `YUTM`, `UTMZONE`, `DATUM`, `MAPSHEET`, `MAPDIS" +
                "TX`, `MAPDISTY`, `SYS34X`, `SYS34Y`, `SYS34ZONE`, `LATITUDE`, `LONGITUDE`, `LOCA" +
                "TMETHO`, `LOCATQUALI`, `LOCATSOURC`, `BORHPOSTC`, `BORHTOWNNO`, `COUNTYNO`, `MUN" +
                "ICIPAL`, `HOUSEOWNAS`, `LANDREGNO`, `DRILLER`, `DRILLLOGNO`, `DRILLBORNO`, `REPO" +
                "RTEDBY`, `CONSULTANT`, `CONSULOGNO`, `CONSUBORNO`, `DRILLEDFOR`, `DRFORADRES`, `" +
                "DRFORPOSTC`, `DRILSTDATE`, `DRILENDATE`, `ABANDONDAT`, `PREVBORHNO`, `NUMSUPLBOR" +
                "`, `SAMRECEDAT`, `SAMDESCDAT`, `NUMOFSAMPL`, `NUMSAMSTO`, `LITHOLNOTE`, `TOGEUSD" +
                "ATE`, `GRUMOCOUNTYNO`, `GRUMOBORNO`, `GRUMOBORTYPE`, `GRUMOAREANO`, `BORHTOWNNO2" +
                "007`, `LOCQUALI`, `LOOPAREANO`, `LOOPSTATION`, `LOOPTYPE`, `USECHANGEDATE`, `ENV" +
                "CEN`, `ABANDCAUSE`, `ABANDCONTR`, `STARTDAYUNKNOWN`, `STARTMNTHUNKNWN`, `WWBOREH" +
                "OLENO`, `XUTM32EUREF89`, `YUTM32EUREF89`, `ZDVR90`, `INSTALLATION`, `WORKINGCOND" +
                "ITIONS`, `APPROACH`, `ACCESSREMARK`, `LOCATEPERSONEMAIL`, `PRESERVATIONZONE`, `P" +
                "ROTECTIONZONE`, `REGION`, `USECHANGECAUSE`, `INSERTDATE`, `UPDATEDATE`, `INSERTU" +
                "SER`, `UPDATEUSER`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?" +
                ", ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, " +
                "?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?," +
                " ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("BOREHOLENO", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BOREHOLENO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("NAMINGSYS", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NAMINGSYS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PURPOSE", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PURPOSE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("USE", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "USE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("STATUS", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "STATUS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("DRILLDEPTH", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DRILLDEPTH", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ELEVATION", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ELEVATION", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("CTRPELEVA", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CTRPELEVA", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("VERTICAREF", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VERTICAREF", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("CTRPDESCR", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CTRPDESCR", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("CTRPPRECIS", global::System.Data.OleDb.OleDbType.Single, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CTRPPRECIS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("CTRPZPRECIS", global::System.Data.OleDb.OleDbType.Single, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CTRPZPRECIS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("CTRPHEIGHT", global::System.Data.OleDb.OleDbType.Single, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CTRPHEIGHT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ELEVAMETHO", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ELEVAMETHO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ELEVAQUALI", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ELEVAQUALI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ELEVASOURC", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ELEVASOURC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LOCATION", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LOCATION", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("COMMENTS", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "COMMENTS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("VARIOUS", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VARIOUS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("XUTM", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "XUTM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("YUTM", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "YUTM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("UTMZONE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "UTMZONE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("DATUM", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DATUM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MAPSHEET", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MAPSHEET", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MAPDISTX", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MAPDISTX", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MAPDISTY", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MAPDISTY", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SYS34X", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SYS34X", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SYS34Y", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SYS34Y", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SYS34ZONE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SYS34ZONE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LATITUDE", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LATITUDE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LONGITUDE", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LONGITUDE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LOCATMETHO", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LOCATMETHO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LOCATQUALI", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LOCATQUALI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LOCATSOURC", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LOCATSOURC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("BORHPOSTC", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BORHPOSTC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("BORHTOWNNO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BORHTOWNNO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("COUNTYNO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "COUNTYNO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MUNICIPAL", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MUNICIPAL", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("HOUSEOWNAS", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HOUSEOWNAS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LANDREGNO", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LANDREGNO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("DRILLER", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DRILLER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("DRILLLOGNO", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DRILLLOGNO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("DRILLBORNO", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DRILLBORNO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("REPORTEDBY", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "REPORTEDBY", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("CONSULTANT", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CONSULTANT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("CONSULOGNO", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CONSULOGNO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("CONSUBORNO", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CONSUBORNO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("DRILLEDFOR", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DRILLEDFOR", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("DRFORADRES", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DRFORADRES", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("DRFORPOSTC", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DRFORPOSTC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("DRILSTDATE", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DRILSTDATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("DRILENDATE", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DRILENDATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ABANDONDAT", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ABANDONDAT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PREVBORHNO", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PREVBORHNO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("NUMSUPLBOR", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NUMSUPLBOR", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SAMRECEDAT", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SAMRECEDAT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SAMDESCDAT", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SAMDESCDAT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("NUMOFSAMPL", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NUMOFSAMPL", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("NUMSAMSTO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NUMSAMSTO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LITHOLNOTE", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LITHOLNOTE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TOGEUSDATE", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TOGEUSDATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("GRUMOCOUNTYNO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "GRUMOCOUNTYNO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("GRUMOBORNO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "GRUMOBORNO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("GRUMOBORTYPE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "GRUMOBORTYPE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("GRUMOAREANO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "GRUMOAREANO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("BORHTOWNNO2007", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BORHTOWNNO2007", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LOCQUALI", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LOCQUALI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LOOPAREANO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LOOPAREANO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LOOPSTATION", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LOOPSTATION", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LOOPTYPE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LOOPTYPE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("USECHANGEDATE", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "USECHANGEDATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ENVCEN", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ENVCEN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ABANDCAUSE", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ABANDCAUSE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ABANDCONTR", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ABANDCONTR", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("STARTDAYUNKNOWN", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "STARTDAYUNKNOWN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("STARTMNTHUNKNWN", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "STARTMNTHUNKNWN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("WWBOREHOLENO", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "WWBOREHOLENO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("XUTM32EUREF89", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "XUTM32EUREF89", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("YUTM32EUREF89", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "YUTM32EUREF89", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ZDVR90", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ZDVR90", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("INSTALLATION", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "INSTALLATION", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("WORKINGCONDITIONS", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "WORKINGCONDITIONS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("APPROACH", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "APPROACH", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ACCESSREMARK", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ACCESSREMARK", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LOCATEPERSONEMAIL", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LOCATEPERSONEMAIL", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PRESERVATIONZONE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PRESERVATIONZONE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PROTECTIONZONE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PROTECTIONZONE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("REGION", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "REGION", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("USECHANGECAUSE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "USECHANGECAUSE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("INSERTDATE", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "INSERTDATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("UPDATEDATE", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "UPDATEDATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("INSERTUSER", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "INSERTUSER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("UPDATEUSER", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "UPDATEUSER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE `BOREHOLE` SET `BOREHOLENO` = ?, `NAMINGSYS` = ?, `PURPOSE` = ?, `USE` = ?" +
                ", `STATUS` = ?, `DRILLDEPTH` = ?, `ELEVATION` = ?, `CTRPELEVA` = ?, `VERTICAREF`" +
                " = ?, `CTRPDESCR` = ?, `CTRPPRECIS` = ?, `CTRPZPRECIS` = ?, `CTRPHEIGHT` = ?, `E" +
                "LEVAMETHO` = ?, `ELEVAQUALI` = ?, `ELEVASOURC` = ?, `LOCATION` = ?, `COMMENTS` =" +
                " ?, `VARIOUS` = ?, `XUTM` = ?, `YUTM` = ?, `UTMZONE` = ?, `DATUM` = ?, `MAPSHEET" +
                "` = ?, `MAPDISTX` = ?, `MAPDISTY` = ?, `SYS34X` = ?, `SYS34Y` = ?, `SYS34ZONE` =" +
                " ?, `LATITUDE` = ?, `LONGITUDE` = ?, `LOCATMETHO` = ?, `LOCATQUALI` = ?, `LOCATS" +
                "OURC` = ?, `BORHPOSTC` = ?, `BORHTOWNNO` = ?, `COUNTYNO` = ?, `MUNICIPAL` = ?, `" +
                "HOUSEOWNAS` = ?, `LANDREGNO` = ?, `DRILLER` = ?, `DRILLLOGNO` = ?, `DRILLBORNO` " +
                "= ?, `REPORTEDBY` = ?, `CONSULTANT` = ?, `CONSULOGNO` = ?, `CONSUBORNO` = ?, `DR" +
                "ILLEDFOR` = ?, `DRFORADRES` = ?, `DRFORPOSTC` = ?, `DRILSTDATE` = ?, `DRILENDATE" +
                "` = ?, `ABANDONDAT` = ?, `PREVBORHNO` = ?, `NUMSUPLBOR` = ?, `SAMRECEDAT` = ?, `" +
                "SAMDESCDAT` = ?, `NUMOFSAMPL` = ?, `NUMSAMSTO` = ?, `LITHOLNOTE` = ?, `TOGEUSDAT" +
                "E` = ?, `GRUMOCOUNTYNO` = ?, `GRUMOBORNO` = ?, `GRUMOBORTYPE` = ?, `GRUMOAREANO`" +
                " = ?, `BORHTOWNNO2007` = ?, `LOCQUALI` = ?, `LOOPAREANO` = ?, `LOOPSTATION` = ?," +
                " `LOOPTYPE` = ?, `USECHANGEDATE` = ?, `ENVCEN` = ?, `ABANDCAUSE` = ?, `ABANDCONT" +
                "R` = ?, `STARTDAYUNKNOWN` = ?, `STARTMNTHUNKNWN` = ?, `WWBOREHOLENO` = ?, `XUTM3" +
                "2EUREF89` = ?, `YUTM32EUREF89` = ?, `ZDVR90` = ?, `INSTALLATION` = ?, `WORKINGCO" +
                "NDITIONS` = ?, `APPROACH` = ?, `ACCESSREMARK` = ?, `LOCATEPERSONEMAIL` = ?, `PRE" +
                "SERVATIONZONE` = ?, `PROTECTIONZONE` = ?, `REGION` = ?, `USECHANGECAUSE` = ?, `I" +
                "NSERTDATE` = ?, `UPDATEDATE` = ?, `INSERTUSER` = ?, `UPDATEUSER` = ? WHERE ((`BO" +
                "REHOLENO` = ?) AND ((? = 1 AND `NAMINGSYS` IS NULL) OR (`NAMINGSYS` = ?)) AND ((" +
                "? = 1 AND `PURPOSE` IS NULL) OR (`PURPOSE` = ?)) AND ((? = 1 AND `USE` IS NULL) " +
                "OR (`USE` = ?)) AND ((? = 1 AND `STATUS` IS NULL) OR (`STATUS` = ?)) AND ((? = 1" +
                " AND `DRILLDEPTH` IS NULL) OR (`DRILLDEPTH` = ?)) AND ((? = 1 AND `ELEVATION` IS" +
                " NULL) OR (`ELEVATION` = ?)) AND ((? = 1 AND `CTRPELEVA` IS NULL) OR (`CTRPELEVA" +
                "` = ?)) AND ((? = 1 AND `VERTICAREF` IS NULL) OR (`VERTICAREF` = ?)) AND ((? = 1" +
                " AND `CTRPDESCR` IS NULL) OR (`CTRPDESCR` = ?)) AND ((? = 1 AND `CTRPPRECIS` IS " +
                "NULL) OR (`CTRPPRECIS` = ?)) AND ((? = 1 AND `CTRPZPRECIS` IS NULL) OR (`CTRPZPR" +
                "ECIS` = ?)) AND ((? = 1 AND `CTRPHEIGHT` IS NULL) OR (`CTRPHEIGHT` = ?)) AND ((?" +
                " = 1 AND `ELEVAMETHO` IS NULL) OR (`ELEVAMETHO` = ?)) AND ((? = 1 AND `ELEVAQUAL" +
                "I` IS NULL) OR (`ELEVAQUALI` = ?)) AND ((? = 1 AND `ELEVASOURC` IS NULL) OR (`EL" +
                "EVASOURC` = ?)) AND ((? = 1 AND `LOCATION` IS NULL) OR (`LOCATION` = ?)) AND ((?" +
                " = 1 AND `COMMENTS` IS NULL) OR (`COMMENTS` = ?)) AND ((? = 1 AND `VARIOUS` IS N" +
                "ULL) OR (`VARIOUS` = ?)) AND ((? = 1 AND `XUTM` IS NULL) OR (`XUTM` = ?)) AND ((" +
                "? = 1 AND `YUTM` IS NULL) OR (`YUTM` = ?)) AND ((? = 1 AND `UTMZONE` IS NULL) OR" +
                " (`UTMZONE` = ?)) AND ((? = 1 AND `DATUM` IS NULL) OR (`DATUM` = ?)) AND ((? = 1" +
                " AND `MAPSHEET` IS NULL) OR (`MAPSHEET` = ?)) AND ((? = 1 AND `MAPDISTX` IS NULL" +
                ") OR (`MAPDISTX` = ?)) AND ((? = 1 AND `MAPDISTY` IS NULL) OR (`MAPDISTY` = ?)) " +
                "AND ((? = 1 AND `SYS34X` IS NULL) OR (`SYS34X` = ?)) AND ((? = 1 AND `SYS34Y` IS" +
                " NULL) OR (`SYS34Y` = ?)) AND ((? = 1 AND `SYS34ZONE` IS NULL) OR (`SYS34ZONE` =" +
                " ?)) AND ((? = 1 AND `LATITUDE` IS NULL) OR (`LATITUDE` = ?)) AND ((? = 1 AND `L" +
                "ONGITUDE` IS NULL) OR (`LONGITUDE` = ?)) AND ((? = 1 AND `LOCATMETHO` IS NULL) O" +
                "R (`LOCATMETHO` = ?)) AND ((? = 1 AND `LOCATQUALI` IS NULL) OR (`LOCATQUALI` = ?" +
                ")) AND ((? = 1 AND `LOCATSOURC` IS NULL) OR (`LOCATSOURC` = ?)) AND ((? = 1 AND " +
                "`BORHPOSTC` IS NULL) OR (`BORHPOSTC` = ?)) AND ((? = 1 AND `BORHTOWNNO` IS NULL)" +
                " OR (`BORHTOWNNO` = ?)) AND ((? = 1 AND `COUNTYNO` IS NULL) OR (`COUNTYNO` = ?))" +
                " AND ((? = 1 AND `MUNICIPAL` IS NULL) OR (`MUNICIPAL` = ?)) AND ((? = 1 AND `HOU" +
                "SEOWNAS` IS NULL) OR (`HOUSEOWNAS` = ?)) AND ((? = 1 AND `LANDREGNO` IS NULL) OR" +
                " (`LANDREGNO` = ?)) AND ((? = 1 AND `DRILLER` IS NULL) OR (`DRILLER` = ?)) AND (" +
                "(? = 1 AND `DRILLLOGNO` IS NULL) OR (`DRILLLOGNO` = ?)) AND ((? = 1 AND `DRILLBO" +
                "RNO` IS NULL) OR (`DRILLBORNO` = ?)) AND ((? = 1 AND `REPORTEDBY` IS NULL) OR (`" +
                "REPORTEDBY` = ?)) AND ((? = 1 AND `CONSULTANT` IS NULL) OR (`CONSULTANT` = ?)) A" +
                "ND ((? = 1 AND `CONSULOGNO` IS NULL) OR (`CONSULOGNO` = ?)) AND ((? = 1 AND `CON" +
                "SUBORNO` IS NULL) OR (`CONSUBORNO` = ?)) AND ((? = 1 AND `DRILLEDFOR` IS NULL) O" +
                "R (`DRILLEDFOR` = ?)) AND ((? = 1 AND `DRFORADRES` IS NULL) OR (`DRFORADRES` = ?" +
                ")) AND ((? = 1 AND `DRFORPOSTC` IS NULL) OR (`DRFORPOSTC` = ?)) AND ((? = 1 AND " +
                "`DRILSTDATE` IS NULL) OR (`DRILSTDATE` = ?)) AND ((? = 1 AND `DRILENDATE` IS NUL" +
                "L) OR (`DRILENDATE` = ?)) AND ((? = 1 AND `ABANDONDAT` IS NULL) OR (`ABANDONDAT`" +
                " = ?)) AND ((? = 1 AND `PREVBORHNO` IS NULL) OR (`PREVBORHNO` = ?)) AND ((? = 1 " +
                "AND `NUMSUPLBOR` IS NULL) OR (`NUMSUPLBOR` = ?)) AND ((? = 1 AND `SAMRECEDAT` IS" +
                " NULL) OR (`SAMRECEDAT` = ?)) AND ((? = 1 AND `SAMDESCDAT` IS NULL) OR (`SAMDESC" +
                "DAT` = ?)) AND ((? = 1 AND `NUMOFSAMPL` IS NULL) OR (`NUMOFSAMPL` = ?)) AND ((? " +
                "= 1 AND `NUMSAMSTO` IS NULL) OR (`NUMSAMSTO` = ?)) AND ((? = 1 AND `LITHOLNOTE` " +
                "IS NULL) OR (`LITHOLNOTE` = ?)) AND ((? = 1 AND `TOGEUSDATE` IS NULL) OR (`TOGEU" +
                "SDATE` = ?)) AND ((? = 1 AND `GRUMOCOUNTYNO` IS NULL) OR (`GRUMOCOUNTYNO` = ?)) " +
                "AND ((? = 1 AND `GRUMOBORNO` IS NULL) OR (`GRUMOBORNO` = ?)) AND ((? = 1 AND `GR" +
                "UMOBORTYPE` IS NULL) OR (`GRUMOBORTYPE` = ?)) AND ((? = 1 AND `GRUMOAREANO` IS N" +
                "ULL) OR (`GRUMOAREANO` = ?)) AND ((? = 1 AND `BORHTOWNNO2007` IS NULL) OR (`BORH" +
                "TOWNNO2007` = ?)) AND ((? = 1 AND `LOCQUALI` IS NULL) OR (`LOCQUALI` = ?)) AND (" +
                "(? = 1 AND `LOOPAREANO` IS NULL) OR (`LOOPAREANO` = ?)) AND ((? = 1 AND `LOOPSTA" +
                "TION` IS NULL) OR (`LOOPSTATION` = ?)) AND ((? = 1 AND `LOOPTYPE` IS NULL) OR (`" +
                "LOOPTYPE` = ?)) AND ((? = 1 AND `USECHANGEDATE` IS NULL) OR (`USECHANGEDATE` = ?" +
                ")) AND ((? = 1 AND `ENVCEN` IS NULL) OR (`ENVCEN` = ?)) AND ((? = 1 AND `ABANDCA" +
                "USE` IS NULL) OR (`ABANDCAUSE` = ?)) AND ((? = 1 AND `ABANDCONTR` IS NULL) OR (`" +
                "ABANDCONTR` = ?)) AND ((? = 1 AND `STARTDAYUNKNOWN` IS NULL) OR (`STARTDAYUNKNOW" +
                "N` = ?)) AND ((? = 1 AND `STARTMNTHUNKNWN` IS NULL) OR (`STARTMNTHUNKNWN` = ?)) " +
                "AND ((? = 1 AND `WWBOREHOLENO` IS NULL) OR (`WWBOREHOLENO` = ?)) AND ((? = 1 AND" +
                " `XUTM32EUREF89` IS NULL) OR (`XUTM32EUREF89` = ?)) AND ((? = 1 AND `YUTM32EUREF" +
                "89` IS NULL) OR (`YUTM32EUREF89` = ?)) AND ((? = 1 AND `ZDVR90` IS NULL) OR (`ZD" +
                "VR90` = ?)) AND ((? = 1 AND `INSTALLATION` IS NULL) OR (`INSTALLATION` = ?)) AND" +
                " ((? = 1 AND `WORKINGCONDITIONS` IS NULL) OR (`WORKINGCONDITIONS` = ?)) AND ((? " +
                "= 1 AND `APPROACH` IS NULL) OR (`APPROACH` = ?)) AND ((? = 1 AND `ACCESSREMARK` " +
                "IS NULL) OR (`ACCESSREMARK` = ?)) AND ((? = 1 AND `LOCATEPERSONEMAIL` IS NULL) O" +
                "R (`LOCATEPERSONEMAIL` = ?)) AND ((? = 1 AND `PRESERVATIONZONE` IS NULL) OR (`PR" +
                "ESERVATIONZONE` = ?)) AND ((? = 1 AND `PROTECTIONZONE` IS NULL) OR (`PROTECTIONZ" +
                "ONE` = ?)) AND ((? = 1 AND `REGION` IS NULL) OR (`REGION` = ?)) AND ((? = 1 AND " +
                "`USECHANGECAUSE` IS NULL) OR (`USECHANGECAUSE` = ?)) AND ((? = 1 AND `INSERTDATE" +
                "` IS NULL) OR (`INSERTDATE` = ?)) AND ((? = 1 AND `UPDATEDATE` IS NULL) OR (`UPD" +
                "ATEDATE` = ?)) AND ((? = 1 AND `INSERTUSER` IS NULL) OR (`INSERTUSER` = ?)) AND " +
                "((? = 1 AND `UPDATEUSER` IS NULL) OR (`UPDATEUSER` = ?)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("BOREHOLENO", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BOREHOLENO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("NAMINGSYS", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NAMINGSYS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PURPOSE", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PURPOSE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("USE", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "USE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("STATUS", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "STATUS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("DRILLDEPTH", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DRILLDEPTH", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ELEVATION", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ELEVATION", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("CTRPELEVA", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CTRPELEVA", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("VERTICAREF", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VERTICAREF", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("CTRPDESCR", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CTRPDESCR", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("CTRPPRECIS", global::System.Data.OleDb.OleDbType.Single, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CTRPPRECIS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("CTRPZPRECIS", global::System.Data.OleDb.OleDbType.Single, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CTRPZPRECIS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("CTRPHEIGHT", global::System.Data.OleDb.OleDbType.Single, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CTRPHEIGHT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ELEVAMETHO", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ELEVAMETHO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ELEVAQUALI", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ELEVAQUALI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ELEVASOURC", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ELEVASOURC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LOCATION", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LOCATION", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("COMMENTS", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "COMMENTS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("VARIOUS", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VARIOUS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("XUTM", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "XUTM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("YUTM", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "YUTM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("UTMZONE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "UTMZONE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("DATUM", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DATUM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MAPSHEET", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MAPSHEET", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MAPDISTX", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MAPDISTX", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MAPDISTY", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MAPDISTY", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SYS34X", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SYS34X", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SYS34Y", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SYS34Y", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SYS34ZONE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SYS34ZONE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LATITUDE", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LATITUDE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LONGITUDE", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LONGITUDE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LOCATMETHO", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LOCATMETHO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LOCATQUALI", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LOCATQUALI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LOCATSOURC", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LOCATSOURC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("BORHPOSTC", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BORHPOSTC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("BORHTOWNNO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BORHTOWNNO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("COUNTYNO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "COUNTYNO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MUNICIPAL", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MUNICIPAL", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("HOUSEOWNAS", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HOUSEOWNAS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LANDREGNO", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LANDREGNO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("DRILLER", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DRILLER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("DRILLLOGNO", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DRILLLOGNO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("DRILLBORNO", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DRILLBORNO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("REPORTEDBY", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "REPORTEDBY", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("CONSULTANT", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CONSULTANT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("CONSULOGNO", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CONSULOGNO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("CONSUBORNO", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CONSUBORNO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("DRILLEDFOR", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DRILLEDFOR", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("DRFORADRES", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DRFORADRES", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("DRFORPOSTC", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DRFORPOSTC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("DRILSTDATE", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DRILSTDATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("DRILENDATE", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DRILENDATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ABANDONDAT", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ABANDONDAT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PREVBORHNO", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PREVBORHNO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("NUMSUPLBOR", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NUMSUPLBOR", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SAMRECEDAT", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SAMRECEDAT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SAMDESCDAT", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SAMDESCDAT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("NUMOFSAMPL", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NUMOFSAMPL", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("NUMSAMSTO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NUMSAMSTO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LITHOLNOTE", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LITHOLNOTE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TOGEUSDATE", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TOGEUSDATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("GRUMOCOUNTYNO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "GRUMOCOUNTYNO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("GRUMOBORNO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "GRUMOBORNO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("GRUMOBORTYPE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "GRUMOBORTYPE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("GRUMOAREANO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "GRUMOAREANO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("BORHTOWNNO2007", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BORHTOWNNO2007", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LOCQUALI", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LOCQUALI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LOOPAREANO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LOOPAREANO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LOOPSTATION", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LOOPSTATION", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LOOPTYPE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LOOPTYPE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("USECHANGEDATE", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "USECHANGEDATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ENVCEN", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ENVCEN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ABANDCAUSE", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ABANDCAUSE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ABANDCONTR", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ABANDCONTR", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("STARTDAYUNKNOWN", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "STARTDAYUNKNOWN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("STARTMNTHUNKNWN", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "STARTMNTHUNKNWN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("WWBOREHOLENO", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "WWBOREHOLENO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("XUTM32EUREF89", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "XUTM32EUREF89", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("YUTM32EUREF89", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "YUTM32EUREF89", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ZDVR90", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ZDVR90", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("INSTALLATION", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "INSTALLATION", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("WORKINGCONDITIONS", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "WORKINGCONDITIONS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("APPROACH", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "APPROACH", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ACCESSREMARK", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ACCESSREMARK", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LOCATEPERSONEMAIL", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LOCATEPERSONEMAIL", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PRESERVATIONZONE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PRESERVATIONZONE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PROTECTIONZONE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PROTECTIONZONE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("REGION", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "REGION", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("USECHANGECAUSE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "USECHANGECAUSE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("INSERTDATE", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "INSERTDATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("UPDATEDATE", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "UPDATEDATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("INSERTUSER", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "INSERTUSER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("UPDATEUSER", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "UPDATEUSER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_BOREHOLENO", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BOREHOLENO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_NAMINGSYS", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NAMINGSYS", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_NAMINGSYS", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NAMINGSYS", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_PURPOSE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PURPOSE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PURPOSE", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PURPOSE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_USE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "USE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_USE", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "USE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_STATUS", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "STATUS", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_STATUS", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "STATUS", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_DRILLDEPTH", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DRILLDEPTH", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_DRILLDEPTH", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DRILLDEPTH", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ELEVATION", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ELEVATION", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ELEVATION", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ELEVATION", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_CTRPELEVA", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CTRPELEVA", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_CTRPELEVA", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CTRPELEVA", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_VERTICAREF", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VERTICAREF", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_VERTICAREF", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VERTICAREF", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_CTRPDESCR", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CTRPDESCR", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_CTRPDESCR", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CTRPDESCR", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_CTRPPRECIS", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CTRPPRECIS", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_CTRPPRECIS", global::System.Data.OleDb.OleDbType.Single, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CTRPPRECIS", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_CTRPZPRECIS", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CTRPZPRECIS", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_CTRPZPRECIS", global::System.Data.OleDb.OleDbType.Single, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CTRPZPRECIS", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_CTRPHEIGHT", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CTRPHEIGHT", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_CTRPHEIGHT", global::System.Data.OleDb.OleDbType.Single, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CTRPHEIGHT", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ELEVAMETHO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ELEVAMETHO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ELEVAMETHO", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ELEVAMETHO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ELEVAQUALI", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ELEVAQUALI", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ELEVAQUALI", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ELEVAQUALI", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ELEVASOURC", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ELEVASOURC", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ELEVASOURC", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ELEVASOURC", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_LOCATION", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LOCATION", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LOCATION", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LOCATION", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_COMMENTS", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "COMMENTS", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_COMMENTS", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "COMMENTS", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_VARIOUS", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VARIOUS", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_VARIOUS", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VARIOUS", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_XUTM", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "XUTM", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_XUTM", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "XUTM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_YUTM", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "YUTM", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_YUTM", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "YUTM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_UTMZONE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "UTMZONE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_UTMZONE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "UTMZONE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_DATUM", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DATUM", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_DATUM", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DATUM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MAPSHEET", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MAPSHEET", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MAPSHEET", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MAPSHEET", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MAPDISTX", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MAPDISTX", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MAPDISTX", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MAPDISTX", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MAPDISTY", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MAPDISTY", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MAPDISTY", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MAPDISTY", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_SYS34X", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SYS34X", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SYS34X", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SYS34X", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_SYS34Y", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SYS34Y", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SYS34Y", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SYS34Y", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_SYS34ZONE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SYS34ZONE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SYS34ZONE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SYS34ZONE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_LATITUDE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LATITUDE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LATITUDE", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LATITUDE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_LONGITUDE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LONGITUDE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LONGITUDE", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LONGITUDE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_LOCATMETHO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LOCATMETHO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LOCATMETHO", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LOCATMETHO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_LOCATQUALI", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LOCATQUALI", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LOCATQUALI", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LOCATQUALI", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_LOCATSOURC", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LOCATSOURC", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LOCATSOURC", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LOCATSOURC", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_BORHPOSTC", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BORHPOSTC", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_BORHPOSTC", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BORHPOSTC", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_BORHTOWNNO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BORHTOWNNO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_BORHTOWNNO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BORHTOWNNO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_COUNTYNO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "COUNTYNO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_COUNTYNO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "COUNTYNO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MUNICIPAL", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MUNICIPAL", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MUNICIPAL", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MUNICIPAL", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_HOUSEOWNAS", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HOUSEOWNAS", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_HOUSEOWNAS", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HOUSEOWNAS", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_LANDREGNO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LANDREGNO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LANDREGNO", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LANDREGNO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_DRILLER", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DRILLER", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_DRILLER", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DRILLER", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_DRILLLOGNO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DRILLLOGNO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_DRILLLOGNO", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DRILLLOGNO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_DRILLBORNO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DRILLBORNO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_DRILLBORNO", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DRILLBORNO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_REPORTEDBY", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "REPORTEDBY", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_REPORTEDBY", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "REPORTEDBY", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_CONSULTANT", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CONSULTANT", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_CONSULTANT", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CONSULTANT", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_CONSULOGNO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CONSULOGNO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_CONSULOGNO", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CONSULOGNO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_CONSUBORNO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CONSUBORNO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_CONSUBORNO", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CONSUBORNO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_DRILLEDFOR", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DRILLEDFOR", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_DRILLEDFOR", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DRILLEDFOR", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_DRFORADRES", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DRFORADRES", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_DRFORADRES", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DRFORADRES", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_DRFORPOSTC", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DRFORPOSTC", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_DRFORPOSTC", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DRFORPOSTC", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_DRILSTDATE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DRILSTDATE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_DRILSTDATE", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DRILSTDATE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_DRILENDATE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DRILENDATE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_DRILENDATE", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DRILENDATE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ABANDONDAT", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ABANDONDAT", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ABANDONDAT", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ABANDONDAT", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_PREVBORHNO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PREVBORHNO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PREVBORHNO", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PREVBORHNO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_NUMSUPLBOR", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NUMSUPLBOR", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_NUMSUPLBOR", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NUMSUPLBOR", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_SAMRECEDAT", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SAMRECEDAT", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SAMRECEDAT", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SAMRECEDAT", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_SAMDESCDAT", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SAMDESCDAT", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SAMDESCDAT", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SAMDESCDAT", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_NUMOFSAMPL", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NUMOFSAMPL", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_NUMOFSAMPL", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NUMOFSAMPL", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_NUMSAMSTO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NUMSAMSTO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_NUMSAMSTO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NUMSAMSTO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_LITHOLNOTE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LITHOLNOTE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LITHOLNOTE", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LITHOLNOTE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_TOGEUSDATE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TOGEUSDATE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_TOGEUSDATE", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TOGEUSDATE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_GRUMOCOUNTYNO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "GRUMOCOUNTYNO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_GRUMOCOUNTYNO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "GRUMOCOUNTYNO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_GRUMOBORNO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "GRUMOBORNO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_GRUMOBORNO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "GRUMOBORNO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_GRUMOBORTYPE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "GRUMOBORTYPE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_GRUMOBORTYPE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "GRUMOBORTYPE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_GRUMOAREANO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "GRUMOAREANO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_GRUMOAREANO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "GRUMOAREANO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_BORHTOWNNO2007", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BORHTOWNNO2007", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_BORHTOWNNO2007", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BORHTOWNNO2007", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_LOCQUALI", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LOCQUALI", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LOCQUALI", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LOCQUALI", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_LOOPAREANO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LOOPAREANO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LOOPAREANO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LOOPAREANO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_LOOPSTATION", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LOOPSTATION", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LOOPSTATION", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LOOPSTATION", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_LOOPTYPE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LOOPTYPE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LOOPTYPE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LOOPTYPE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_USECHANGEDATE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "USECHANGEDATE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_USECHANGEDATE", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "USECHANGEDATE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ENVCEN", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ENVCEN", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ENVCEN", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ENVCEN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ABANDCAUSE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ABANDCAUSE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ABANDCAUSE", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ABANDCAUSE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ABANDCONTR", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ABANDCONTR", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ABANDCONTR", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ABANDCONTR", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_STARTDAYUNKNOWN", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "STARTDAYUNKNOWN", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_STARTDAYUNKNOWN", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "STARTDAYUNKNOWN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_STARTMNTHUNKNWN", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "STARTMNTHUNKNWN", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_STARTMNTHUNKNWN", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "STARTMNTHUNKNWN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_WWBOREHOLENO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "WWBOREHOLENO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_WWBOREHOLENO", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "WWBOREHOLENO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_XUTM32EUREF89", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "XUTM32EUREF89", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_XUTM32EUREF89", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "XUTM32EUREF89", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_YUTM32EUREF89", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "YUTM32EUREF89", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_YUTM32EUREF89", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "YUTM32EUREF89", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ZDVR90", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ZDVR90", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ZDVR90", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ZDVR90", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_INSTALLATION", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "INSTALLATION", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_INSTALLATION", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "INSTALLATION", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_WORKINGCONDITIONS", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "WORKINGCONDITIONS", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_WORKINGCONDITIONS", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "WORKINGCONDITIONS", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_APPROACH", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "APPROACH", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_APPROACH", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "APPROACH", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ACCESSREMARK", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ACCESSREMARK", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ACCESSREMARK", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ACCESSREMARK", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_LOCATEPERSONEMAIL", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LOCATEPERSONEMAIL", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LOCATEPERSONEMAIL", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LOCATEPERSONEMAIL", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_PRESERVATIONZONE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PRESERVATIONZONE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PRESERVATIONZONE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PRESERVATIONZONE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_PROTECTIONZONE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PROTECTIONZONE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PROTECTIONZONE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PROTECTIONZONE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_REGION", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "REGION", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_REGION", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "REGION", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_USECHANGECAUSE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "USECHANGECAUSE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_USECHANGECAUSE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "USECHANGECAUSE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_INSERTDATE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "INSERTDATE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_INSERTDATE", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "INSERTDATE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_UPDATEDATE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "UPDATEDATE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_UPDATEDATE", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "UPDATEDATE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_INSERTUSER", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "INSERTUSER", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_INSERTUSER", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "INSERTUSER", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_UPDATEUSER", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "UPDATEUSER", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_UPDATEUSER", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "UPDATEUSER", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::MikeSheWrapper.Irrigation.Properties.Settings.Default.herningConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT BOREHOLENO, NAMINGSYS, PURPOSE, USE, STATUS, DRILLDEPTH, ELEVATION, CTRPELEVA, VERTICAREF, CTRPDESCR, CTRPPRECIS, CTRPZPRECIS, CTRPHEIGHT, ELEVAMETHO, ELEVAQUALI, ELEVASOURC, LOCATION, COMMENTS, VARIOUS, XUTM, YUTM, UTMZONE, DATUM, MAPSHEET, MAPDISTX, MAPDISTY, SYS34X, SYS34Y, SYS34ZONE, LATITUDE, LONGITUDE, LOCATMETHO, LOCATQUALI, LOCATSOURC, BORHPOSTC, BORHTOWNNO, COUNTYNO, MUNICIPAL, HOUSEOWNAS, LANDREGNO, DRILLER, DRILLLOGNO, DRILLBORNO, REPORTEDBY, CONSULTANT, CONSULOGNO, CONSUBORNO, DRILLEDFOR, DRFORADRES, DRFORPOSTC, DRILSTDATE, DRILENDATE, ABANDONDAT, PREVBORHNO, NUMSUPLBOR, SAMRECEDAT, SAMDESCDAT, NUMOFSAMPL, NUMSAMSTO, LITHOLNOTE, TOGEUSDATE, GRUMOCOUNTYNO, GRUMOBORNO, GRUMOBORTYPE, GRUMOAREANO, BORHTOWNNO2007, LOCQUALI, LOOPAREANO, LOOPSTATION, LOOPTYPE, USECHANGEDATE, ENVCEN, ABANDCAUSE, ABANDCONTR, STARTDAYUNKNOWN, STARTMNTHUNKNWN, WWBOREHOLENO, XUTM32EUREF89, YUTM32EUREF89, ZDVR90, INSTALLATION, WORKINGCONDITIONS, APPROACH, ACCESSREMARK, LOCATEPERSONEMAIL, PRESERVATIONZONE, PROTECTIONZONE, REGION, USECHANGECAUSE, INSERTDATE, UPDATEDATE, INSERTUSER, UPDATEUSER FROM BOREHOLE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.BOREHOLEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.BOREHOLEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.BOREHOLEDataTable dataTable = new DataSet1.BOREHOLEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.BOREHOLEDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "BOREHOLE");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_BOREHOLENO, 
                    string Original_NAMINGSYS, 
                    string Original_PURPOSE, 
                    string Original_USE, 
                    string Original_STATUS, 
                    global::System.Nullable<double> Original_DRILLDEPTH, 
                    global::System.Nullable<double> Original_ELEVATION, 
                    global::System.Nullable<double> Original_CTRPELEVA, 
                    string Original_VERTICAREF, 
                    string Original_CTRPDESCR, 
                    global::System.Nullable<float> Original_CTRPPRECIS, 
                    global::System.Nullable<float> Original_CTRPZPRECIS, 
                    global::System.Nullable<float> Original_CTRPHEIGHT, 
                    string Original_ELEVAMETHO, 
                    string Original_ELEVAQUALI, 
                    string Original_ELEVASOURC, 
                    string Original_LOCATION, 
                    string Original_COMMENTS, 
                    string Original_VARIOUS, 
                    global::System.Nullable<double> Original_XUTM, 
                    global::System.Nullable<double> Original_YUTM, 
                    global::System.Nullable<int> Original_UTMZONE, 
                    string Original_DATUM, 
                    string Original_MAPSHEET, 
                    global::System.Nullable<double> Original_MAPDISTX, 
                    global::System.Nullable<double> Original_MAPDISTY, 
                    global::System.Nullable<double> Original_SYS34X, 
                    global::System.Nullable<double> Original_SYS34Y, 
                    global::System.Nullable<int> Original_SYS34ZONE, 
                    global::System.Nullable<double> Original_LATITUDE, 
                    global::System.Nullable<double> Original_LONGITUDE, 
                    string Original_LOCATMETHO, 
                    string Original_LOCATQUALI, 
                    string Original_LOCATSOURC, 
                    global::System.Nullable<int> Original_BORHPOSTC, 
                    global::System.Nullable<int> Original_BORHTOWNNO, 
                    global::System.Nullable<int> Original_COUNTYNO, 
                    string Original_MUNICIPAL, 
                    global::System.Nullable<int> Original_HOUSEOWNAS, 
                    string Original_LANDREGNO, 
                    string Original_DRILLER, 
                    string Original_DRILLLOGNO, 
                    string Original_DRILLBORNO, 
                    string Original_REPORTEDBY, 
                    string Original_CONSULTANT, 
                    string Original_CONSULOGNO, 
                    string Original_CONSUBORNO, 
                    string Original_DRILLEDFOR, 
                    string Original_DRFORADRES, 
                    global::System.Nullable<int> Original_DRFORPOSTC, 
                    global::System.Nullable<global::System.DateTime> Original_DRILSTDATE, 
                    global::System.Nullable<global::System.DateTime> Original_DRILENDATE, 
                    global::System.Nullable<global::System.DateTime> Original_ABANDONDAT, 
                    string Original_PREVBORHNO, 
                    global::System.Nullable<int> Original_NUMSUPLBOR, 
                    global::System.Nullable<global::System.DateTime> Original_SAMRECEDAT, 
                    global::System.Nullable<global::System.DateTime> Original_SAMDESCDAT, 
                    global::System.Nullable<int> Original_NUMOFSAMPL, 
                    global::System.Nullable<int> Original_NUMSAMSTO, 
                    string Original_LITHOLNOTE, 
                    global::System.Nullable<global::System.DateTime> Original_TOGEUSDATE, 
                    global::System.Nullable<int> Original_GRUMOCOUNTYNO, 
                    global::System.Nullable<int> Original_GRUMOBORNO, 
                    global::System.Nullable<int> Original_GRUMOBORTYPE, 
                    global::System.Nullable<int> Original_GRUMOAREANO, 
                    global::System.Nullable<int> Original_BORHTOWNNO2007, 
                    string Original_LOCQUALI, 
                    global::System.Nullable<int> Original_LOOPAREANO, 
                    global::System.Nullable<int> Original_LOOPSTATION, 
                    global::System.Nullable<int> Original_LOOPTYPE, 
                    global::System.Nullable<global::System.DateTime> Original_USECHANGEDATE, 
                    global::System.Nullable<int> Original_ENVCEN, 
                    string Original_ABANDCAUSE, 
                    string Original_ABANDCONTR, 
                    string Original_STARTDAYUNKNOWN, 
                    string Original_STARTMNTHUNKNWN, 
                    string Original_WWBOREHOLENO, 
                    global::System.Nullable<double> Original_XUTM32EUREF89, 
                    global::System.Nullable<double> Original_YUTM32EUREF89, 
                    global::System.Nullable<double> Original_ZDVR90, 
                    string Original_INSTALLATION, 
                    string Original_WORKINGCONDITIONS, 
                    string Original_APPROACH, 
                    string Original_ACCESSREMARK, 
                    string Original_LOCATEPERSONEMAIL, 
                    global::System.Nullable<int> Original_PRESERVATIONZONE, 
                    global::System.Nullable<int> Original_PROTECTIONZONE, 
                    global::System.Nullable<int> Original_REGION, 
                    global::System.Nullable<int> Original_USECHANGECAUSE, 
                    global::System.Nullable<global::System.DateTime> Original_INSERTDATE, 
                    global::System.Nullable<global::System.DateTime> Original_UPDATEDATE, 
                    string Original_INSERTUSER, 
                    string Original_UPDATEUSER) {
            if ((Original_BOREHOLENO == null)) {
                throw new global::System.ArgumentNullException("Original_BOREHOLENO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_BOREHOLENO));
            }
            if ((Original_NAMINGSYS == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_NAMINGSYS));
            }
            if ((Original_PURPOSE == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_PURPOSE));
            }
            if ((Original_USE == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_USE));
            }
            if ((Original_STATUS == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_STATUS));
            }
            if ((Original_DRILLDEPTH.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((double)(Original_DRILLDEPTH.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_ELEVATION.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((double)(Original_ELEVATION.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_CTRPELEVA.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((double)(Original_CTRPELEVA.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_VERTICAREF == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_VERTICAREF));
            }
            if ((Original_CTRPDESCR == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_CTRPDESCR));
            }
            if ((Original_CTRPPRECIS.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((float)(Original_CTRPPRECIS.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_CTRPZPRECIS.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((float)(Original_CTRPZPRECIS.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_CTRPHEIGHT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((float)(Original_CTRPHEIGHT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_ELEVAMETHO == null)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((string)(Original_ELEVAMETHO));
            }
            if ((Original_ELEVAQUALI == null)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((string)(Original_ELEVAQUALI));
            }
            if ((Original_ELEVASOURC == null)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((string)(Original_ELEVASOURC));
            }
            if ((Original_LOCATION == null)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((string)(Original_LOCATION));
            }
            if ((Original_COMMENTS == null)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((string)(Original_COMMENTS));
            }
            if ((Original_VARIOUS == null)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((string)(Original_VARIOUS));
            }
            if ((Original_XUTM.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((double)(Original_XUTM.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_YUTM.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((double)(Original_YUTM.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Original_UTMZONE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((int)(Original_UTMZONE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Original_DATUM == null)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((string)(Original_DATUM));
            }
            if ((Original_MAPSHEET == null)) {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[46].Value = ((string)(Original_MAPSHEET));
            }
            if ((Original_MAPDISTX.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[48].Value = ((double)(Original_MAPDISTX.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((Original_MAPDISTY.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[50].Value = ((double)(Original_MAPDISTY.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((Original_SYS34X.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[52].Value = ((double)(Original_SYS34X.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((Original_SYS34Y.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[54].Value = ((double)(Original_SYS34Y.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((Original_SYS34ZONE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[56].Value = ((int)(Original_SYS34ZONE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((Original_LATITUDE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[58].Value = ((double)(Original_LATITUDE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((Original_LONGITUDE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[60].Value = ((double)(Original_LONGITUDE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((Original_LOCATMETHO == null)) {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[62].Value = ((string)(Original_LOCATMETHO));
            }
            if ((Original_LOCATQUALI == null)) {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[64].Value = ((string)(Original_LOCATQUALI));
            }
            if ((Original_LOCATSOURC == null)) {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[66].Value = ((string)(Original_LOCATSOURC));
            }
            if ((Original_BORHPOSTC.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[68].Value = ((int)(Original_BORHPOSTC.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((Original_BORHTOWNNO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[70].Value = ((int)(Original_BORHTOWNNO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((Original_COUNTYNO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[71].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[72].Value = ((int)(Original_COUNTYNO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[71].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            if ((Original_MUNICIPAL == null)) {
                this.Adapter.DeleteCommand.Parameters[73].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[73].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[74].Value = ((string)(Original_MUNICIPAL));
            }
            if ((Original_HOUSEOWNAS.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[75].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[76].Value = ((int)(Original_HOUSEOWNAS.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[75].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            if ((Original_LANDREGNO == null)) {
                this.Adapter.DeleteCommand.Parameters[77].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[77].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[78].Value = ((string)(Original_LANDREGNO));
            }
            if ((Original_DRILLER == null)) {
                this.Adapter.DeleteCommand.Parameters[79].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[79].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[80].Value = ((string)(Original_DRILLER));
            }
            if ((Original_DRILLLOGNO == null)) {
                this.Adapter.DeleteCommand.Parameters[81].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[81].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[82].Value = ((string)(Original_DRILLLOGNO));
            }
            if ((Original_DRILLBORNO == null)) {
                this.Adapter.DeleteCommand.Parameters[83].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[83].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[84].Value = ((string)(Original_DRILLBORNO));
            }
            if ((Original_REPORTEDBY == null)) {
                this.Adapter.DeleteCommand.Parameters[85].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[85].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[86].Value = ((string)(Original_REPORTEDBY));
            }
            if ((Original_CONSULTANT == null)) {
                this.Adapter.DeleteCommand.Parameters[87].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[87].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[88].Value = ((string)(Original_CONSULTANT));
            }
            if ((Original_CONSULOGNO == null)) {
                this.Adapter.DeleteCommand.Parameters[89].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[89].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[90].Value = ((string)(Original_CONSULOGNO));
            }
            if ((Original_CONSUBORNO == null)) {
                this.Adapter.DeleteCommand.Parameters[91].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[92].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[91].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[92].Value = ((string)(Original_CONSUBORNO));
            }
            if ((Original_DRILLEDFOR == null)) {
                this.Adapter.DeleteCommand.Parameters[93].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[93].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[94].Value = ((string)(Original_DRILLEDFOR));
            }
            if ((Original_DRFORADRES == null)) {
                this.Adapter.DeleteCommand.Parameters[95].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[96].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[95].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[96].Value = ((string)(Original_DRFORADRES));
            }
            if ((Original_DRFORPOSTC.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[97].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[98].Value = ((int)(Original_DRFORPOSTC.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[97].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[98].Value = global::System.DBNull.Value;
            }
            if ((Original_DRILSTDATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[99].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[100].Value = ((System.DateTime)(Original_DRILSTDATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[99].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[100].Value = global::System.DBNull.Value;
            }
            if ((Original_DRILENDATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[101].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[102].Value = ((System.DateTime)(Original_DRILENDATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[101].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[102].Value = global::System.DBNull.Value;
            }
            if ((Original_ABANDONDAT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[103].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[104].Value = ((System.DateTime)(Original_ABANDONDAT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[103].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[104].Value = global::System.DBNull.Value;
            }
            if ((Original_PREVBORHNO == null)) {
                this.Adapter.DeleteCommand.Parameters[105].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[106].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[105].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[106].Value = ((string)(Original_PREVBORHNO));
            }
            if ((Original_NUMSUPLBOR.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[107].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[108].Value = ((int)(Original_NUMSUPLBOR.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[107].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[108].Value = global::System.DBNull.Value;
            }
            if ((Original_SAMRECEDAT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[109].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[110].Value = ((System.DateTime)(Original_SAMRECEDAT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[109].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[110].Value = global::System.DBNull.Value;
            }
            if ((Original_SAMDESCDAT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[111].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[112].Value = ((System.DateTime)(Original_SAMDESCDAT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[111].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[112].Value = global::System.DBNull.Value;
            }
            if ((Original_NUMOFSAMPL.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[113].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[114].Value = ((int)(Original_NUMOFSAMPL.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[113].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[114].Value = global::System.DBNull.Value;
            }
            if ((Original_NUMSAMSTO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[115].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[116].Value = ((int)(Original_NUMSAMSTO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[115].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[116].Value = global::System.DBNull.Value;
            }
            if ((Original_LITHOLNOTE == null)) {
                this.Adapter.DeleteCommand.Parameters[117].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[118].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[117].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[118].Value = ((string)(Original_LITHOLNOTE));
            }
            if ((Original_TOGEUSDATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[119].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[120].Value = ((System.DateTime)(Original_TOGEUSDATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[119].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[120].Value = global::System.DBNull.Value;
            }
            if ((Original_GRUMOCOUNTYNO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[121].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[122].Value = ((int)(Original_GRUMOCOUNTYNO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[121].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[122].Value = global::System.DBNull.Value;
            }
            if ((Original_GRUMOBORNO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[123].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[124].Value = ((int)(Original_GRUMOBORNO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[123].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[124].Value = global::System.DBNull.Value;
            }
            if ((Original_GRUMOBORTYPE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[125].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[126].Value = ((int)(Original_GRUMOBORTYPE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[125].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[126].Value = global::System.DBNull.Value;
            }
            if ((Original_GRUMOAREANO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[127].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[128].Value = ((int)(Original_GRUMOAREANO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[127].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[128].Value = global::System.DBNull.Value;
            }
            if ((Original_BORHTOWNNO2007.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[129].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[130].Value = ((int)(Original_BORHTOWNNO2007.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[129].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[130].Value = global::System.DBNull.Value;
            }
            if ((Original_LOCQUALI == null)) {
                this.Adapter.DeleteCommand.Parameters[131].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[132].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[131].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[132].Value = ((string)(Original_LOCQUALI));
            }
            if ((Original_LOOPAREANO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[133].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[134].Value = ((int)(Original_LOOPAREANO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[133].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[134].Value = global::System.DBNull.Value;
            }
            if ((Original_LOOPSTATION.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[135].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[136].Value = ((int)(Original_LOOPSTATION.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[135].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[136].Value = global::System.DBNull.Value;
            }
            if ((Original_LOOPTYPE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[137].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[138].Value = ((int)(Original_LOOPTYPE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[137].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[138].Value = global::System.DBNull.Value;
            }
            if ((Original_USECHANGEDATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[139].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[140].Value = ((System.DateTime)(Original_USECHANGEDATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[139].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[140].Value = global::System.DBNull.Value;
            }
            if ((Original_ENVCEN.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[141].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[142].Value = ((int)(Original_ENVCEN.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[141].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[142].Value = global::System.DBNull.Value;
            }
            if ((Original_ABANDCAUSE == null)) {
                this.Adapter.DeleteCommand.Parameters[143].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[144].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[143].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[144].Value = ((string)(Original_ABANDCAUSE));
            }
            if ((Original_ABANDCONTR == null)) {
                this.Adapter.DeleteCommand.Parameters[145].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[146].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[145].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[146].Value = ((string)(Original_ABANDCONTR));
            }
            if ((Original_STARTDAYUNKNOWN == null)) {
                this.Adapter.DeleteCommand.Parameters[147].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[148].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[147].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[148].Value = ((string)(Original_STARTDAYUNKNOWN));
            }
            if ((Original_STARTMNTHUNKNWN == null)) {
                this.Adapter.DeleteCommand.Parameters[149].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[150].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[149].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[150].Value = ((string)(Original_STARTMNTHUNKNWN));
            }
            if ((Original_WWBOREHOLENO == null)) {
                this.Adapter.DeleteCommand.Parameters[151].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[152].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[151].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[152].Value = ((string)(Original_WWBOREHOLENO));
            }
            if ((Original_XUTM32EUREF89.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[153].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[154].Value = ((double)(Original_XUTM32EUREF89.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[153].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[154].Value = global::System.DBNull.Value;
            }
            if ((Original_YUTM32EUREF89.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[155].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[156].Value = ((double)(Original_YUTM32EUREF89.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[155].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[156].Value = global::System.DBNull.Value;
            }
            if ((Original_ZDVR90.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[157].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[158].Value = ((double)(Original_ZDVR90.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[157].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[158].Value = global::System.DBNull.Value;
            }
            if ((Original_INSTALLATION == null)) {
                this.Adapter.DeleteCommand.Parameters[159].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[160].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[159].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[160].Value = ((string)(Original_INSTALLATION));
            }
            if ((Original_WORKINGCONDITIONS == null)) {
                this.Adapter.DeleteCommand.Parameters[161].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[162].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[161].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[162].Value = ((string)(Original_WORKINGCONDITIONS));
            }
            if ((Original_APPROACH == null)) {
                this.Adapter.DeleteCommand.Parameters[163].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[164].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[163].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[164].Value = ((string)(Original_APPROACH));
            }
            if ((Original_ACCESSREMARK == null)) {
                this.Adapter.DeleteCommand.Parameters[165].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[166].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[165].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[166].Value = ((string)(Original_ACCESSREMARK));
            }
            if ((Original_LOCATEPERSONEMAIL == null)) {
                this.Adapter.DeleteCommand.Parameters[167].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[168].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[167].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[168].Value = ((string)(Original_LOCATEPERSONEMAIL));
            }
            if ((Original_PRESERVATIONZONE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[169].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[170].Value = ((int)(Original_PRESERVATIONZONE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[169].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[170].Value = global::System.DBNull.Value;
            }
            if ((Original_PROTECTIONZONE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[171].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[172].Value = ((int)(Original_PROTECTIONZONE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[171].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[172].Value = global::System.DBNull.Value;
            }
            if ((Original_REGION.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[173].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[174].Value = ((int)(Original_REGION.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[173].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[174].Value = global::System.DBNull.Value;
            }
            if ((Original_USECHANGECAUSE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[175].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[176].Value = ((int)(Original_USECHANGECAUSE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[175].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[176].Value = global::System.DBNull.Value;
            }
            if ((Original_INSERTDATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[177].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[178].Value = ((System.DateTime)(Original_INSERTDATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[177].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[178].Value = global::System.DBNull.Value;
            }
            if ((Original_UPDATEDATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[179].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[180].Value = ((System.DateTime)(Original_UPDATEDATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[179].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[180].Value = global::System.DBNull.Value;
            }
            if ((Original_INSERTUSER == null)) {
                this.Adapter.DeleteCommand.Parameters[181].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[182].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[181].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[182].Value = ((string)(Original_INSERTUSER));
            }
            if ((Original_UPDATEUSER == null)) {
                this.Adapter.DeleteCommand.Parameters[183].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[184].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[183].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[184].Value = ((string)(Original_UPDATEUSER));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string BOREHOLENO, 
                    string NAMINGSYS, 
                    string PURPOSE, 
                    string USE, 
                    string STATUS, 
                    global::System.Nullable<double> DRILLDEPTH, 
                    global::System.Nullable<double> ELEVATION, 
                    global::System.Nullable<double> CTRPELEVA, 
                    string VERTICAREF, 
                    string CTRPDESCR, 
                    global::System.Nullable<float> CTRPPRECIS, 
                    global::System.Nullable<float> CTRPZPRECIS, 
                    global::System.Nullable<float> CTRPHEIGHT, 
                    string ELEVAMETHO, 
                    string ELEVAQUALI, 
                    string ELEVASOURC, 
                    string LOCATION, 
                    string COMMENTS, 
                    string VARIOUS, 
                    global::System.Nullable<double> XUTM, 
                    global::System.Nullable<double> YUTM, 
                    global::System.Nullable<int> UTMZONE, 
                    string DATUM, 
                    string MAPSHEET, 
                    global::System.Nullable<double> MAPDISTX, 
                    global::System.Nullable<double> MAPDISTY, 
                    global::System.Nullable<double> SYS34X, 
                    global::System.Nullable<double> SYS34Y, 
                    global::System.Nullable<int> SYS34ZONE, 
                    global::System.Nullable<double> LATITUDE, 
                    global::System.Nullable<double> LONGITUDE, 
                    string LOCATMETHO, 
                    string LOCATQUALI, 
                    string LOCATSOURC, 
                    global::System.Nullable<int> BORHPOSTC, 
                    global::System.Nullable<int> BORHTOWNNO, 
                    global::System.Nullable<int> COUNTYNO, 
                    string MUNICIPAL, 
                    global::System.Nullable<int> HOUSEOWNAS, 
                    string LANDREGNO, 
                    string DRILLER, 
                    string DRILLLOGNO, 
                    string DRILLBORNO, 
                    string REPORTEDBY, 
                    string CONSULTANT, 
                    string CONSULOGNO, 
                    string CONSUBORNO, 
                    string DRILLEDFOR, 
                    string DRFORADRES, 
                    global::System.Nullable<int> DRFORPOSTC, 
                    global::System.Nullable<global::System.DateTime> DRILSTDATE, 
                    global::System.Nullable<global::System.DateTime> DRILENDATE, 
                    global::System.Nullable<global::System.DateTime> ABANDONDAT, 
                    string PREVBORHNO, 
                    global::System.Nullable<int> NUMSUPLBOR, 
                    global::System.Nullable<global::System.DateTime> SAMRECEDAT, 
                    global::System.Nullable<global::System.DateTime> SAMDESCDAT, 
                    global::System.Nullable<int> NUMOFSAMPL, 
                    global::System.Nullable<int> NUMSAMSTO, 
                    string LITHOLNOTE, 
                    global::System.Nullable<global::System.DateTime> TOGEUSDATE, 
                    global::System.Nullable<int> GRUMOCOUNTYNO, 
                    global::System.Nullable<int> GRUMOBORNO, 
                    global::System.Nullable<int> GRUMOBORTYPE, 
                    global::System.Nullable<int> GRUMOAREANO, 
                    global::System.Nullable<int> BORHTOWNNO2007, 
                    string LOCQUALI, 
                    global::System.Nullable<int> LOOPAREANO, 
                    global::System.Nullable<int> LOOPSTATION, 
                    global::System.Nullable<int> LOOPTYPE, 
                    global::System.Nullable<global::System.DateTime> USECHANGEDATE, 
                    global::System.Nullable<int> ENVCEN, 
                    string ABANDCAUSE, 
                    string ABANDCONTR, 
                    string STARTDAYUNKNOWN, 
                    string STARTMNTHUNKNWN, 
                    string WWBOREHOLENO, 
                    global::System.Nullable<double> XUTM32EUREF89, 
                    global::System.Nullable<double> YUTM32EUREF89, 
                    global::System.Nullable<double> ZDVR90, 
                    string INSTALLATION, 
                    string WORKINGCONDITIONS, 
                    string APPROACH, 
                    string ACCESSREMARK, 
                    string LOCATEPERSONEMAIL, 
                    global::System.Nullable<int> PRESERVATIONZONE, 
                    global::System.Nullable<int> PROTECTIONZONE, 
                    global::System.Nullable<int> REGION, 
                    global::System.Nullable<int> USECHANGECAUSE, 
                    global::System.Nullable<global::System.DateTime> INSERTDATE, 
                    global::System.Nullable<global::System.DateTime> UPDATEDATE, 
                    string INSERTUSER, 
                    string UPDATEUSER) {
            if ((BOREHOLENO == null)) {
                throw new global::System.ArgumentNullException("BOREHOLENO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(BOREHOLENO));
            }
            if ((NAMINGSYS == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(NAMINGSYS));
            }
            if ((PURPOSE == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(PURPOSE));
            }
            if ((USE == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(USE));
            }
            if ((STATUS == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(STATUS));
            }
            if ((DRILLDEPTH.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((double)(DRILLDEPTH.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((ELEVATION.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((double)(ELEVATION.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((CTRPELEVA.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((double)(CTRPELEVA.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((VERTICAREF == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(VERTICAREF));
            }
            if ((CTRPDESCR == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(CTRPDESCR));
            }
            if ((CTRPPRECIS.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((float)(CTRPPRECIS.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((CTRPZPRECIS.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((float)(CTRPZPRECIS.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((CTRPHEIGHT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((float)(CTRPHEIGHT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((ELEVAMETHO == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(ELEVAMETHO));
            }
            if ((ELEVAQUALI == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(ELEVAQUALI));
            }
            if ((ELEVASOURC == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(ELEVASOURC));
            }
            if ((LOCATION == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(LOCATION));
            }
            if ((COMMENTS == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(COMMENTS));
            }
            if ((VARIOUS == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(VARIOUS));
            }
            if ((XUTM.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((double)(XUTM.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((YUTM.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((double)(YUTM.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((UTMZONE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((int)(UTMZONE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((DATUM == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(DATUM));
            }
            if ((MAPSHEET == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(MAPSHEET));
            }
            if ((MAPDISTX.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((double)(MAPDISTX.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((MAPDISTY.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((double)(MAPDISTY.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((SYS34X.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((double)(SYS34X.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((SYS34Y.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((double)(SYS34Y.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((SYS34ZONE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((int)(SYS34ZONE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((LATITUDE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((double)(LATITUDE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((LONGITUDE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((double)(LONGITUDE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((LOCATMETHO == null)) {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(LOCATMETHO));
            }
            if ((LOCATQUALI == null)) {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = ((string)(LOCATQUALI));
            }
            if ((LOCATSOURC == null)) {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(LOCATSOURC));
            }
            if ((BORHPOSTC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[34].Value = ((int)(BORHPOSTC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((BORHTOWNNO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[35].Value = ((int)(BORHTOWNNO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((COUNTYNO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[36].Value = ((int)(COUNTYNO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((MUNICIPAL == null)) {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = ((string)(MUNICIPAL));
            }
            if ((HOUSEOWNAS.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[38].Value = ((int)(HOUSEOWNAS.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((LANDREGNO == null)) {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = ((string)(LANDREGNO));
            }
            if ((DRILLER == null)) {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = ((string)(DRILLER));
            }
            if ((DRILLLOGNO == null)) {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = ((string)(DRILLLOGNO));
            }
            if ((DRILLBORNO == null)) {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = ((string)(DRILLBORNO));
            }
            if ((REPORTEDBY == null)) {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = ((string)(REPORTEDBY));
            }
            if ((CONSULTANT == null)) {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = ((string)(CONSULTANT));
            }
            if ((CONSULOGNO == null)) {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = ((string)(CONSULOGNO));
            }
            if ((CONSUBORNO == null)) {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = ((string)(CONSUBORNO));
            }
            if ((DRILLEDFOR == null)) {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = ((string)(DRILLEDFOR));
            }
            if ((DRFORADRES == null)) {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = ((string)(DRFORADRES));
            }
            if ((DRFORPOSTC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[49].Value = ((int)(DRFORPOSTC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((DRILSTDATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[50].Value = ((System.DateTime)(DRILSTDATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((DRILENDATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[51].Value = ((System.DateTime)(DRILENDATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((ABANDONDAT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[52].Value = ((System.DateTime)(ABANDONDAT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((PREVBORHNO == null)) {
                this.Adapter.InsertCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = ((string)(PREVBORHNO));
            }
            if ((NUMSUPLBOR.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[54].Value = ((int)(NUMSUPLBOR.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((SAMRECEDAT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[55].Value = ((System.DateTime)(SAMRECEDAT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((SAMDESCDAT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[56].Value = ((System.DateTime)(SAMDESCDAT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((NUMOFSAMPL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[57].Value = ((int)(NUMOFSAMPL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((NUMSAMSTO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[58].Value = ((int)(NUMSAMSTO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((LITHOLNOTE == null)) {
                this.Adapter.InsertCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[59].Value = ((string)(LITHOLNOTE));
            }
            if ((TOGEUSDATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[60].Value = ((System.DateTime)(TOGEUSDATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((GRUMOCOUNTYNO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[61].Value = ((int)(GRUMOCOUNTYNO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((GRUMOBORNO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[62].Value = ((int)(GRUMOBORNO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((GRUMOBORTYPE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[63].Value = ((int)(GRUMOBORTYPE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            if ((GRUMOAREANO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[64].Value = ((int)(GRUMOAREANO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((BORHTOWNNO2007.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[65].Value = ((int)(BORHTOWNNO2007.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((LOCQUALI == null)) {
                this.Adapter.InsertCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[66].Value = ((string)(LOCQUALI));
            }
            if ((LOOPAREANO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[67].Value = ((int)(LOOPAREANO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            if ((LOOPSTATION.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[68].Value = ((int)(LOOPSTATION.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((LOOPTYPE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[69].Value = ((int)(LOOPTYPE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            if ((USECHANGEDATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[70].Value = ((System.DateTime)(USECHANGEDATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((ENVCEN.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[71].Value = ((int)(ENVCEN.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            if ((ABANDCAUSE == null)) {
                this.Adapter.InsertCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[72].Value = ((string)(ABANDCAUSE));
            }
            if ((ABANDCONTR == null)) {
                this.Adapter.InsertCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[73].Value = ((string)(ABANDCONTR));
            }
            if ((STARTDAYUNKNOWN == null)) {
                this.Adapter.InsertCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[74].Value = ((string)(STARTDAYUNKNOWN));
            }
            if ((STARTMNTHUNKNWN == null)) {
                this.Adapter.InsertCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[75].Value = ((string)(STARTMNTHUNKNWN));
            }
            if ((WWBOREHOLENO == null)) {
                this.Adapter.InsertCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[76].Value = ((string)(WWBOREHOLENO));
            }
            if ((XUTM32EUREF89.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[77].Value = ((double)(XUTM32EUREF89.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            if ((YUTM32EUREF89.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[78].Value = ((double)(YUTM32EUREF89.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((ZDVR90.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[79].Value = ((double)(ZDVR90.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            if ((INSTALLATION == null)) {
                this.Adapter.InsertCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[80].Value = ((string)(INSTALLATION));
            }
            if ((WORKINGCONDITIONS == null)) {
                this.Adapter.InsertCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[81].Value = ((string)(WORKINGCONDITIONS));
            }
            if ((APPROACH == null)) {
                this.Adapter.InsertCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[82].Value = ((string)(APPROACH));
            }
            if ((ACCESSREMARK == null)) {
                this.Adapter.InsertCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[83].Value = ((string)(ACCESSREMARK));
            }
            if ((LOCATEPERSONEMAIL == null)) {
                this.Adapter.InsertCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[84].Value = ((string)(LOCATEPERSONEMAIL));
            }
            if ((PRESERVATIONZONE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[85].Value = ((int)(PRESERVATIONZONE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            if ((PROTECTIONZONE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[86].Value = ((int)(PROTECTIONZONE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            if ((REGION.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[87].Value = ((int)(REGION.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            if ((USECHANGECAUSE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[88].Value = ((int)(USECHANGECAUSE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            if ((INSERTDATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[89].Value = ((System.DateTime)(INSERTDATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            if ((UPDATEDATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[90].Value = ((System.DateTime)(UPDATEDATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            if ((INSERTUSER == null)) {
                this.Adapter.InsertCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[91].Value = ((string)(INSERTUSER));
            }
            if ((UPDATEUSER == null)) {
                this.Adapter.InsertCommand.Parameters[92].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[92].Value = ((string)(UPDATEUSER));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string BOREHOLENO, 
                    string NAMINGSYS, 
                    string PURPOSE, 
                    string USE, 
                    string STATUS, 
                    global::System.Nullable<double> DRILLDEPTH, 
                    global::System.Nullable<double> ELEVATION, 
                    global::System.Nullable<double> CTRPELEVA, 
                    string VERTICAREF, 
                    string CTRPDESCR, 
                    global::System.Nullable<float> CTRPPRECIS, 
                    global::System.Nullable<float> CTRPZPRECIS, 
                    global::System.Nullable<float> CTRPHEIGHT, 
                    string ELEVAMETHO, 
                    string ELEVAQUALI, 
                    string ELEVASOURC, 
                    string LOCATION, 
                    string COMMENTS, 
                    string VARIOUS, 
                    global::System.Nullable<double> XUTM, 
                    global::System.Nullable<double> YUTM, 
                    global::System.Nullable<int> UTMZONE, 
                    string DATUM, 
                    string MAPSHEET, 
                    global::System.Nullable<double> MAPDISTX, 
                    global::System.Nullable<double> MAPDISTY, 
                    global::System.Nullable<double> SYS34X, 
                    global::System.Nullable<double> SYS34Y, 
                    global::System.Nullable<int> SYS34ZONE, 
                    global::System.Nullable<double> LATITUDE, 
                    global::System.Nullable<double> LONGITUDE, 
                    string LOCATMETHO, 
                    string LOCATQUALI, 
                    string LOCATSOURC, 
                    global::System.Nullable<int> BORHPOSTC, 
                    global::System.Nullable<int> BORHTOWNNO, 
                    global::System.Nullable<int> COUNTYNO, 
                    string MUNICIPAL, 
                    global::System.Nullable<int> HOUSEOWNAS, 
                    string LANDREGNO, 
                    string DRILLER, 
                    string DRILLLOGNO, 
                    string DRILLBORNO, 
                    string REPORTEDBY, 
                    string CONSULTANT, 
                    string CONSULOGNO, 
                    string CONSUBORNO, 
                    string DRILLEDFOR, 
                    string DRFORADRES, 
                    global::System.Nullable<int> DRFORPOSTC, 
                    global::System.Nullable<global::System.DateTime> DRILSTDATE, 
                    global::System.Nullable<global::System.DateTime> DRILENDATE, 
                    global::System.Nullable<global::System.DateTime> ABANDONDAT, 
                    string PREVBORHNO, 
                    global::System.Nullable<int> NUMSUPLBOR, 
                    global::System.Nullable<global::System.DateTime> SAMRECEDAT, 
                    global::System.Nullable<global::System.DateTime> SAMDESCDAT, 
                    global::System.Nullable<int> NUMOFSAMPL, 
                    global::System.Nullable<int> NUMSAMSTO, 
                    string LITHOLNOTE, 
                    global::System.Nullable<global::System.DateTime> TOGEUSDATE, 
                    global::System.Nullable<int> GRUMOCOUNTYNO, 
                    global::System.Nullable<int> GRUMOBORNO, 
                    global::System.Nullable<int> GRUMOBORTYPE, 
                    global::System.Nullable<int> GRUMOAREANO, 
                    global::System.Nullable<int> BORHTOWNNO2007, 
                    string LOCQUALI, 
                    global::System.Nullable<int> LOOPAREANO, 
                    global::System.Nullable<int> LOOPSTATION, 
                    global::System.Nullable<int> LOOPTYPE, 
                    global::System.Nullable<global::System.DateTime> USECHANGEDATE, 
                    global::System.Nullable<int> ENVCEN, 
                    string ABANDCAUSE, 
                    string ABANDCONTR, 
                    string STARTDAYUNKNOWN, 
                    string STARTMNTHUNKNWN, 
                    string WWBOREHOLENO, 
                    global::System.Nullable<double> XUTM32EUREF89, 
                    global::System.Nullable<double> YUTM32EUREF89, 
                    global::System.Nullable<double> ZDVR90, 
                    string INSTALLATION, 
                    string WORKINGCONDITIONS, 
                    string APPROACH, 
                    string ACCESSREMARK, 
                    string LOCATEPERSONEMAIL, 
                    global::System.Nullable<int> PRESERVATIONZONE, 
                    global::System.Nullable<int> PROTECTIONZONE, 
                    global::System.Nullable<int> REGION, 
                    global::System.Nullable<int> USECHANGECAUSE, 
                    global::System.Nullable<global::System.DateTime> INSERTDATE, 
                    global::System.Nullable<global::System.DateTime> UPDATEDATE, 
                    string INSERTUSER, 
                    string UPDATEUSER, 
                    string Original_BOREHOLENO, 
                    string Original_NAMINGSYS, 
                    string Original_PURPOSE, 
                    string Original_USE, 
                    string Original_STATUS, 
                    global::System.Nullable<double> Original_DRILLDEPTH, 
                    global::System.Nullable<double> Original_ELEVATION, 
                    global::System.Nullable<double> Original_CTRPELEVA, 
                    string Original_VERTICAREF, 
                    string Original_CTRPDESCR, 
                    global::System.Nullable<float> Original_CTRPPRECIS, 
                    global::System.Nullable<float> Original_CTRPZPRECIS, 
                    global::System.Nullable<float> Original_CTRPHEIGHT, 
                    string Original_ELEVAMETHO, 
                    string Original_ELEVAQUALI, 
                    string Original_ELEVASOURC, 
                    string Original_LOCATION, 
                    string Original_COMMENTS, 
                    string Original_VARIOUS, 
                    global::System.Nullable<double> Original_XUTM, 
                    global::System.Nullable<double> Original_YUTM, 
                    global::System.Nullable<int> Original_UTMZONE, 
                    string Original_DATUM, 
                    string Original_MAPSHEET, 
                    global::System.Nullable<double> Original_MAPDISTX, 
                    global::System.Nullable<double> Original_MAPDISTY, 
                    global::System.Nullable<double> Original_SYS34X, 
                    global::System.Nullable<double> Original_SYS34Y, 
                    global::System.Nullable<int> Original_SYS34ZONE, 
                    global::System.Nullable<double> Original_LATITUDE, 
                    global::System.Nullable<double> Original_LONGITUDE, 
                    string Original_LOCATMETHO, 
                    string Original_LOCATQUALI, 
                    string Original_LOCATSOURC, 
                    global::System.Nullable<int> Original_BORHPOSTC, 
                    global::System.Nullable<int> Original_BORHTOWNNO, 
                    global::System.Nullable<int> Original_COUNTYNO, 
                    string Original_MUNICIPAL, 
                    global::System.Nullable<int> Original_HOUSEOWNAS, 
                    string Original_LANDREGNO, 
                    string Original_DRILLER, 
                    string Original_DRILLLOGNO, 
                    string Original_DRILLBORNO, 
                    string Original_REPORTEDBY, 
                    string Original_CONSULTANT, 
                    string Original_CONSULOGNO, 
                    string Original_CONSUBORNO, 
                    string Original_DRILLEDFOR, 
                    string Original_DRFORADRES, 
                    global::System.Nullable<int> Original_DRFORPOSTC, 
                    global::System.Nullable<global::System.DateTime> Original_DRILSTDATE, 
                    global::System.Nullable<global::System.DateTime> Original_DRILENDATE, 
                    global::System.Nullable<global::System.DateTime> Original_ABANDONDAT, 
                    string Original_PREVBORHNO, 
                    global::System.Nullable<int> Original_NUMSUPLBOR, 
                    global::System.Nullable<global::System.DateTime> Original_SAMRECEDAT, 
                    global::System.Nullable<global::System.DateTime> Original_SAMDESCDAT, 
                    global::System.Nullable<int> Original_NUMOFSAMPL, 
                    global::System.Nullable<int> Original_NUMSAMSTO, 
                    string Original_LITHOLNOTE, 
                    global::System.Nullable<global::System.DateTime> Original_TOGEUSDATE, 
                    global::System.Nullable<int> Original_GRUMOCOUNTYNO, 
                    global::System.Nullable<int> Original_GRUMOBORNO, 
                    global::System.Nullable<int> Original_GRUMOBORTYPE, 
                    global::System.Nullable<int> Original_GRUMOAREANO, 
                    global::System.Nullable<int> Original_BORHTOWNNO2007, 
                    string Original_LOCQUALI, 
                    global::System.Nullable<int> Original_LOOPAREANO, 
                    global::System.Nullable<int> Original_LOOPSTATION, 
                    global::System.Nullable<int> Original_LOOPTYPE, 
                    global::System.Nullable<global::System.DateTime> Original_USECHANGEDATE, 
                    global::System.Nullable<int> Original_ENVCEN, 
                    string Original_ABANDCAUSE, 
                    string Original_ABANDCONTR, 
                    string Original_STARTDAYUNKNOWN, 
                    string Original_STARTMNTHUNKNWN, 
                    string Original_WWBOREHOLENO, 
                    global::System.Nullable<double> Original_XUTM32EUREF89, 
                    global::System.Nullable<double> Original_YUTM32EUREF89, 
                    global::System.Nullable<double> Original_ZDVR90, 
                    string Original_INSTALLATION, 
                    string Original_WORKINGCONDITIONS, 
                    string Original_APPROACH, 
                    string Original_ACCESSREMARK, 
                    string Original_LOCATEPERSONEMAIL, 
                    global::System.Nullable<int> Original_PRESERVATIONZONE, 
                    global::System.Nullable<int> Original_PROTECTIONZONE, 
                    global::System.Nullable<int> Original_REGION, 
                    global::System.Nullable<int> Original_USECHANGECAUSE, 
                    global::System.Nullable<global::System.DateTime> Original_INSERTDATE, 
                    global::System.Nullable<global::System.DateTime> Original_UPDATEDATE, 
                    string Original_INSERTUSER, 
                    string Original_UPDATEUSER) {
            if ((BOREHOLENO == null)) {
                throw new global::System.ArgumentNullException("BOREHOLENO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(BOREHOLENO));
            }
            if ((NAMINGSYS == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(NAMINGSYS));
            }
            if ((PURPOSE == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(PURPOSE));
            }
            if ((USE == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(USE));
            }
            if ((STATUS == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(STATUS));
            }
            if ((DRILLDEPTH.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((double)(DRILLDEPTH.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((ELEVATION.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((double)(ELEVATION.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((CTRPELEVA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((double)(CTRPELEVA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((VERTICAREF == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(VERTICAREF));
            }
            if ((CTRPDESCR == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(CTRPDESCR));
            }
            if ((CTRPPRECIS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((float)(CTRPPRECIS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((CTRPZPRECIS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((float)(CTRPZPRECIS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((CTRPHEIGHT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((float)(CTRPHEIGHT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((ELEVAMETHO == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(ELEVAMETHO));
            }
            if ((ELEVAQUALI == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(ELEVAQUALI));
            }
            if ((ELEVASOURC == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(ELEVASOURC));
            }
            if ((LOCATION == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(LOCATION));
            }
            if ((COMMENTS == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(COMMENTS));
            }
            if ((VARIOUS == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(VARIOUS));
            }
            if ((XUTM.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((double)(XUTM.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((YUTM.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((double)(YUTM.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((UTMZONE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(UTMZONE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((DATUM == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(DATUM));
            }
            if ((MAPSHEET == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(MAPSHEET));
            }
            if ((MAPDISTX.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((double)(MAPDISTX.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((MAPDISTY.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((double)(MAPDISTY.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((SYS34X.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((double)(SYS34X.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((SYS34Y.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((double)(SYS34Y.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((SYS34ZONE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((int)(SYS34ZONE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((LATITUDE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((double)(LATITUDE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((LONGITUDE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((double)(LONGITUDE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((LOCATMETHO == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(LOCATMETHO));
            }
            if ((LOCATQUALI == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(LOCATQUALI));
            }
            if ((LOCATSOURC == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(LOCATSOURC));
            }
            if ((BORHPOSTC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((int)(BORHPOSTC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((BORHTOWNNO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((int)(BORHTOWNNO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((COUNTYNO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((int)(COUNTYNO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((MUNICIPAL == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(MUNICIPAL));
            }
            if ((HOUSEOWNAS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((int)(HOUSEOWNAS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((LANDREGNO == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(LANDREGNO));
            }
            if ((DRILLER == null)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(DRILLER));
            }
            if ((DRILLLOGNO == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(DRILLLOGNO));
            }
            if ((DRILLBORNO == null)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(DRILLBORNO));
            }
            if ((REPORTEDBY == null)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(REPORTEDBY));
            }
            if ((CONSULTANT == null)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(CONSULTANT));
            }
            if ((CONSULOGNO == null)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(CONSULOGNO));
            }
            if ((CONSUBORNO == null)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(CONSUBORNO));
            }
            if ((DRILLEDFOR == null)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(DRILLEDFOR));
            }
            if ((DRFORADRES == null)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(DRFORADRES));
            }
            if ((DRFORPOSTC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((int)(DRFORPOSTC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((DRILSTDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((System.DateTime)(DRILSTDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((DRILENDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((System.DateTime)(DRILENDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((ABANDONDAT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((System.DateTime)(ABANDONDAT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((PREVBORHNO == null)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(PREVBORHNO));
            }
            if ((NUMSUPLBOR.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((int)(NUMSUPLBOR.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((SAMRECEDAT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((System.DateTime)(SAMRECEDAT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((SAMDESCDAT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((System.DateTime)(SAMDESCDAT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((NUMOFSAMPL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((int)(NUMOFSAMPL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((NUMSAMSTO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((int)(NUMSAMSTO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((LITHOLNOTE == null)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((string)(LITHOLNOTE));
            }
            if ((TOGEUSDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((System.DateTime)(TOGEUSDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((GRUMOCOUNTYNO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((int)(GRUMOCOUNTYNO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((GRUMOBORNO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((int)(GRUMOBORNO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((GRUMOBORTYPE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((int)(GRUMOBORTYPE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            if ((GRUMOAREANO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((int)(GRUMOAREANO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((BORHTOWNNO2007.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((int)(BORHTOWNNO2007.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((LOCQUALI == null)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((string)(LOCQUALI));
            }
            if ((LOOPAREANO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((int)(LOOPAREANO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            if ((LOOPSTATION.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((int)(LOOPSTATION.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((LOOPTYPE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((int)(LOOPTYPE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            if ((USECHANGEDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((System.DateTime)(USECHANGEDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((ENVCEN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((int)(ENVCEN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            if ((ABANDCAUSE == null)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((string)(ABANDCAUSE));
            }
            if ((ABANDCONTR == null)) {
                this.Adapter.UpdateCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((string)(ABANDCONTR));
            }
            if ((STARTDAYUNKNOWN == null)) {
                this.Adapter.UpdateCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((string)(STARTDAYUNKNOWN));
            }
            if ((STARTMNTHUNKNWN == null)) {
                this.Adapter.UpdateCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((string)(STARTMNTHUNKNWN));
            }
            if ((WWBOREHOLENO == null)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((string)(WWBOREHOLENO));
            }
            if ((XUTM32EUREF89.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((double)(XUTM32EUREF89.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            if ((YUTM32EUREF89.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((double)(YUTM32EUREF89.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((ZDVR90.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((double)(ZDVR90.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            if ((INSTALLATION == null)) {
                this.Adapter.UpdateCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((string)(INSTALLATION));
            }
            if ((WORKINGCONDITIONS == null)) {
                this.Adapter.UpdateCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((string)(WORKINGCONDITIONS));
            }
            if ((APPROACH == null)) {
                this.Adapter.UpdateCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((string)(APPROACH));
            }
            if ((ACCESSREMARK == null)) {
                this.Adapter.UpdateCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((string)(ACCESSREMARK));
            }
            if ((LOCATEPERSONEMAIL == null)) {
                this.Adapter.UpdateCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((string)(LOCATEPERSONEMAIL));
            }
            if ((PRESERVATIONZONE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((int)(PRESERVATIONZONE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            if ((PROTECTIONZONE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((int)(PROTECTIONZONE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            if ((REGION.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((int)(REGION.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            if ((USECHANGECAUSE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((int)(USECHANGECAUSE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            if ((INSERTDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[89].Value = ((System.DateTime)(INSERTDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            if ((UPDATEDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((System.DateTime)(UPDATEDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            if ((INSERTUSER == null)) {
                this.Adapter.UpdateCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[91].Value = ((string)(INSERTUSER));
            }
            if ((UPDATEUSER == null)) {
                this.Adapter.UpdateCommand.Parameters[92].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((string)(UPDATEUSER));
            }
            if ((Original_BOREHOLENO == null)) {
                throw new global::System.ArgumentNullException("Original_BOREHOLENO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[93].Value = ((string)(Original_BOREHOLENO));
            }
            if ((Original_NAMINGSYS == null)) {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[95].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[95].Value = ((string)(Original_NAMINGSYS));
            }
            if ((Original_PURPOSE == null)) {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[97].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[97].Value = ((string)(Original_PURPOSE));
            }
            if ((Original_USE == null)) {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[99].Value = ((string)(Original_USE));
            }
            if ((Original_STATUS == null)) {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[101].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[101].Value = ((string)(Original_STATUS));
            }
            if ((Original_DRILLDEPTH.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[103].Value = ((double)(Original_DRILLDEPTH.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[103].Value = global::System.DBNull.Value;
            }
            if ((Original_ELEVATION.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[105].Value = ((double)(Original_ELEVATION.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[105].Value = global::System.DBNull.Value;
            }
            if ((Original_CTRPELEVA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[107].Value = ((double)(Original_CTRPELEVA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[107].Value = global::System.DBNull.Value;
            }
            if ((Original_VERTICAREF == null)) {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[109].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[109].Value = ((string)(Original_VERTICAREF));
            }
            if ((Original_CTRPDESCR == null)) {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[111].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[111].Value = ((string)(Original_CTRPDESCR));
            }
            if ((Original_CTRPPRECIS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[113].Value = ((float)(Original_CTRPPRECIS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[113].Value = global::System.DBNull.Value;
            }
            if ((Original_CTRPZPRECIS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[114].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[115].Value = ((float)(Original_CTRPZPRECIS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[114].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[115].Value = global::System.DBNull.Value;
            }
            if ((Original_CTRPHEIGHT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[117].Value = ((float)(Original_CTRPHEIGHT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[117].Value = global::System.DBNull.Value;
            }
            if ((Original_ELEVAMETHO == null)) {
                this.Adapter.UpdateCommand.Parameters[118].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[119].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[118].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[119].Value = ((string)(Original_ELEVAMETHO));
            }
            if ((Original_ELEVAQUALI == null)) {
                this.Adapter.UpdateCommand.Parameters[120].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[121].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[120].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[121].Value = ((string)(Original_ELEVAQUALI));
            }
            if ((Original_ELEVASOURC == null)) {
                this.Adapter.UpdateCommand.Parameters[122].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[123].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[122].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[123].Value = ((string)(Original_ELEVASOURC));
            }
            if ((Original_LOCATION == null)) {
                this.Adapter.UpdateCommand.Parameters[124].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[125].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[124].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[125].Value = ((string)(Original_LOCATION));
            }
            if ((Original_COMMENTS == null)) {
                this.Adapter.UpdateCommand.Parameters[126].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[127].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[126].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[127].Value = ((string)(Original_COMMENTS));
            }
            if ((Original_VARIOUS == null)) {
                this.Adapter.UpdateCommand.Parameters[128].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[129].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[128].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[129].Value = ((string)(Original_VARIOUS));
            }
            if ((Original_XUTM.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[130].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[131].Value = ((double)(Original_XUTM.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[130].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[131].Value = global::System.DBNull.Value;
            }
            if ((Original_YUTM.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[132].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[133].Value = ((double)(Original_YUTM.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[132].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[133].Value = global::System.DBNull.Value;
            }
            if ((Original_UTMZONE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[134].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[135].Value = ((int)(Original_UTMZONE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[134].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[135].Value = global::System.DBNull.Value;
            }
            if ((Original_DATUM == null)) {
                this.Adapter.UpdateCommand.Parameters[136].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[137].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[136].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[137].Value = ((string)(Original_DATUM));
            }
            if ((Original_MAPSHEET == null)) {
                this.Adapter.UpdateCommand.Parameters[138].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[139].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[138].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[139].Value = ((string)(Original_MAPSHEET));
            }
            if ((Original_MAPDISTX.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[140].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[141].Value = ((double)(Original_MAPDISTX.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[140].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[141].Value = global::System.DBNull.Value;
            }
            if ((Original_MAPDISTY.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[142].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[143].Value = ((double)(Original_MAPDISTY.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[142].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[143].Value = global::System.DBNull.Value;
            }
            if ((Original_SYS34X.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[144].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[145].Value = ((double)(Original_SYS34X.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[144].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[145].Value = global::System.DBNull.Value;
            }
            if ((Original_SYS34Y.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[146].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[147].Value = ((double)(Original_SYS34Y.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[146].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[147].Value = global::System.DBNull.Value;
            }
            if ((Original_SYS34ZONE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[148].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[149].Value = ((int)(Original_SYS34ZONE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[148].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[149].Value = global::System.DBNull.Value;
            }
            if ((Original_LATITUDE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[150].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[151].Value = ((double)(Original_LATITUDE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[150].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[151].Value = global::System.DBNull.Value;
            }
            if ((Original_LONGITUDE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[152].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[153].Value = ((double)(Original_LONGITUDE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[152].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[153].Value = global::System.DBNull.Value;
            }
            if ((Original_LOCATMETHO == null)) {
                this.Adapter.UpdateCommand.Parameters[154].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[155].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[154].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[155].Value = ((string)(Original_LOCATMETHO));
            }
            if ((Original_LOCATQUALI == null)) {
                this.Adapter.UpdateCommand.Parameters[156].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[157].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[156].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[157].Value = ((string)(Original_LOCATQUALI));
            }
            if ((Original_LOCATSOURC == null)) {
                this.Adapter.UpdateCommand.Parameters[158].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[159].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[158].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[159].Value = ((string)(Original_LOCATSOURC));
            }
            if ((Original_BORHPOSTC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[160].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[161].Value = ((int)(Original_BORHPOSTC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[160].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[161].Value = global::System.DBNull.Value;
            }
            if ((Original_BORHTOWNNO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[162].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[163].Value = ((int)(Original_BORHTOWNNO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[162].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[163].Value = global::System.DBNull.Value;
            }
            if ((Original_COUNTYNO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[164].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[165].Value = ((int)(Original_COUNTYNO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[164].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[165].Value = global::System.DBNull.Value;
            }
            if ((Original_MUNICIPAL == null)) {
                this.Adapter.UpdateCommand.Parameters[166].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[167].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[166].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[167].Value = ((string)(Original_MUNICIPAL));
            }
            if ((Original_HOUSEOWNAS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[168].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[169].Value = ((int)(Original_HOUSEOWNAS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[168].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[169].Value = global::System.DBNull.Value;
            }
            if ((Original_LANDREGNO == null)) {
                this.Adapter.UpdateCommand.Parameters[170].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[171].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[170].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[171].Value = ((string)(Original_LANDREGNO));
            }
            if ((Original_DRILLER == null)) {
                this.Adapter.UpdateCommand.Parameters[172].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[173].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[172].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[173].Value = ((string)(Original_DRILLER));
            }
            if ((Original_DRILLLOGNO == null)) {
                this.Adapter.UpdateCommand.Parameters[174].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[175].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[174].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[175].Value = ((string)(Original_DRILLLOGNO));
            }
            if ((Original_DRILLBORNO == null)) {
                this.Adapter.UpdateCommand.Parameters[176].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[177].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[176].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[177].Value = ((string)(Original_DRILLBORNO));
            }
            if ((Original_REPORTEDBY == null)) {
                this.Adapter.UpdateCommand.Parameters[178].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[179].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[178].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[179].Value = ((string)(Original_REPORTEDBY));
            }
            if ((Original_CONSULTANT == null)) {
                this.Adapter.UpdateCommand.Parameters[180].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[181].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[180].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[181].Value = ((string)(Original_CONSULTANT));
            }
            if ((Original_CONSULOGNO == null)) {
                this.Adapter.UpdateCommand.Parameters[182].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[183].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[182].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[183].Value = ((string)(Original_CONSULOGNO));
            }
            if ((Original_CONSUBORNO == null)) {
                this.Adapter.UpdateCommand.Parameters[184].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[185].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[184].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[185].Value = ((string)(Original_CONSUBORNO));
            }
            if ((Original_DRILLEDFOR == null)) {
                this.Adapter.UpdateCommand.Parameters[186].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[187].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[186].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[187].Value = ((string)(Original_DRILLEDFOR));
            }
            if ((Original_DRFORADRES == null)) {
                this.Adapter.UpdateCommand.Parameters[188].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[189].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[188].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[189].Value = ((string)(Original_DRFORADRES));
            }
            if ((Original_DRFORPOSTC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[190].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[191].Value = ((int)(Original_DRFORPOSTC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[190].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[191].Value = global::System.DBNull.Value;
            }
            if ((Original_DRILSTDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[192].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[193].Value = ((System.DateTime)(Original_DRILSTDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[192].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[193].Value = global::System.DBNull.Value;
            }
            if ((Original_DRILENDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[194].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[195].Value = ((System.DateTime)(Original_DRILENDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[194].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[195].Value = global::System.DBNull.Value;
            }
            if ((Original_ABANDONDAT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[196].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[197].Value = ((System.DateTime)(Original_ABANDONDAT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[196].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[197].Value = global::System.DBNull.Value;
            }
            if ((Original_PREVBORHNO == null)) {
                this.Adapter.UpdateCommand.Parameters[198].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[199].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[198].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[199].Value = ((string)(Original_PREVBORHNO));
            }
            if ((Original_NUMSUPLBOR.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[200].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[201].Value = ((int)(Original_NUMSUPLBOR.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[200].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[201].Value = global::System.DBNull.Value;
            }
            if ((Original_SAMRECEDAT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[202].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[203].Value = ((System.DateTime)(Original_SAMRECEDAT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[202].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[203].Value = global::System.DBNull.Value;
            }
            if ((Original_SAMDESCDAT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[204].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[205].Value = ((System.DateTime)(Original_SAMDESCDAT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[204].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[205].Value = global::System.DBNull.Value;
            }
            if ((Original_NUMOFSAMPL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[206].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[207].Value = ((int)(Original_NUMOFSAMPL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[206].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[207].Value = global::System.DBNull.Value;
            }
            if ((Original_NUMSAMSTO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[208].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[209].Value = ((int)(Original_NUMSAMSTO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[208].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[209].Value = global::System.DBNull.Value;
            }
            if ((Original_LITHOLNOTE == null)) {
                this.Adapter.UpdateCommand.Parameters[210].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[211].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[210].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[211].Value = ((string)(Original_LITHOLNOTE));
            }
            if ((Original_TOGEUSDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[212].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[213].Value = ((System.DateTime)(Original_TOGEUSDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[212].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[213].Value = global::System.DBNull.Value;
            }
            if ((Original_GRUMOCOUNTYNO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[214].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[215].Value = ((int)(Original_GRUMOCOUNTYNO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[214].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[215].Value = global::System.DBNull.Value;
            }
            if ((Original_GRUMOBORNO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[216].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[217].Value = ((int)(Original_GRUMOBORNO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[216].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[217].Value = global::System.DBNull.Value;
            }
            if ((Original_GRUMOBORTYPE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[218].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[219].Value = ((int)(Original_GRUMOBORTYPE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[218].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[219].Value = global::System.DBNull.Value;
            }
            if ((Original_GRUMOAREANO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[220].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[221].Value = ((int)(Original_GRUMOAREANO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[220].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[221].Value = global::System.DBNull.Value;
            }
            if ((Original_BORHTOWNNO2007.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[222].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[223].Value = ((int)(Original_BORHTOWNNO2007.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[222].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[223].Value = global::System.DBNull.Value;
            }
            if ((Original_LOCQUALI == null)) {
                this.Adapter.UpdateCommand.Parameters[224].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[225].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[224].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[225].Value = ((string)(Original_LOCQUALI));
            }
            if ((Original_LOOPAREANO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[226].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[227].Value = ((int)(Original_LOOPAREANO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[226].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[227].Value = global::System.DBNull.Value;
            }
            if ((Original_LOOPSTATION.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[228].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[229].Value = ((int)(Original_LOOPSTATION.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[228].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[229].Value = global::System.DBNull.Value;
            }
            if ((Original_LOOPTYPE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[230].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[231].Value = ((int)(Original_LOOPTYPE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[230].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[231].Value = global::System.DBNull.Value;
            }
            if ((Original_USECHANGEDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[232].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[233].Value = ((System.DateTime)(Original_USECHANGEDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[232].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[233].Value = global::System.DBNull.Value;
            }
            if ((Original_ENVCEN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[234].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[235].Value = ((int)(Original_ENVCEN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[234].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[235].Value = global::System.DBNull.Value;
            }
            if ((Original_ABANDCAUSE == null)) {
                this.Adapter.UpdateCommand.Parameters[236].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[237].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[236].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[237].Value = ((string)(Original_ABANDCAUSE));
            }
            if ((Original_ABANDCONTR == null)) {
                this.Adapter.UpdateCommand.Parameters[238].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[239].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[238].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[239].Value = ((string)(Original_ABANDCONTR));
            }
            if ((Original_STARTDAYUNKNOWN == null)) {
                this.Adapter.UpdateCommand.Parameters[240].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[241].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[240].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[241].Value = ((string)(Original_STARTDAYUNKNOWN));
            }
            if ((Original_STARTMNTHUNKNWN == null)) {
                this.Adapter.UpdateCommand.Parameters[242].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[243].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[242].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[243].Value = ((string)(Original_STARTMNTHUNKNWN));
            }
            if ((Original_WWBOREHOLENO == null)) {
                this.Adapter.UpdateCommand.Parameters[244].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[245].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[244].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[245].Value = ((string)(Original_WWBOREHOLENO));
            }
            if ((Original_XUTM32EUREF89.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[246].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[247].Value = ((double)(Original_XUTM32EUREF89.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[246].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[247].Value = global::System.DBNull.Value;
            }
            if ((Original_YUTM32EUREF89.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[248].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[249].Value = ((double)(Original_YUTM32EUREF89.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[248].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[249].Value = global::System.DBNull.Value;
            }
            if ((Original_ZDVR90.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[250].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[251].Value = ((double)(Original_ZDVR90.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[250].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[251].Value = global::System.DBNull.Value;
            }
            if ((Original_INSTALLATION == null)) {
                this.Adapter.UpdateCommand.Parameters[252].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[253].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[252].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[253].Value = ((string)(Original_INSTALLATION));
            }
            if ((Original_WORKINGCONDITIONS == null)) {
                this.Adapter.UpdateCommand.Parameters[254].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[255].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[254].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[255].Value = ((string)(Original_WORKINGCONDITIONS));
            }
            if ((Original_APPROACH == null)) {
                this.Adapter.UpdateCommand.Parameters[256].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[257].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[256].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[257].Value = ((string)(Original_APPROACH));
            }
            if ((Original_ACCESSREMARK == null)) {
                this.Adapter.UpdateCommand.Parameters[258].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[259].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[258].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[259].Value = ((string)(Original_ACCESSREMARK));
            }
            if ((Original_LOCATEPERSONEMAIL == null)) {
                this.Adapter.UpdateCommand.Parameters[260].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[261].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[260].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[261].Value = ((string)(Original_LOCATEPERSONEMAIL));
            }
            if ((Original_PRESERVATIONZONE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[262].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[263].Value = ((int)(Original_PRESERVATIONZONE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[262].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[263].Value = global::System.DBNull.Value;
            }
            if ((Original_PROTECTIONZONE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[264].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[265].Value = ((int)(Original_PROTECTIONZONE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[264].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[265].Value = global::System.DBNull.Value;
            }
            if ((Original_REGION.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[266].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[267].Value = ((int)(Original_REGION.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[266].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[267].Value = global::System.DBNull.Value;
            }
            if ((Original_USECHANGECAUSE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[268].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[269].Value = ((int)(Original_USECHANGECAUSE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[268].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[269].Value = global::System.DBNull.Value;
            }
            if ((Original_INSERTDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[270].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[271].Value = ((System.DateTime)(Original_INSERTDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[270].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[271].Value = global::System.DBNull.Value;
            }
            if ((Original_UPDATEDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[272].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[273].Value = ((System.DateTime)(Original_UPDATEDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[272].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[273].Value = global::System.DBNull.Value;
            }
            if ((Original_INSERTUSER == null)) {
                this.Adapter.UpdateCommand.Parameters[274].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[275].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[274].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[275].Value = ((string)(Original_INSERTUSER));
            }
            if ((Original_UPDATEUSER == null)) {
                this.Adapter.UpdateCommand.Parameters[276].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[277].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[276].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[277].Value = ((string)(Original_UPDATEUSER));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string NAMINGSYS, 
                    string PURPOSE, 
                    string USE, 
                    string STATUS, 
                    global::System.Nullable<double> DRILLDEPTH, 
                    global::System.Nullable<double> ELEVATION, 
                    global::System.Nullable<double> CTRPELEVA, 
                    string VERTICAREF, 
                    string CTRPDESCR, 
                    global::System.Nullable<float> CTRPPRECIS, 
                    global::System.Nullable<float> CTRPZPRECIS, 
                    global::System.Nullable<float> CTRPHEIGHT, 
                    string ELEVAMETHO, 
                    string ELEVAQUALI, 
                    string ELEVASOURC, 
                    string LOCATION, 
                    string COMMENTS, 
                    string VARIOUS, 
                    global::System.Nullable<double> XUTM, 
                    global::System.Nullable<double> YUTM, 
                    global::System.Nullable<int> UTMZONE, 
                    string DATUM, 
                    string MAPSHEET, 
                    global::System.Nullable<double> MAPDISTX, 
                    global::System.Nullable<double> MAPDISTY, 
                    global::System.Nullable<double> SYS34X, 
                    global::System.Nullable<double> SYS34Y, 
                    global::System.Nullable<int> SYS34ZONE, 
                    global::System.Nullable<double> LATITUDE, 
                    global::System.Nullable<double> LONGITUDE, 
                    string LOCATMETHO, 
                    string LOCATQUALI, 
                    string LOCATSOURC, 
                    global::System.Nullable<int> BORHPOSTC, 
                    global::System.Nullable<int> BORHTOWNNO, 
                    global::System.Nullable<int> COUNTYNO, 
                    string MUNICIPAL, 
                    global::System.Nullable<int> HOUSEOWNAS, 
                    string LANDREGNO, 
                    string DRILLER, 
                    string DRILLLOGNO, 
                    string DRILLBORNO, 
                    string REPORTEDBY, 
                    string CONSULTANT, 
                    string CONSULOGNO, 
                    string CONSUBORNO, 
                    string DRILLEDFOR, 
                    string DRFORADRES, 
                    global::System.Nullable<int> DRFORPOSTC, 
                    global::System.Nullable<global::System.DateTime> DRILSTDATE, 
                    global::System.Nullable<global::System.DateTime> DRILENDATE, 
                    global::System.Nullable<global::System.DateTime> ABANDONDAT, 
                    string PREVBORHNO, 
                    global::System.Nullable<int> NUMSUPLBOR, 
                    global::System.Nullable<global::System.DateTime> SAMRECEDAT, 
                    global::System.Nullable<global::System.DateTime> SAMDESCDAT, 
                    global::System.Nullable<int> NUMOFSAMPL, 
                    global::System.Nullable<int> NUMSAMSTO, 
                    string LITHOLNOTE, 
                    global::System.Nullable<global::System.DateTime> TOGEUSDATE, 
                    global::System.Nullable<int> GRUMOCOUNTYNO, 
                    global::System.Nullable<int> GRUMOBORNO, 
                    global::System.Nullable<int> GRUMOBORTYPE, 
                    global::System.Nullable<int> GRUMOAREANO, 
                    global::System.Nullable<int> BORHTOWNNO2007, 
                    string LOCQUALI, 
                    global::System.Nullable<int> LOOPAREANO, 
                    global::System.Nullable<int> LOOPSTATION, 
                    global::System.Nullable<int> LOOPTYPE, 
                    global::System.Nullable<global::System.DateTime> USECHANGEDATE, 
                    global::System.Nullable<int> ENVCEN, 
                    string ABANDCAUSE, 
                    string ABANDCONTR, 
                    string STARTDAYUNKNOWN, 
                    string STARTMNTHUNKNWN, 
                    string WWBOREHOLENO, 
                    global::System.Nullable<double> XUTM32EUREF89, 
                    global::System.Nullable<double> YUTM32EUREF89, 
                    global::System.Nullable<double> ZDVR90, 
                    string INSTALLATION, 
                    string WORKINGCONDITIONS, 
                    string APPROACH, 
                    string ACCESSREMARK, 
                    string LOCATEPERSONEMAIL, 
                    global::System.Nullable<int> PRESERVATIONZONE, 
                    global::System.Nullable<int> PROTECTIONZONE, 
                    global::System.Nullable<int> REGION, 
                    global::System.Nullable<int> USECHANGECAUSE, 
                    global::System.Nullable<global::System.DateTime> INSERTDATE, 
                    global::System.Nullable<global::System.DateTime> UPDATEDATE, 
                    string INSERTUSER, 
                    string UPDATEUSER, 
                    string Original_BOREHOLENO, 
                    string Original_NAMINGSYS, 
                    string Original_PURPOSE, 
                    string Original_USE, 
                    string Original_STATUS, 
                    global::System.Nullable<double> Original_DRILLDEPTH, 
                    global::System.Nullable<double> Original_ELEVATION, 
                    global::System.Nullable<double> Original_CTRPELEVA, 
                    string Original_VERTICAREF, 
                    string Original_CTRPDESCR, 
                    global::System.Nullable<float> Original_CTRPPRECIS, 
                    global::System.Nullable<float> Original_CTRPZPRECIS, 
                    global::System.Nullable<float> Original_CTRPHEIGHT, 
                    string Original_ELEVAMETHO, 
                    string Original_ELEVAQUALI, 
                    string Original_ELEVASOURC, 
                    string Original_LOCATION, 
                    string Original_COMMENTS, 
                    string Original_VARIOUS, 
                    global::System.Nullable<double> Original_XUTM, 
                    global::System.Nullable<double> Original_YUTM, 
                    global::System.Nullable<int> Original_UTMZONE, 
                    string Original_DATUM, 
                    string Original_MAPSHEET, 
                    global::System.Nullable<double> Original_MAPDISTX, 
                    global::System.Nullable<double> Original_MAPDISTY, 
                    global::System.Nullable<double> Original_SYS34X, 
                    global::System.Nullable<double> Original_SYS34Y, 
                    global::System.Nullable<int> Original_SYS34ZONE, 
                    global::System.Nullable<double> Original_LATITUDE, 
                    global::System.Nullable<double> Original_LONGITUDE, 
                    string Original_LOCATMETHO, 
                    string Original_LOCATQUALI, 
                    string Original_LOCATSOURC, 
                    global::System.Nullable<int> Original_BORHPOSTC, 
                    global::System.Nullable<int> Original_BORHTOWNNO, 
                    global::System.Nullable<int> Original_COUNTYNO, 
                    string Original_MUNICIPAL, 
                    global::System.Nullable<int> Original_HOUSEOWNAS, 
                    string Original_LANDREGNO, 
                    string Original_DRILLER, 
                    string Original_DRILLLOGNO, 
                    string Original_DRILLBORNO, 
                    string Original_REPORTEDBY, 
                    string Original_CONSULTANT, 
                    string Original_CONSULOGNO, 
                    string Original_CONSUBORNO, 
                    string Original_DRILLEDFOR, 
                    string Original_DRFORADRES, 
                    global::System.Nullable<int> Original_DRFORPOSTC, 
                    global::System.Nullable<global::System.DateTime> Original_DRILSTDATE, 
                    global::System.Nullable<global::System.DateTime> Original_DRILENDATE, 
                    global::System.Nullable<global::System.DateTime> Original_ABANDONDAT, 
                    string Original_PREVBORHNO, 
                    global::System.Nullable<int> Original_NUMSUPLBOR, 
                    global::System.Nullable<global::System.DateTime> Original_SAMRECEDAT, 
                    global::System.Nullable<global::System.DateTime> Original_SAMDESCDAT, 
                    global::System.Nullable<int> Original_NUMOFSAMPL, 
                    global::System.Nullable<int> Original_NUMSAMSTO, 
                    string Original_LITHOLNOTE, 
                    global::System.Nullable<global::System.DateTime> Original_TOGEUSDATE, 
                    global::System.Nullable<int> Original_GRUMOCOUNTYNO, 
                    global::System.Nullable<int> Original_GRUMOBORNO, 
                    global::System.Nullable<int> Original_GRUMOBORTYPE, 
                    global::System.Nullable<int> Original_GRUMOAREANO, 
                    global::System.Nullable<int> Original_BORHTOWNNO2007, 
                    string Original_LOCQUALI, 
                    global::System.Nullable<int> Original_LOOPAREANO, 
                    global::System.Nullable<int> Original_LOOPSTATION, 
                    global::System.Nullable<int> Original_LOOPTYPE, 
                    global::System.Nullable<global::System.DateTime> Original_USECHANGEDATE, 
                    global::System.Nullable<int> Original_ENVCEN, 
                    string Original_ABANDCAUSE, 
                    string Original_ABANDCONTR, 
                    string Original_STARTDAYUNKNOWN, 
                    string Original_STARTMNTHUNKNWN, 
                    string Original_WWBOREHOLENO, 
                    global::System.Nullable<double> Original_XUTM32EUREF89, 
                    global::System.Nullable<double> Original_YUTM32EUREF89, 
                    global::System.Nullable<double> Original_ZDVR90, 
                    string Original_INSTALLATION, 
                    string Original_WORKINGCONDITIONS, 
                    string Original_APPROACH, 
                    string Original_ACCESSREMARK, 
                    string Original_LOCATEPERSONEMAIL, 
                    global::System.Nullable<int> Original_PRESERVATIONZONE, 
                    global::System.Nullable<int> Original_PROTECTIONZONE, 
                    global::System.Nullable<int> Original_REGION, 
                    global::System.Nullable<int> Original_USECHANGECAUSE, 
                    global::System.Nullable<global::System.DateTime> Original_INSERTDATE, 
                    global::System.Nullable<global::System.DateTime> Original_UPDATEDATE, 
                    string Original_INSERTUSER, 
                    string Original_UPDATEUSER) {
            return this.Update(Original_BOREHOLENO, NAMINGSYS, PURPOSE, USE, STATUS, DRILLDEPTH, ELEVATION, CTRPELEVA, VERTICAREF, CTRPDESCR, CTRPPRECIS, CTRPZPRECIS, CTRPHEIGHT, ELEVAMETHO, ELEVAQUALI, ELEVASOURC, LOCATION, COMMENTS, VARIOUS, XUTM, YUTM, UTMZONE, DATUM, MAPSHEET, MAPDISTX, MAPDISTY, SYS34X, SYS34Y, SYS34ZONE, LATITUDE, LONGITUDE, LOCATMETHO, LOCATQUALI, LOCATSOURC, BORHPOSTC, BORHTOWNNO, COUNTYNO, MUNICIPAL, HOUSEOWNAS, LANDREGNO, DRILLER, DRILLLOGNO, DRILLBORNO, REPORTEDBY, CONSULTANT, CONSULOGNO, CONSUBORNO, DRILLEDFOR, DRFORADRES, DRFORPOSTC, DRILSTDATE, DRILENDATE, ABANDONDAT, PREVBORHNO, NUMSUPLBOR, SAMRECEDAT, SAMDESCDAT, NUMOFSAMPL, NUMSAMSTO, LITHOLNOTE, TOGEUSDATE, GRUMOCOUNTYNO, GRUMOBORNO, GRUMOBORTYPE, GRUMOAREANO, BORHTOWNNO2007, LOCQUALI, LOOPAREANO, LOOPSTATION, LOOPTYPE, USECHANGEDATE, ENVCEN, ABANDCAUSE, ABANDCONTR, STARTDAYUNKNOWN, STARTMNTHUNKNWN, WWBOREHOLENO, XUTM32EUREF89, YUTM32EUREF89, ZDVR90, INSTALLATION, WORKINGCONDITIONS, APPROACH, ACCESSREMARK, LOCATEPERSONEMAIL, PRESERVATIONZONE, PROTECTIONZONE, REGION, USECHANGECAUSE, INSERTDATE, UPDATEDATE, INSERTUSER, UPDATEUSER, Original_BOREHOLENO, Original_NAMINGSYS, Original_PURPOSE, Original_USE, Original_STATUS, Original_DRILLDEPTH, Original_ELEVATION, Original_CTRPELEVA, Original_VERTICAREF, Original_CTRPDESCR, Original_CTRPPRECIS, Original_CTRPZPRECIS, Original_CTRPHEIGHT, Original_ELEVAMETHO, Original_ELEVAQUALI, Original_ELEVASOURC, Original_LOCATION, Original_COMMENTS, Original_VARIOUS, Original_XUTM, Original_YUTM, Original_UTMZONE, Original_DATUM, Original_MAPSHEET, Original_MAPDISTX, Original_MAPDISTY, Original_SYS34X, Original_SYS34Y, Original_SYS34ZONE, Original_LATITUDE, Original_LONGITUDE, Original_LOCATMETHO, Original_LOCATQUALI, Original_LOCATSOURC, Original_BORHPOSTC, Original_BORHTOWNNO, Original_COUNTYNO, Original_MUNICIPAL, Original_HOUSEOWNAS, Original_LANDREGNO, Original_DRILLER, Original_DRILLLOGNO, Original_DRILLBORNO, Original_REPORTEDBY, Original_CONSULTANT, Original_CONSULOGNO, Original_CONSUBORNO, Original_DRILLEDFOR, Original_DRFORADRES, Original_DRFORPOSTC, Original_DRILSTDATE, Original_DRILENDATE, Original_ABANDONDAT, Original_PREVBORHNO, Original_NUMSUPLBOR, Original_SAMRECEDAT, Original_SAMDESCDAT, Original_NUMOFSAMPL, Original_NUMSAMSTO, Original_LITHOLNOTE, Original_TOGEUSDATE, Original_GRUMOCOUNTYNO, Original_GRUMOBORNO, Original_GRUMOBORTYPE, Original_GRUMOAREANO, Original_BORHTOWNNO2007, Original_LOCQUALI, Original_LOOPAREANO, Original_LOOPSTATION, Original_LOOPTYPE, Original_USECHANGEDATE, Original_ENVCEN, Original_ABANDCAUSE, Original_ABANDCONTR, Original_STARTDAYUNKNOWN, Original_STARTMNTHUNKNWN, Original_WWBOREHOLENO, Original_XUTM32EUREF89, Original_YUTM32EUREF89, Original_ZDVR90, Original_INSTALLATION, Original_WORKINGCONDITIONS, Original_APPROACH, Original_ACCESSREMARK, Original_LOCATEPERSONEMAIL, Original_PRESERVATIONZONE, Original_PROTECTIONZONE, Original_REGION, Original_USECHANGECAUSE, Original_INSERTDATE, Original_UPDATEDATE, Original_INSERTUSER, Original_UPDATEUSER);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class INTAKETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbTransaction _transaction;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public INTAKETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "INTAKE";
            tableMapping.ColumnMappings.Add("BOREHOLENO", "BOREHOLENO");
            tableMapping.ColumnMappings.Add("INTAKENO", "INTAKENO");
            tableMapping.ColumnMappings.Add("STRINGNO", "STRINGNO");
            tableMapping.ColumnMappings.Add("WATERAGE", "WATERAGE");
            tableMapping.ColumnMappings.Add("DEPOSITNO", "DEPOSITNO");
            tableMapping.ColumnMappings.Add("DEPOSITTYPE", "DEPOSITTYPE");
            tableMapping.ColumnMappings.Add("MAINCLASS", "MAINCLASS");
            tableMapping.ColumnMappings.Add("MONITORINGTYPE", "MONITORINGTYPE");
            tableMapping.ColumnMappings.Add("RESERVOIRROCK", "RESERVOIRROCK");
            tableMapping.ColumnMappings.Add("RESERVOIRTYPE", "RESERVOIRTYPE");
            tableMapping.ColumnMappings.Add("SPECIALUSABLE", "SPECIALUSABLE");
            tableMapping.ColumnMappings.Add("WATERTABLETYPE", "WATERTABLETYPE");
            tableMapping.ColumnMappings.Add("SOUNDABILITY", "SOUNDABILITY");
            tableMapping.ColumnMappings.Add("SOUNDABILITYREMARK", "SOUNDABILITYREMARK");
            tableMapping.ColumnMappings.Add("SOUNDTUBEINSIDEDIAM", "SOUNDTUBEINSIDEDIAM");
            tableMapping.ColumnMappings.Add("INSERTDATE", "INSERTDATE");
            tableMapping.ColumnMappings.Add("UPDATEDATE", "UPDATEDATE");
            tableMapping.ColumnMappings.Add("INSERTUSER", "INSERTUSER");
            tableMapping.ColumnMappings.Add("UPDATEUSER", "UPDATEUSER");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `INTAKE` WHERE ((`BOREHOLENO` = ?) AND (`INTAKENO` = ?) AND ((? = 1 AND `STRINGNO` IS NULL) OR (`STRINGNO` = ?)) AND ((? = 1 AND `WATERAGE` IS NULL) OR (`WATERAGE` = ?)) AND ((? = 1 AND `DEPOSITNO` IS NULL) OR (`DEPOSITNO` = ?)) AND ((? = 1 AND `DEPOSITTYPE` IS NULL) OR (`DEPOSITTYPE` = ?)) AND ((? = 1 AND `MAINCLASS` IS NULL) OR (`MAINCLASS` = ?)) AND ((? = 1 AND `MONITORINGTYPE` IS NULL) OR (`MONITORINGTYPE` = ?)) AND ((? = 1 AND `RESERVOIRROCK` IS NULL) OR (`RESERVOIRROCK` = ?)) AND ((? = 1 AND `RESERVOIRTYPE` IS NULL) OR (`RESERVOIRTYPE` = ?)) AND ((? = 1 AND `SPECIALUSABLE` IS NULL) OR (`SPECIALUSABLE` = ?)) AND ((? = 1 AND `WATERTABLETYPE` IS NULL) OR (`WATERTABLETYPE` = ?)) AND ((? = 1 AND `SOUNDABILITY` IS NULL) OR (`SOUNDABILITY` = ?)) AND ((? = 1 AND `SOUNDABILITYREMARK` IS NULL) OR (`SOUNDABILITYREMARK` = ?)) AND ((? = 1 AND `SOUNDTUBEINSIDEDIAM` IS NULL) OR (`SOUNDTUBEINSIDEDIAM` = ?)) AND ((? = 1 AND `INSERTDATE` IS NULL) OR (`INSERTDATE` = ?)) AND ((? = 1 AND `UPDATEDATE` IS NULL) OR (`UPDATEDATE` = ?)) AND ((? = 1 AND `INSERTUSER` IS NULL) OR (`INSERTUSER` = ?)) AND ((? = 1 AND `UPDATEUSER` IS NULL) OR (`UPDATEUSER` = ?)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_BOREHOLENO", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BOREHOLENO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_INTAKENO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "INTAKENO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_STRINGNO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "STRINGNO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_STRINGNO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "STRINGNO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_WATERAGE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "WATERAGE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_WATERAGE", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "WATERAGE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_DEPOSITNO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DEPOSITNO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_DEPOSITNO", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DEPOSITNO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_DEPOSITTYPE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DEPOSITTYPE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_DEPOSITTYPE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DEPOSITTYPE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MAINCLASS", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MAINCLASS", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MAINCLASS", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MAINCLASS", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MONITORINGTYPE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MONITORINGTYPE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MONITORINGTYPE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MONITORINGTYPE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_RESERVOIRROCK", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "RESERVOIRROCK", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_RESERVOIRROCK", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "RESERVOIRROCK", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_RESERVOIRTYPE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "RESERVOIRTYPE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_RESERVOIRTYPE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "RESERVOIRTYPE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_SPECIALUSABLE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SPECIALUSABLE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SPECIALUSABLE", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SPECIALUSABLE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_WATERTABLETYPE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "WATERTABLETYPE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_WATERTABLETYPE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "WATERTABLETYPE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_SOUNDABILITY", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SOUNDABILITY", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SOUNDABILITY", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SOUNDABILITY", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_SOUNDABILITYREMARK", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SOUNDABILITYREMARK", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SOUNDABILITYREMARK", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SOUNDABILITYREMARK", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_SOUNDTUBEINSIDEDIAM", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SOUNDTUBEINSIDEDIAM", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SOUNDTUBEINSIDEDIAM", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SOUNDTUBEINSIDEDIAM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_INSERTDATE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "INSERTDATE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_INSERTDATE", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "INSERTDATE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_UPDATEDATE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "UPDATEDATE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_UPDATEDATE", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "UPDATEDATE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_INSERTUSER", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "INSERTUSER", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_INSERTUSER", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "INSERTUSER", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_UPDATEUSER", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "UPDATEUSER", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_UPDATEUSER", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "UPDATEUSER", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO `INTAKE` (`BOREHOLENO`, `INTAKENO`, `STRINGNO`, `WATERAGE`, `DEPOSITNO`, `DEPOSITTYPE`, `MAINCLASS`, `MONITORINGTYPE`, `RESERVOIRROCK`, `RESERVOIRTYPE`, `SPECIALUSABLE`, `WATERTABLETYPE`, `SOUNDABILITY`, `SOUNDABILITYREMARK`, `SOUNDTUBEINSIDEDIAM`, `INSERTDATE`, `UPDATEDATE`, `INSERTUSER`, `UPDATEUSER`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("BOREHOLENO", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BOREHOLENO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("INTAKENO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "INTAKENO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("STRINGNO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "STRINGNO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("WATERAGE", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "WATERAGE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("DEPOSITNO", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DEPOSITNO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("DEPOSITTYPE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DEPOSITTYPE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MAINCLASS", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MAINCLASS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MONITORINGTYPE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MONITORINGTYPE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("RESERVOIRROCK", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "RESERVOIRROCK", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("RESERVOIRTYPE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "RESERVOIRTYPE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SPECIALUSABLE", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SPECIALUSABLE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("WATERTABLETYPE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "WATERTABLETYPE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SOUNDABILITY", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SOUNDABILITY", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SOUNDABILITYREMARK", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SOUNDABILITYREMARK", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SOUNDTUBEINSIDEDIAM", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SOUNDTUBEINSIDEDIAM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("INSERTDATE", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "INSERTDATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("UPDATEDATE", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "UPDATEDATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("INSERTUSER", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "INSERTUSER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("UPDATEUSER", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "UPDATEUSER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE `INTAKE` SET `BOREHOLENO` = ?, `INTAKENO` = ?, `STRINGNO` = ?, `WATERAGE` " +
                "= ?, `DEPOSITNO` = ?, `DEPOSITTYPE` = ?, `MAINCLASS` = ?, `MONITORINGTYPE` = ?, " +
                "`RESERVOIRROCK` = ?, `RESERVOIRTYPE` = ?, `SPECIALUSABLE` = ?, `WATERTABLETYPE` " +
                "= ?, `SOUNDABILITY` = ?, `SOUNDABILITYREMARK` = ?, `SOUNDTUBEINSIDEDIAM` = ?, `I" +
                "NSERTDATE` = ?, `UPDATEDATE` = ?, `INSERTUSER` = ?, `UPDATEUSER` = ? WHERE ((`BO" +
                "REHOLENO` = ?) AND (`INTAKENO` = ?) AND ((? = 1 AND `STRINGNO` IS NULL) OR (`STR" +
                "INGNO` = ?)) AND ((? = 1 AND `WATERAGE` IS NULL) OR (`WATERAGE` = ?)) AND ((? = " +
                "1 AND `DEPOSITNO` IS NULL) OR (`DEPOSITNO` = ?)) AND ((? = 1 AND `DEPOSITTYPE` I" +
                "S NULL) OR (`DEPOSITTYPE` = ?)) AND ((? = 1 AND `MAINCLASS` IS NULL) OR (`MAINCL" +
                "ASS` = ?)) AND ((? = 1 AND `MONITORINGTYPE` IS NULL) OR (`MONITORINGTYPE` = ?)) " +
                "AND ((? = 1 AND `RESERVOIRROCK` IS NULL) OR (`RESERVOIRROCK` = ?)) AND ((? = 1 A" +
                "ND `RESERVOIRTYPE` IS NULL) OR (`RESERVOIRTYPE` = ?)) AND ((? = 1 AND `SPECIALUS" +
                "ABLE` IS NULL) OR (`SPECIALUSABLE` = ?)) AND ((? = 1 AND `WATERTABLETYPE` IS NUL" +
                "L) OR (`WATERTABLETYPE` = ?)) AND ((? = 1 AND `SOUNDABILITY` IS NULL) OR (`SOUND" +
                "ABILITY` = ?)) AND ((? = 1 AND `SOUNDABILITYREMARK` IS NULL) OR (`SOUNDABILITYRE" +
                "MARK` = ?)) AND ((? = 1 AND `SOUNDTUBEINSIDEDIAM` IS NULL) OR (`SOUNDTUBEINSIDED" +
                "IAM` = ?)) AND ((? = 1 AND `INSERTDATE` IS NULL) OR (`INSERTDATE` = ?)) AND ((? " +
                "= 1 AND `UPDATEDATE` IS NULL) OR (`UPDATEDATE` = ?)) AND ((? = 1 AND `INSERTUSER" +
                "` IS NULL) OR (`INSERTUSER` = ?)) AND ((? = 1 AND `UPDATEUSER` IS NULL) OR (`UPD" +
                "ATEUSER` = ?)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("BOREHOLENO", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BOREHOLENO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("INTAKENO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "INTAKENO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("STRINGNO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "STRINGNO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("WATERAGE", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "WATERAGE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("DEPOSITNO", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DEPOSITNO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("DEPOSITTYPE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DEPOSITTYPE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MAINCLASS", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MAINCLASS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("MONITORINGTYPE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MONITORINGTYPE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("RESERVOIRROCK", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "RESERVOIRROCK", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("RESERVOIRTYPE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "RESERVOIRTYPE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SPECIALUSABLE", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SPECIALUSABLE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("WATERTABLETYPE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "WATERTABLETYPE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SOUNDABILITY", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SOUNDABILITY", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SOUNDABILITYREMARK", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SOUNDABILITYREMARK", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SOUNDTUBEINSIDEDIAM", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SOUNDTUBEINSIDEDIAM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("INSERTDATE", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "INSERTDATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("UPDATEDATE", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "UPDATEDATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("INSERTUSER", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "INSERTUSER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("UPDATEUSER", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "UPDATEUSER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_BOREHOLENO", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BOREHOLENO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_INTAKENO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "INTAKENO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_STRINGNO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "STRINGNO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_STRINGNO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "STRINGNO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_WATERAGE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "WATERAGE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_WATERAGE", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "WATERAGE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_DEPOSITNO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DEPOSITNO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_DEPOSITNO", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DEPOSITNO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_DEPOSITTYPE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DEPOSITTYPE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_DEPOSITTYPE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DEPOSITTYPE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MAINCLASS", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MAINCLASS", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MAINCLASS", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MAINCLASS", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_MONITORINGTYPE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MONITORINGTYPE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_MONITORINGTYPE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MONITORINGTYPE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_RESERVOIRROCK", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "RESERVOIRROCK", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_RESERVOIRROCK", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "RESERVOIRROCK", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_RESERVOIRTYPE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "RESERVOIRTYPE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_RESERVOIRTYPE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "RESERVOIRTYPE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_SPECIALUSABLE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SPECIALUSABLE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SPECIALUSABLE", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SPECIALUSABLE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_WATERTABLETYPE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "WATERTABLETYPE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_WATERTABLETYPE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "WATERTABLETYPE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_SOUNDABILITY", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SOUNDABILITY", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SOUNDABILITY", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SOUNDABILITY", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_SOUNDABILITYREMARK", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SOUNDABILITYREMARK", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SOUNDABILITYREMARK", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SOUNDABILITYREMARK", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_SOUNDTUBEINSIDEDIAM", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SOUNDTUBEINSIDEDIAM", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SOUNDTUBEINSIDEDIAM", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SOUNDTUBEINSIDEDIAM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_INSERTDATE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "INSERTDATE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_INSERTDATE", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "INSERTDATE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_UPDATEDATE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "UPDATEDATE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_UPDATEDATE", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "UPDATEDATE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_INSERTUSER", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "INSERTUSER", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_INSERTUSER", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "INSERTUSER", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_UPDATEUSER", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "UPDATEUSER", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_UPDATEUSER", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "UPDATEUSER", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::MikeSheWrapper.Irrigation.Properties.Settings.Default.herningConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT BOREHOLENO, INTAKENO, STRINGNO, WATERAGE, DEPOSITNO, DEPOSITTYPE, MAINCLASS, MONITORINGTYPE, RESERVOIRROCK, RESERVOIRTYPE, SPECIALUSABLE, WATERTABLETYPE, SOUNDABILITY, SOUNDABILITYREMARK, SOUNDTUBEINSIDEDIAM, INSERTDATE, UPDATEDATE, INSERTUSER, UPDATEUSER FROM INTAKE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.INTAKEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.INTAKEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.INTAKEDataTable dataTable = new DataSet1.INTAKEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.INTAKEDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "INTAKE");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_BOREHOLENO, 
                    int Original_INTAKENO, 
                    global::System.Nullable<int> Original_STRINGNO, 
                    string Original_WATERAGE, 
                    string Original_DEPOSITNO, 
                    global::System.Nullable<int> Original_DEPOSITTYPE, 
                    string Original_MAINCLASS, 
                    global::System.Nullable<int> Original_MONITORINGTYPE, 
                    string Original_RESERVOIRROCK, 
                    global::System.Nullable<int> Original_RESERVOIRTYPE, 
                    string Original_SPECIALUSABLE, 
                    global::System.Nullable<int> Original_WATERTABLETYPE, 
                    string Original_SOUNDABILITY, 
                    string Original_SOUNDABILITYREMARK, 
                    global::System.Nullable<double> Original_SOUNDTUBEINSIDEDIAM, 
                    global::System.Nullable<global::System.DateTime> Original_INSERTDATE, 
                    global::System.Nullable<global::System.DateTime> Original_UPDATEDATE, 
                    string Original_INSERTUSER, 
                    string Original_UPDATEUSER) {
            if ((Original_BOREHOLENO == null)) {
                throw new global::System.ArgumentNullException("Original_BOREHOLENO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_BOREHOLENO));
            }
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_INTAKENO));
            if ((Original_STRINGNO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_STRINGNO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Original_WATERAGE == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_WATERAGE));
            }
            if ((Original_DEPOSITNO == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_DEPOSITNO));
            }
            if ((Original_DEPOSITTYPE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((int)(Original_DEPOSITTYPE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_MAINCLASS == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_MAINCLASS));
            }
            if ((Original_MONITORINGTYPE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((int)(Original_MONITORINGTYPE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_RESERVOIRROCK == null)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_RESERVOIRROCK));
            }
            if ((Original_RESERVOIRTYPE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((int)(Original_RESERVOIRTYPE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_SPECIALUSABLE == null)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_SPECIALUSABLE));
            }
            if ((Original_WATERTABLETYPE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((int)(Original_WATERTABLETYPE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_SOUNDABILITY == null)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((string)(Original_SOUNDABILITY));
            }
            if ((Original_SOUNDABILITYREMARK == null)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((string)(Original_SOUNDABILITYREMARK));
            }
            if ((Original_SOUNDTUBEINSIDEDIAM.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((double)(Original_SOUNDTUBEINSIDEDIAM.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_INSERTDATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[29].Value = ((System.DateTime)(Original_INSERTDATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Original_UPDATEDATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[31].Value = ((System.DateTime)(Original_UPDATEDATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Original_INSERTUSER == null)) {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[33].Value = ((string)(Original_INSERTUSER));
            }
            if ((Original_UPDATEUSER == null)) {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[35].Value = ((string)(Original_UPDATEUSER));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string BOREHOLENO, 
                    int INTAKENO, 
                    global::System.Nullable<int> STRINGNO, 
                    string WATERAGE, 
                    string DEPOSITNO, 
                    global::System.Nullable<int> DEPOSITTYPE, 
                    string MAINCLASS, 
                    global::System.Nullable<int> MONITORINGTYPE, 
                    string RESERVOIRROCK, 
                    global::System.Nullable<int> RESERVOIRTYPE, 
                    string SPECIALUSABLE, 
                    global::System.Nullable<int> WATERTABLETYPE, 
                    string SOUNDABILITY, 
                    string SOUNDABILITYREMARK, 
                    global::System.Nullable<double> SOUNDTUBEINSIDEDIAM, 
                    global::System.Nullable<global::System.DateTime> INSERTDATE, 
                    global::System.Nullable<global::System.DateTime> UPDATEDATE, 
                    string INSERTUSER, 
                    string UPDATEUSER) {
            if ((BOREHOLENO == null)) {
                throw new global::System.ArgumentNullException("BOREHOLENO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(BOREHOLENO));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(INTAKENO));
            if ((STRINGNO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(STRINGNO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((WATERAGE == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(WATERAGE));
            }
            if ((DEPOSITNO == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(DEPOSITNO));
            }
            if ((DEPOSITTYPE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((int)(DEPOSITTYPE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((MAINCLASS == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(MAINCLASS));
            }
            if ((MONITORINGTYPE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((int)(MONITORINGTYPE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((RESERVOIRROCK == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(RESERVOIRROCK));
            }
            if ((RESERVOIRTYPE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((int)(RESERVOIRTYPE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((SPECIALUSABLE == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(SPECIALUSABLE));
            }
            if ((WATERTABLETYPE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((int)(WATERTABLETYPE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((SOUNDABILITY == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(SOUNDABILITY));
            }
            if ((SOUNDABILITYREMARK == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(SOUNDABILITYREMARK));
            }
            if ((SOUNDTUBEINSIDEDIAM.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((double)(SOUNDTUBEINSIDEDIAM.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((INSERTDATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((System.DateTime)(INSERTDATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((UPDATEDATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((System.DateTime)(UPDATEDATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((INSERTUSER == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(INSERTUSER));
            }
            if ((UPDATEUSER == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(UPDATEUSER));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string BOREHOLENO, 
                    int INTAKENO, 
                    global::System.Nullable<int> STRINGNO, 
                    string WATERAGE, 
                    string DEPOSITNO, 
                    global::System.Nullable<int> DEPOSITTYPE, 
                    string MAINCLASS, 
                    global::System.Nullable<int> MONITORINGTYPE, 
                    string RESERVOIRROCK, 
                    global::System.Nullable<int> RESERVOIRTYPE, 
                    string SPECIALUSABLE, 
                    global::System.Nullable<int> WATERTABLETYPE, 
                    string SOUNDABILITY, 
                    string SOUNDABILITYREMARK, 
                    global::System.Nullable<double> SOUNDTUBEINSIDEDIAM, 
                    global::System.Nullable<global::System.DateTime> INSERTDATE, 
                    global::System.Nullable<global::System.DateTime> UPDATEDATE, 
                    string INSERTUSER, 
                    string UPDATEUSER, 
                    string Original_BOREHOLENO, 
                    int Original_INTAKENO, 
                    global::System.Nullable<int> Original_STRINGNO, 
                    string Original_WATERAGE, 
                    string Original_DEPOSITNO, 
                    global::System.Nullable<int> Original_DEPOSITTYPE, 
                    string Original_MAINCLASS, 
                    global::System.Nullable<int> Original_MONITORINGTYPE, 
                    string Original_RESERVOIRROCK, 
                    global::System.Nullable<int> Original_RESERVOIRTYPE, 
                    string Original_SPECIALUSABLE, 
                    global::System.Nullable<int> Original_WATERTABLETYPE, 
                    string Original_SOUNDABILITY, 
                    string Original_SOUNDABILITYREMARK, 
                    global::System.Nullable<double> Original_SOUNDTUBEINSIDEDIAM, 
                    global::System.Nullable<global::System.DateTime> Original_INSERTDATE, 
                    global::System.Nullable<global::System.DateTime> Original_UPDATEDATE, 
                    string Original_INSERTUSER, 
                    string Original_UPDATEUSER) {
            if ((BOREHOLENO == null)) {
                throw new global::System.ArgumentNullException("BOREHOLENO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(BOREHOLENO));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(INTAKENO));
            if ((STRINGNO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(STRINGNO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((WATERAGE == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(WATERAGE));
            }
            if ((DEPOSITNO == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(DEPOSITNO));
            }
            if ((DEPOSITTYPE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(DEPOSITTYPE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((MAINCLASS == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(MAINCLASS));
            }
            if ((MONITORINGTYPE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(MONITORINGTYPE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((RESERVOIRROCK == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(RESERVOIRROCK));
            }
            if ((RESERVOIRTYPE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(RESERVOIRTYPE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((SPECIALUSABLE == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(SPECIALUSABLE));
            }
            if ((WATERTABLETYPE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(WATERTABLETYPE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((SOUNDABILITY == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(SOUNDABILITY));
            }
            if ((SOUNDABILITYREMARK == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(SOUNDABILITYREMARK));
            }
            if ((SOUNDTUBEINSIDEDIAM.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((double)(SOUNDTUBEINSIDEDIAM.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((INSERTDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(INSERTDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((UPDATEDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((System.DateTime)(UPDATEDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((INSERTUSER == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(INSERTUSER));
            }
            if ((UPDATEUSER == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(UPDATEUSER));
            }
            if ((Original_BOREHOLENO == null)) {
                throw new global::System.ArgumentNullException("Original_BOREHOLENO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_BOREHOLENO));
            }
            this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(Original_INTAKENO));
            if ((Original_STRINGNO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(Original_STRINGNO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_WATERAGE == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_WATERAGE));
            }
            if ((Original_DEPOSITNO == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_DEPOSITNO));
            }
            if ((Original_DEPOSITTYPE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((int)(Original_DEPOSITTYPE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_MAINCLASS == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_MAINCLASS));
            }
            if ((Original_MONITORINGTYPE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((int)(Original_MONITORINGTYPE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_RESERVOIRROCK == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_RESERVOIRROCK));
            }
            if ((Original_RESERVOIRTYPE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((int)(Original_RESERVOIRTYPE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Original_SPECIALUSABLE == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Original_SPECIALUSABLE));
            }
            if ((Original_WATERTABLETYPE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((int)(Original_WATERTABLETYPE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Original_SOUNDABILITY == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(Original_SOUNDABILITY));
            }
            if ((Original_SOUNDABILITYREMARK == null)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(Original_SOUNDABILITYREMARK));
            }
            if ((Original_SOUNDTUBEINSIDEDIAM.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[46].Value = ((double)(Original_SOUNDTUBEINSIDEDIAM.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Original_INSERTDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[48].Value = ((System.DateTime)(Original_INSERTDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((Original_UPDATEDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[50].Value = ((System.DateTime)(Original_UPDATEDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((Original_INSERTUSER == null)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(Original_INSERTUSER));
            }
            if ((Original_UPDATEUSER == null)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[54].Value = ((string)(Original_UPDATEUSER));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<int> STRINGNO, 
                    string WATERAGE, 
                    string DEPOSITNO, 
                    global::System.Nullable<int> DEPOSITTYPE, 
                    string MAINCLASS, 
                    global::System.Nullable<int> MONITORINGTYPE, 
                    string RESERVOIRROCK, 
                    global::System.Nullable<int> RESERVOIRTYPE, 
                    string SPECIALUSABLE, 
                    global::System.Nullable<int> WATERTABLETYPE, 
                    string SOUNDABILITY, 
                    string SOUNDABILITYREMARK, 
                    global::System.Nullable<double> SOUNDTUBEINSIDEDIAM, 
                    global::System.Nullable<global::System.DateTime> INSERTDATE, 
                    global::System.Nullable<global::System.DateTime> UPDATEDATE, 
                    string INSERTUSER, 
                    string UPDATEUSER, 
                    string Original_BOREHOLENO, 
                    int Original_INTAKENO, 
                    global::System.Nullable<int> Original_STRINGNO, 
                    string Original_WATERAGE, 
                    string Original_DEPOSITNO, 
                    global::System.Nullable<int> Original_DEPOSITTYPE, 
                    string Original_MAINCLASS, 
                    global::System.Nullable<int> Original_MONITORINGTYPE, 
                    string Original_RESERVOIRROCK, 
                    global::System.Nullable<int> Original_RESERVOIRTYPE, 
                    string Original_SPECIALUSABLE, 
                    global::System.Nullable<int> Original_WATERTABLETYPE, 
                    string Original_SOUNDABILITY, 
                    string Original_SOUNDABILITYREMARK, 
                    global::System.Nullable<double> Original_SOUNDTUBEINSIDEDIAM, 
                    global::System.Nullable<global::System.DateTime> Original_INSERTDATE, 
                    global::System.Nullable<global::System.DateTime> Original_UPDATEDATE, 
                    string Original_INSERTUSER, 
                    string Original_UPDATEUSER) {
            return this.Update(Original_BOREHOLENO, Original_INTAKENO, STRINGNO, WATERAGE, DEPOSITNO, DEPOSITTYPE, MAINCLASS, MONITORINGTYPE, RESERVOIRROCK, RESERVOIRTYPE, SPECIALUSABLE, WATERTABLETYPE, SOUNDABILITY, SOUNDABILITYREMARK, SOUNDTUBEINSIDEDIAM, INSERTDATE, UPDATEDATE, INSERTUSER, UPDATEUSER, Original_BOREHOLENO, Original_INTAKENO, Original_STRINGNO, Original_WATERAGE, Original_DEPOSITNO, Original_DEPOSITTYPE, Original_MAINCLASS, Original_MONITORINGTYPE, Original_RESERVOIRROCK, Original_RESERVOIRTYPE, Original_SPECIALUSABLE, Original_WATERTABLETYPE, Original_SOUNDABILITY, Original_SOUNDABILITYREMARK, Original_SOUNDTUBEINSIDEDIAM, Original_INSERTDATE, Original_UPDATEDATE, Original_INSERTUSER, Original_UPDATEUSER);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class WATLEVELTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbTransaction _transaction;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public WATLEVELTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "WATLEVEL";
            tableMapping.ColumnMappings.Add("BOREHOLENO", "BOREHOLENO");
            tableMapping.ColumnMappings.Add("WATLEVELNO", "WATLEVELNO");
            tableMapping.ColumnMappings.Add("INTAKENO", "INTAKENO");
            tableMapping.ColumnMappings.Add("TIMEOFMEAS", "TIMEOFMEAS");
            tableMapping.ColumnMappings.Add("PROJECT", "PROJECT");
            tableMapping.ColumnMappings.Add("WATERLEVEL", "WATERLEVEL");
            tableMapping.ColumnMappings.Add("WATLEVGRSU", "WATLEVGRSU");
            tableMapping.ColumnMappings.Add("WATLEVMSL", "WATLEVMSL");
            tableMapping.ColumnMappings.Add("WATLEVMP", "WATLEVMP");
            tableMapping.ColumnMappings.Add("HOURSNOPUM", "HOURSNOPUM");
            tableMapping.ColumnMappings.Add("CATEGORY", "CATEGORY");
            tableMapping.ColumnMappings.Add("METHOD", "METHOD");
            tableMapping.ColumnMappings.Add("QUALITY", "QUALITY");
            tableMapping.ColumnMappings.Add("REFPOINT", "REFPOINT");
            tableMapping.ColumnMappings.Add("REMARK", "REMARK");
            tableMapping.ColumnMappings.Add("VERTICAREF", "VERTICAREF");
            tableMapping.ColumnMappings.Add("ATMOSPRESSHPA", "ATMOSPRESSHPA");
            tableMapping.ColumnMappings.Add("EXTREMES", "EXTREMES");
            tableMapping.ColumnMappings.Add("SITUATION", "SITUATION");
            tableMapping.ColumnMappings.Add("WATLEVELROUNDNO", "WATLEVELROUNDNO");
            tableMapping.ColumnMappings.Add("INSERTDATE", "INSERTDATE");
            tableMapping.ColumnMappings.Add("UPDATEDATE", "UPDATEDATE");
            tableMapping.ColumnMappings.Add("INSERTUSER", "INSERTUSER");
            tableMapping.ColumnMappings.Add("UPDATEUSER", "UPDATEUSER");
            tableMapping.ColumnMappings.Add("DATAOWNER", "DATAOWNER");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `WATLEVEL` WHERE ((`BOREHOLENO` = ?) AND (`WATLEVELNO` = ?) AND ((? = 1 AND `INTAKENO` IS NULL) OR (`INTAKENO` = ?)) AND ((? = 1 AND `TIMEOFMEAS` IS NULL) OR (`TIMEOFMEAS` = ?)) AND ((? = 1 AND `PROJECT` IS NULL) OR (`PROJECT` = ?)) AND ((? = 1 AND `WATERLEVEL` IS NULL) OR (`WATERLEVEL` = ?)) AND ((? = 1 AND `WATLEVGRSU` IS NULL) OR (`WATLEVGRSU` = ?)) AND ((? = 1 AND `WATLEVMSL` IS NULL) OR (`WATLEVMSL` = ?)) AND ((? = 1 AND `WATLEVMP` IS NULL) OR (`WATLEVMP` = ?)) AND ((? = 1 AND `HOURSNOPUM` IS NULL) OR (`HOURSNOPUM` = ?)) AND ((? = 1 AND `CATEGORY` IS NULL) OR (`CATEGORY` = ?)) AND ((? = 1 AND `METHOD` IS NULL) OR (`METHOD` = ?)) AND ((? = 1 AND `QUALITY` IS NULL) OR (`QUALITY` = ?)) AND ((? = 1 AND `REFPOINT` IS NULL) OR (`REFPOINT` = ?)) AND ((? = 1 AND `REMARK` IS NULL) OR (`REMARK` = ?)) AND ((? = 1 AND `VERTICAREF` IS NULL) OR (`VERTICAREF` = ?)) AND ((? = 1 AND `ATMOSPRESSHPA` IS NULL) OR (`ATMOSPRESSHPA` = ?)) AND ((? = 1 AND `EXTREMES` IS NULL) OR (`EXTREMES` = ?)) AND ((? = 1 AND `SITUATION` IS NULL) OR (`SITUATION` = ?)) AND ((? = 1 AND `WATLEVELROUNDNO` IS NULL) OR (`WATLEVELROUNDNO` = ?)) AND ((? = 1 AND `INSERTDATE` IS NULL) OR (`INSERTDATE` = ?)) AND ((? = 1 AND `UPDATEDATE` IS NULL) OR (`UPDATEDATE` = ?)) AND ((? = 1 AND `INSERTUSER` IS NULL) OR (`INSERTUSER` = ?)) AND ((? = 1 AND `UPDATEUSER` IS NULL) OR (`UPDATEUSER` = ?)) AND ((? = 1 AND `DATAOWNER` IS NULL) OR (`DATAOWNER` = ?)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_BOREHOLENO", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BOREHOLENO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_WATLEVELNO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "WATLEVELNO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_INTAKENO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "INTAKENO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_INTAKENO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "INTAKENO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_TIMEOFMEAS", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TIMEOFMEAS", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_TIMEOFMEAS", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TIMEOFMEAS", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_PROJECT", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PROJECT", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PROJECT", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PROJECT", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_WATERLEVEL", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "WATERLEVEL", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_WATERLEVEL", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "WATERLEVEL", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_WATLEVGRSU", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "WATLEVGRSU", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_WATLEVGRSU", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "WATLEVGRSU", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_WATLEVMSL", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "WATLEVMSL", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_WATLEVMSL", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "WATLEVMSL", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_WATLEVMP", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "WATLEVMP", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_WATLEVMP", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "WATLEVMP", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_HOURSNOPUM", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HOURSNOPUM", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_HOURSNOPUM", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HOURSNOPUM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_CATEGORY", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CATEGORY", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_CATEGORY", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CATEGORY", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_METHOD", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "METHOD", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_METHOD", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "METHOD", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_QUALITY", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "QUALITY", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_QUALITY", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "QUALITY", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_REFPOINT", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "REFPOINT", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_REFPOINT", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "REFPOINT", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_REMARK", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "REMARK", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_REMARK", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "REMARK", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_VERTICAREF", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VERTICAREF", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_VERTICAREF", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VERTICAREF", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ATMOSPRESSHPA", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ATMOSPRESSHPA", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ATMOSPRESSHPA", global::System.Data.OleDb.OleDbType.Single, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ATMOSPRESSHPA", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_EXTREMES", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EXTREMES", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_EXTREMES", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EXTREMES", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_SITUATION", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SITUATION", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SITUATION", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SITUATION", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_WATLEVELROUNDNO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "WATLEVELROUNDNO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_WATLEVELROUNDNO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "WATLEVELROUNDNO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_INSERTDATE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "INSERTDATE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_INSERTDATE", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "INSERTDATE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_UPDATEDATE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "UPDATEDATE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_UPDATEDATE", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "UPDATEDATE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_INSERTUSER", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "INSERTUSER", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_INSERTUSER", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "INSERTUSER", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_UPDATEUSER", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "UPDATEUSER", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_UPDATEUSER", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "UPDATEUSER", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_DATAOWNER", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DATAOWNER", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_DATAOWNER", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DATAOWNER", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO `WATLEVEL` (`BOREHOLENO`, `WATLEVELNO`, `INTAKENO`, `TIMEOFMEAS`, `PROJECT`, `WATERLEVEL`, `WATLEVGRSU`, `WATLEVMSL`, `WATLEVMP`, `HOURSNOPUM`, `CATEGORY`, `METHOD`, `QUALITY`, `REFPOINT`, `REMARK`, `VERTICAREF`, `ATMOSPRESSHPA`, `EXTREMES`, `SITUATION`, `WATLEVELROUNDNO`, `INSERTDATE`, `UPDATEDATE`, `INSERTUSER`, `UPDATEUSER`, `DATAOWNER`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("BOREHOLENO", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BOREHOLENO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("WATLEVELNO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "WATLEVELNO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("INTAKENO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "INTAKENO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TIMEOFMEAS", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TIMEOFMEAS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PROJECT", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PROJECT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("WATERLEVEL", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "WATERLEVEL", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("WATLEVGRSU", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "WATLEVGRSU", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("WATLEVMSL", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "WATLEVMSL", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("WATLEVMP", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "WATLEVMP", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("HOURSNOPUM", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HOURSNOPUM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("CATEGORY", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CATEGORY", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("METHOD", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "METHOD", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("QUALITY", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "QUALITY", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("REFPOINT", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "REFPOINT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("REMARK", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "REMARK", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("VERTICAREF", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VERTICAREF", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ATMOSPRESSHPA", global::System.Data.OleDb.OleDbType.Single, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ATMOSPRESSHPA", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("EXTREMES", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EXTREMES", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SITUATION", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SITUATION", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("WATLEVELROUNDNO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "WATLEVELROUNDNO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("INSERTDATE", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "INSERTDATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("UPDATEDATE", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "UPDATEDATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("INSERTUSER", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "INSERTUSER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("UPDATEUSER", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "UPDATEUSER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("DATAOWNER", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DATAOWNER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE `WATLEVEL` SET `BOREHOLENO` = ?, `WATLEVELNO` = ?, `INTAKENO` = ?, `TIMEOF" +
                "MEAS` = ?, `PROJECT` = ?, `WATERLEVEL` = ?, `WATLEVGRSU` = ?, `WATLEVMSL` = ?, `" +
                "WATLEVMP` = ?, `HOURSNOPUM` = ?, `CATEGORY` = ?, `METHOD` = ?, `QUALITY` = ?, `R" +
                "EFPOINT` = ?, `REMARK` = ?, `VERTICAREF` = ?, `ATMOSPRESSHPA` = ?, `EXTREMES` = " +
                "?, `SITUATION` = ?, `WATLEVELROUNDNO` = ?, `INSERTDATE` = ?, `UPDATEDATE` = ?, `" +
                "INSERTUSER` = ?, `UPDATEUSER` = ?, `DATAOWNER` = ? WHERE ((`BOREHOLENO` = ?) AND" +
                " (`WATLEVELNO` = ?) AND ((? = 1 AND `INTAKENO` IS NULL) OR (`INTAKENO` = ?)) AND" +
                " ((? = 1 AND `TIMEOFMEAS` IS NULL) OR (`TIMEOFMEAS` = ?)) AND ((? = 1 AND `PROJE" +
                "CT` IS NULL) OR (`PROJECT` = ?)) AND ((? = 1 AND `WATERLEVEL` IS NULL) OR (`WATE" +
                "RLEVEL` = ?)) AND ((? = 1 AND `WATLEVGRSU` IS NULL) OR (`WATLEVGRSU` = ?)) AND (" +
                "(? = 1 AND `WATLEVMSL` IS NULL) OR (`WATLEVMSL` = ?)) AND ((? = 1 AND `WATLEVMP`" +
                " IS NULL) OR (`WATLEVMP` = ?)) AND ((? = 1 AND `HOURSNOPUM` IS NULL) OR (`HOURSN" +
                "OPUM` = ?)) AND ((? = 1 AND `CATEGORY` IS NULL) OR (`CATEGORY` = ?)) AND ((? = 1" +
                " AND `METHOD` IS NULL) OR (`METHOD` = ?)) AND ((? = 1 AND `QUALITY` IS NULL) OR " +
                "(`QUALITY` = ?)) AND ((? = 1 AND `REFPOINT` IS NULL) OR (`REFPOINT` = ?)) AND ((" +
                "? = 1 AND `REMARK` IS NULL) OR (`REMARK` = ?)) AND ((? = 1 AND `VERTICAREF` IS N" +
                "ULL) OR (`VERTICAREF` = ?)) AND ((? = 1 AND `ATMOSPRESSHPA` IS NULL) OR (`ATMOSP" +
                "RESSHPA` = ?)) AND ((? = 1 AND `EXTREMES` IS NULL) OR (`EXTREMES` = ?)) AND ((? " +
                "= 1 AND `SITUATION` IS NULL) OR (`SITUATION` = ?)) AND ((? = 1 AND `WATLEVELROUN" +
                "DNO` IS NULL) OR (`WATLEVELROUNDNO` = ?)) AND ((? = 1 AND `INSERTDATE` IS NULL) " +
                "OR (`INSERTDATE` = ?)) AND ((? = 1 AND `UPDATEDATE` IS NULL) OR (`UPDATEDATE` = " +
                "?)) AND ((? = 1 AND `INSERTUSER` IS NULL) OR (`INSERTUSER` = ?)) AND ((? = 1 AND" +
                " `UPDATEUSER` IS NULL) OR (`UPDATEUSER` = ?)) AND ((? = 1 AND `DATAOWNER` IS NUL" +
                "L) OR (`DATAOWNER` = ?)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("BOREHOLENO", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BOREHOLENO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("WATLEVELNO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "WATLEVELNO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("INTAKENO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "INTAKENO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TIMEOFMEAS", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TIMEOFMEAS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PROJECT", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PROJECT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("WATERLEVEL", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "WATERLEVEL", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("WATLEVGRSU", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "WATLEVGRSU", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("WATLEVMSL", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "WATLEVMSL", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("WATLEVMP", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "WATLEVMP", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("HOURSNOPUM", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HOURSNOPUM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("CATEGORY", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CATEGORY", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("METHOD", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "METHOD", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("QUALITY", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "QUALITY", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("REFPOINT", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "REFPOINT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("REMARK", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "REMARK", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("VERTICAREF", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VERTICAREF", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ATMOSPRESSHPA", global::System.Data.OleDb.OleDbType.Single, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ATMOSPRESSHPA", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("EXTREMES", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EXTREMES", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SITUATION", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SITUATION", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("WATLEVELROUNDNO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "WATLEVELROUNDNO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("INSERTDATE", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "INSERTDATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("UPDATEDATE", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "UPDATEDATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("INSERTUSER", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "INSERTUSER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("UPDATEUSER", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "UPDATEUSER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("DATAOWNER", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DATAOWNER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_BOREHOLENO", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BOREHOLENO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_WATLEVELNO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "WATLEVELNO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_INTAKENO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "INTAKENO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_INTAKENO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "INTAKENO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_TIMEOFMEAS", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TIMEOFMEAS", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_TIMEOFMEAS", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TIMEOFMEAS", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_PROJECT", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PROJECT", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PROJECT", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PROJECT", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_WATERLEVEL", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "WATERLEVEL", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_WATERLEVEL", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "WATERLEVEL", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_WATLEVGRSU", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "WATLEVGRSU", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_WATLEVGRSU", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "WATLEVGRSU", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_WATLEVMSL", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "WATLEVMSL", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_WATLEVMSL", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "WATLEVMSL", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_WATLEVMP", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "WATLEVMP", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_WATLEVMP", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "WATLEVMP", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_HOURSNOPUM", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HOURSNOPUM", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_HOURSNOPUM", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HOURSNOPUM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_CATEGORY", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CATEGORY", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_CATEGORY", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CATEGORY", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_METHOD", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "METHOD", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_METHOD", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "METHOD", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_QUALITY", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "QUALITY", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_QUALITY", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "QUALITY", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_REFPOINT", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "REFPOINT", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_REFPOINT", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "REFPOINT", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_REMARK", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "REMARK", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_REMARK", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "REMARK", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_VERTICAREF", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VERTICAREF", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_VERTICAREF", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "VERTICAREF", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ATMOSPRESSHPA", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ATMOSPRESSHPA", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ATMOSPRESSHPA", global::System.Data.OleDb.OleDbType.Single, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ATMOSPRESSHPA", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_EXTREMES", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EXTREMES", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_EXTREMES", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EXTREMES", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_SITUATION", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SITUATION", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SITUATION", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SITUATION", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_WATLEVELROUNDNO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "WATLEVELROUNDNO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_WATLEVELROUNDNO", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "WATLEVELROUNDNO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_INSERTDATE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "INSERTDATE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_INSERTDATE", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "INSERTDATE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_UPDATEDATE", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "UPDATEDATE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_UPDATEDATE", global::System.Data.OleDb.OleDbType.Date, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "UPDATEDATE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_INSERTUSER", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "INSERTUSER", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_INSERTUSER", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "INSERTUSER", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_UPDATEUSER", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "UPDATEUSER", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_UPDATEUSER", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "UPDATEUSER", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_DATAOWNER", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DATAOWNER", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_DATAOWNER", global::System.Data.OleDb.OleDbType.VarWChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DATAOWNER", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::MikeSheWrapper.Irrigation.Properties.Settings.Default.herningConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT BOREHOLENO, WATLEVELNO, INTAKENO, TIMEOFMEAS, PROJECT, WATERLEVEL, WATLEVGRSU, WATLEVMSL, WATLEVMP, HOURSNOPUM, CATEGORY, METHOD, QUALITY, REFPOINT, REMARK, VERTICAREF, ATMOSPRESSHPA, EXTREMES, SITUATION, WATLEVELROUNDNO, INSERTDATE, UPDATEDATE, INSERTUSER, UPDATEUSER, DATAOWNER FROM WATLEVEL";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.WATLEVELDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.WATLEVELDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.WATLEVELDataTable dataTable = new DataSet1.WATLEVELDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.WATLEVELDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "WATLEVEL");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_BOREHOLENO, 
                    int Original_WATLEVELNO, 
                    global::System.Nullable<int> Original_INTAKENO, 
                    global::System.Nullable<global::System.DateTime> Original_TIMEOFMEAS, 
                    string Original_PROJECT, 
                    global::System.Nullable<double> Original_WATERLEVEL, 
                    global::System.Nullable<double> Original_WATLEVGRSU, 
                    global::System.Nullable<double> Original_WATLEVMSL, 
                    global::System.Nullable<double> Original_WATLEVMP, 
                    global::System.Nullable<double> Original_HOURSNOPUM, 
                    string Original_CATEGORY, 
                    string Original_METHOD, 
                    string Original_QUALITY, 
                    string Original_REFPOINT, 
                    string Original_REMARK, 
                    string Original_VERTICAREF, 
                    global::System.Nullable<float> Original_ATMOSPRESSHPA, 
                    string Original_EXTREMES, 
                    global::System.Nullable<int> Original_SITUATION, 
                    global::System.Nullable<int> Original_WATLEVELROUNDNO, 
                    global::System.Nullable<global::System.DateTime> Original_INSERTDATE, 
                    global::System.Nullable<global::System.DateTime> Original_UPDATEDATE, 
                    string Original_INSERTUSER, 
                    string Original_UPDATEUSER, 
                    string Original_DATAOWNER) {
            if ((Original_BOREHOLENO == null)) {
                throw new global::System.ArgumentNullException("Original_BOREHOLENO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_BOREHOLENO));
            }
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_WATLEVELNO));
            if ((Original_INTAKENO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_INTAKENO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Original_TIMEOFMEAS.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_TIMEOFMEAS.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_PROJECT == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_PROJECT));
            }
            if ((Original_WATERLEVEL.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((double)(Original_WATERLEVEL.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_WATLEVGRSU.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((double)(Original_WATLEVGRSU.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_WATLEVMSL.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((double)(Original_WATLEVMSL.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_WATLEVMP.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((double)(Original_WATLEVMP.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_HOURSNOPUM.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((double)(Original_HOURSNOPUM.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_CATEGORY == null)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_CATEGORY));
            }
            if ((Original_METHOD == null)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((string)(Original_METHOD));
            }
            if ((Original_QUALITY == null)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((string)(Original_QUALITY));
            }
            if ((Original_REFPOINT == null)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((string)(Original_REFPOINT));
            }
            if ((Original_REMARK == null)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((string)(Original_REMARK));
            }
            if ((Original_VERTICAREF == null)) {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[29].Value = ((string)(Original_VERTICAREF));
            }
            if ((Original_ATMOSPRESSHPA.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[31].Value = ((float)(Original_ATMOSPRESSHPA.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Original_EXTREMES == null)) {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[33].Value = ((string)(Original_EXTREMES));
            }
            if ((Original_SITUATION.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[35].Value = ((int)(Original_SITUATION.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((Original_WATLEVELROUNDNO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[37].Value = ((int)(Original_WATLEVELROUNDNO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((Original_INSERTDATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[39].Value = ((System.DateTime)(Original_INSERTDATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((Original_UPDATEDATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[41].Value = ((System.DateTime)(Original_UPDATEDATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((Original_INSERTUSER == null)) {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[43].Value = ((string)(Original_INSERTUSER));
            }
            if ((Original_UPDATEUSER == null)) {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[45].Value = ((string)(Original_UPDATEUSER));
            }
            if ((Original_DATAOWNER == null)) {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[47].Value = ((string)(Original_DATAOWNER));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string BOREHOLENO, 
                    int WATLEVELNO, 
                    global::System.Nullable<int> INTAKENO, 
                    global::System.Nullable<global::System.DateTime> TIMEOFMEAS, 
                    string PROJECT, 
                    global::System.Nullable<double> WATERLEVEL, 
                    global::System.Nullable<double> WATLEVGRSU, 
                    global::System.Nullable<double> WATLEVMSL, 
                    global::System.Nullable<double> WATLEVMP, 
                    global::System.Nullable<double> HOURSNOPUM, 
                    string CATEGORY, 
                    string METHOD, 
                    string QUALITY, 
                    string REFPOINT, 
                    string REMARK, 
                    string VERTICAREF, 
                    global::System.Nullable<float> ATMOSPRESSHPA, 
                    string EXTREMES, 
                    global::System.Nullable<int> SITUATION, 
                    global::System.Nullable<int> WATLEVELROUNDNO, 
                    global::System.Nullable<global::System.DateTime> INSERTDATE, 
                    global::System.Nullable<global::System.DateTime> UPDATEDATE, 
                    string INSERTUSER, 
                    string UPDATEUSER, 
                    string DATAOWNER) {
            if ((BOREHOLENO == null)) {
                throw new global::System.ArgumentNullException("BOREHOLENO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(BOREHOLENO));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(WATLEVELNO));
            if ((INTAKENO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(INTAKENO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((TIMEOFMEAS.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(TIMEOFMEAS.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((PROJECT == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(PROJECT));
            }
            if ((WATERLEVEL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((double)(WATERLEVEL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((WATLEVGRSU.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((double)(WATLEVGRSU.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((WATLEVMSL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((double)(WATLEVMSL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((WATLEVMP.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((double)(WATLEVMP.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((HOURSNOPUM.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((double)(HOURSNOPUM.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((CATEGORY == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(CATEGORY));
            }
            if ((METHOD == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(METHOD));
            }
            if ((QUALITY == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(QUALITY));
            }
            if ((REFPOINT == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(REFPOINT));
            }
            if ((REMARK == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(REMARK));
            }
            if ((VERTICAREF == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(VERTICAREF));
            }
            if ((ATMOSPRESSHPA.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((float)(ATMOSPRESSHPA.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((EXTREMES == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(EXTREMES));
            }
            if ((SITUATION.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((int)(SITUATION.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((WATLEVELROUNDNO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((int)(WATLEVELROUNDNO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((INSERTDATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((System.DateTime)(INSERTDATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((UPDATEDATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((System.DateTime)(UPDATEDATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((INSERTUSER == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(INSERTUSER));
            }
            if ((UPDATEUSER == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(UPDATEUSER));
            }
            if ((DATAOWNER == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(DATAOWNER));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string BOREHOLENO, 
                    int WATLEVELNO, 
                    global::System.Nullable<int> INTAKENO, 
                    global::System.Nullable<global::System.DateTime> TIMEOFMEAS, 
                    string PROJECT, 
                    global::System.Nullable<double> WATERLEVEL, 
                    global::System.Nullable<double> WATLEVGRSU, 
                    global::System.Nullable<double> WATLEVMSL, 
                    global::System.Nullable<double> WATLEVMP, 
                    global::System.Nullable<double> HOURSNOPUM, 
                    string CATEGORY, 
                    string METHOD, 
                    string QUALITY, 
                    string REFPOINT, 
                    string REMARK, 
                    string VERTICAREF, 
                    global::System.Nullable<float> ATMOSPRESSHPA, 
                    string EXTREMES, 
                    global::System.Nullable<int> SITUATION, 
                    global::System.Nullable<int> WATLEVELROUNDNO, 
                    global::System.Nullable<global::System.DateTime> INSERTDATE, 
                    global::System.Nullable<global::System.DateTime> UPDATEDATE, 
                    string INSERTUSER, 
                    string UPDATEUSER, 
                    string DATAOWNER, 
                    string Original_BOREHOLENO, 
                    int Original_WATLEVELNO, 
                    global::System.Nullable<int> Original_INTAKENO, 
                    global::System.Nullable<global::System.DateTime> Original_TIMEOFMEAS, 
                    string Original_PROJECT, 
                    global::System.Nullable<double> Original_WATERLEVEL, 
                    global::System.Nullable<double> Original_WATLEVGRSU, 
                    global::System.Nullable<double> Original_WATLEVMSL, 
                    global::System.Nullable<double> Original_WATLEVMP, 
                    global::System.Nullable<double> Original_HOURSNOPUM, 
                    string Original_CATEGORY, 
                    string Original_METHOD, 
                    string Original_QUALITY, 
                    string Original_REFPOINT, 
                    string Original_REMARK, 
                    string Original_VERTICAREF, 
                    global::System.Nullable<float> Original_ATMOSPRESSHPA, 
                    string Original_EXTREMES, 
                    global::System.Nullable<int> Original_SITUATION, 
                    global::System.Nullable<int> Original_WATLEVELROUNDNO, 
                    global::System.Nullable<global::System.DateTime> Original_INSERTDATE, 
                    global::System.Nullable<global::System.DateTime> Original_UPDATEDATE, 
                    string Original_INSERTUSER, 
                    string Original_UPDATEUSER, 
                    string Original_DATAOWNER) {
            if ((BOREHOLENO == null)) {
                throw new global::System.ArgumentNullException("BOREHOLENO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(BOREHOLENO));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(WATLEVELNO));
            if ((INTAKENO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(INTAKENO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((TIMEOFMEAS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(TIMEOFMEAS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((PROJECT == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(PROJECT));
            }
            if ((WATERLEVEL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((double)(WATERLEVEL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((WATLEVGRSU.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((double)(WATLEVGRSU.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((WATLEVMSL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((double)(WATLEVMSL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((WATLEVMP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((double)(WATLEVMP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((HOURSNOPUM.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((double)(HOURSNOPUM.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((CATEGORY == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(CATEGORY));
            }
            if ((METHOD == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(METHOD));
            }
            if ((QUALITY == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(QUALITY));
            }
            if ((REFPOINT == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(REFPOINT));
            }
            if ((REMARK == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(REMARK));
            }
            if ((VERTICAREF == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(VERTICAREF));
            }
            if ((ATMOSPRESSHPA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((float)(ATMOSPRESSHPA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((EXTREMES == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(EXTREMES));
            }
            if ((SITUATION.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(SITUATION.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((WATLEVELROUNDNO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(WATLEVELROUNDNO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((INSERTDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((System.DateTime)(INSERTDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((UPDATEDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((System.DateTime)(UPDATEDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((INSERTUSER == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(INSERTUSER));
            }
            if ((UPDATEUSER == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(UPDATEUSER));
            }
            if ((DATAOWNER == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(DATAOWNER));
            }
            if ((Original_BOREHOLENO == null)) {
                throw new global::System.ArgumentNullException("Original_BOREHOLENO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_BOREHOLENO));
            }
            this.Adapter.UpdateCommand.Parameters[26].Value = ((int)(Original_WATLEVELNO));
            if ((Original_INTAKENO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((int)(Original_INTAKENO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_TIMEOFMEAS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((System.DateTime)(Original_TIMEOFMEAS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_PROJECT == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_PROJECT));
            }
            if ((Original_WATERLEVEL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((double)(Original_WATERLEVEL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_WATLEVGRSU.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((double)(Original_WATLEVGRSU.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Original_WATLEVMSL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((double)(Original_WATLEVMSL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_WATLEVMP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((double)(Original_WATLEVMP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Original_HOURSNOPUM.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[42].Value = ((double)(Original_HOURSNOPUM.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Original_CATEGORY == null)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(Original_CATEGORY));
            }
            if ((Original_METHOD == null)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(Original_METHOD));
            }
            if ((Original_QUALITY == null)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(Original_QUALITY));
            }
            if ((Original_REFPOINT == null)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(Original_REFPOINT));
            }
            if ((Original_REMARK == null)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(Original_REMARK));
            }
            if ((Original_VERTICAREF == null)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[54].Value = ((string)(Original_VERTICAREF));
            }
            if ((Original_ATMOSPRESSHPA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[56].Value = ((float)(Original_ATMOSPRESSHPA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((Original_EXTREMES == null)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[58].Value = ((string)(Original_EXTREMES));
            }
            if ((Original_SITUATION.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[60].Value = ((int)(Original_SITUATION.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((Original_WATLEVELROUNDNO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[62].Value = ((int)(Original_WATLEVELROUNDNO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((Original_INSERTDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[64].Value = ((System.DateTime)(Original_INSERTDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((Original_UPDATEDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[66].Value = ((System.DateTime)(Original_UPDATEDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((Original_INSERTUSER == null)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[68].Value = ((string)(Original_INSERTUSER));
            }
            if ((Original_UPDATEUSER == null)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[70].Value = ((string)(Original_UPDATEUSER));
            }
            if ((Original_DATAOWNER == null)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[72].Value = ((string)(Original_DATAOWNER));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<int> INTAKENO, 
                    global::System.Nullable<global::System.DateTime> TIMEOFMEAS, 
                    string PROJECT, 
                    global::System.Nullable<double> WATERLEVEL, 
                    global::System.Nullable<double> WATLEVGRSU, 
                    global::System.Nullable<double> WATLEVMSL, 
                    global::System.Nullable<double> WATLEVMP, 
                    global::System.Nullable<double> HOURSNOPUM, 
                    string CATEGORY, 
                    string METHOD, 
                    string QUALITY, 
                    string REFPOINT, 
                    string REMARK, 
                    string VERTICAREF, 
                    global::System.Nullable<float> ATMOSPRESSHPA, 
                    string EXTREMES, 
                    global::System.Nullable<int> SITUATION, 
                    global::System.Nullable<int> WATLEVELROUNDNO, 
                    global::System.Nullable<global::System.DateTime> INSERTDATE, 
                    global::System.Nullable<global::System.DateTime> UPDATEDATE, 
                    string INSERTUSER, 
                    string UPDATEUSER, 
                    string DATAOWNER, 
                    string Original_BOREHOLENO, 
                    int Original_WATLEVELNO, 
                    global::System.Nullable<int> Original_INTAKENO, 
                    global::System.Nullable<global::System.DateTime> Original_TIMEOFMEAS, 
                    string Original_PROJECT, 
                    global::System.Nullable<double> Original_WATERLEVEL, 
                    global::System.Nullable<double> Original_WATLEVGRSU, 
                    global::System.Nullable<double> Original_WATLEVMSL, 
                    global::System.Nullable<double> Original_WATLEVMP, 
                    global::System.Nullable<double> Original_HOURSNOPUM, 
                    string Original_CATEGORY, 
                    string Original_METHOD, 
                    string Original_QUALITY, 
                    string Original_REFPOINT, 
                    string Original_REMARK, 
                    string Original_VERTICAREF, 
                    global::System.Nullable<float> Original_ATMOSPRESSHPA, 
                    string Original_EXTREMES, 
                    global::System.Nullable<int> Original_SITUATION, 
                    global::System.Nullable<int> Original_WATLEVELROUNDNO, 
                    global::System.Nullable<global::System.DateTime> Original_INSERTDATE, 
                    global::System.Nullable<global::System.DateTime> Original_UPDATEDATE, 
                    string Original_INSERTUSER, 
                    string Original_UPDATEUSER, 
                    string Original_DATAOWNER) {
            return this.Update(Original_BOREHOLENO, Original_WATLEVELNO, INTAKENO, TIMEOFMEAS, PROJECT, WATERLEVEL, WATLEVGRSU, WATLEVMSL, WATLEVMP, HOURSNOPUM, CATEGORY, METHOD, QUALITY, REFPOINT, REMARK, VERTICAREF, ATMOSPRESSHPA, EXTREMES, SITUATION, WATLEVELROUNDNO, INSERTDATE, UPDATEDATE, INSERTUSER, UPDATEUSER, DATAOWNER, Original_BOREHOLENO, Original_WATLEVELNO, Original_INTAKENO, Original_TIMEOFMEAS, Original_PROJECT, Original_WATERLEVEL, Original_WATLEVGRSU, Original_WATLEVMSL, Original_WATLEVMP, Original_HOURSNOPUM, Original_CATEGORY, Original_METHOD, Original_QUALITY, Original_REFPOINT, Original_REMARK, Original_VERTICAREF, Original_ATMOSPRESSHPA, Original_EXTREMES, Original_SITUATION, Original_WATLEVELROUNDNO, Original_INSERTDATE, Original_UPDATEDATE, Original_INSERTUSER, Original_UPDATEUSER, Original_DATAOWNER);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private BOREHOLETableAdapter _bOREHOLETableAdapter;
        
        private INTAKETableAdapter _iNTAKETableAdapter;
        
        private WATLEVELTableAdapter _wATLEVELTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public BOREHOLETableAdapter BOREHOLETableAdapter {
            get {
                return this._bOREHOLETableAdapter;
            }
            set {
                if (((this._bOREHOLETableAdapter != null) 
                            && (this.TableAdapterInstanceCount == 1))) {
                    this._bOREHOLETableAdapter = value;
                    return;
                }
                if (((value != null) 
                            && (this.MatchTableAdapterConnection(value.Connection) == false))) {
                    throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                            "tring.");
                }
                this._bOREHOLETableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public INTAKETableAdapter INTAKETableAdapter {
            get {
                return this._iNTAKETableAdapter;
            }
            set {
                if (((this._iNTAKETableAdapter != null) 
                            && (this.TableAdapterInstanceCount == 1))) {
                    this._iNTAKETableAdapter = value;
                    return;
                }
                if (((value != null) 
                            && (this.MatchTableAdapterConnection(value.Connection) == false))) {
                    throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                            "tring.");
                }
                this._iNTAKETableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public WATLEVELTableAdapter WATLEVELTableAdapter {
            get {
                return this._wATLEVELTableAdapter;
            }
            set {
                if (((this._wATLEVELTableAdapter != null) 
                            && (this.TableAdapterInstanceCount == 1))) {
                    this._wATLEVELTableAdapter = value;
                    return;
                }
                if (((value != null) 
                            && (this.MatchTableAdapterConnection(value.Connection) == false))) {
                    throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                            "tring.");
                }
                this._wATLEVELTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._bOREHOLETableAdapter != null) 
                            && (this._bOREHOLETableAdapter.Connection != null))) {
                    return this._bOREHOLETableAdapter.Connection;
                }
                if (((this._iNTAKETableAdapter != null) 
                            && (this._iNTAKETableAdapter.Connection != null))) {
                    return this._iNTAKETableAdapter.Connection;
                }
                if (((this._wATLEVELTableAdapter != null) 
                            && (this._wATLEVELTableAdapter.Connection != null))) {
                    return this._wATLEVELTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._bOREHOLETableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._iNTAKETableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._wATLEVELTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(DataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._bOREHOLETableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.BOREHOLE.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._bOREHOLETableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._iNTAKETableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.INTAKE.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._iNTAKETableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._wATLEVELTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.WATLEVEL.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._wATLEVELTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(DataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._bOREHOLETableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.BOREHOLE.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._bOREHOLETableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._iNTAKETableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.INTAKE.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._iNTAKETableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._wATLEVELTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.WATLEVEL.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._wATLEVELTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(DataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._wATLEVELTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.WATLEVEL.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._wATLEVELTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._iNTAKETableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.INTAKE.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._iNTAKETableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._bOREHOLETableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.BOREHOLE.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._bOREHOLETableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(DataSet1 dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Closed) 
                        == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._bOREHOLETableAdapter != null)) {
                    revertConnections.Add(this._bOREHOLETableAdapter, this._bOREHOLETableAdapter.Connection);
                    this._bOREHOLETableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(workConnection));
                    this._bOREHOLETableAdapter.Transaction = ((global::System.Data.OleDb.OleDbTransaction)(workTransaction));
                    if (this._bOREHOLETableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._bOREHOLETableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._bOREHOLETableAdapter.Adapter);
                    }
                }
                if ((this._iNTAKETableAdapter != null)) {
                    revertConnections.Add(this._iNTAKETableAdapter, this._iNTAKETableAdapter.Connection);
                    this._iNTAKETableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(workConnection));
                    this._iNTAKETableAdapter.Transaction = ((global::System.Data.OleDb.OleDbTransaction)(workTransaction));
                    if (this._iNTAKETableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._iNTAKETableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._iNTAKETableAdapter.Adapter);
                    }
                }
                if ((this._wATLEVELTableAdapter != null)) {
                    revertConnections.Add(this._wATLEVELTableAdapter, this._wATLEVELTableAdapter.Connection);
                    this._wATLEVELTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(workConnection));
                    this._wATLEVELTableAdapter.Transaction = ((global::System.Data.OleDb.OleDbTransaction)(workTransaction));
                    if (this._wATLEVELTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._wATLEVELTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._wATLEVELTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._bOREHOLETableAdapter != null)) {
                    this._bOREHOLETableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(revertConnections[this._bOREHOLETableAdapter]));
                    this._bOREHOLETableAdapter.Transaction = null;
                }
                if ((this._iNTAKETableAdapter != null)) {
                    this._iNTAKETableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(revertConnections[this._iNTAKETableAdapter]));
                    this._iNTAKETableAdapter.Transaction = null;
                }
                if ((this._wATLEVELTableAdapter != null)) {
                    this._wATLEVELTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(revertConnections[this._wATLEVELTableAdapter]));
                    this._wATLEVELTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591