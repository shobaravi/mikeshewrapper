using System;
using System.Collections.Generic;
using DHI.Generic.MikeZero;

namespace MikeSheWrapper.InputFiles
{
  /// <summary>
  /// This is an autogenerated class. Do not edit. 
  /// If you want to add methods create a new partial class in another file
  /// </summary>
  public partial class PackagesOutput: PFSMapper
  {

    private PackageOutput_1 _packageOutput_1;
    private PackageOutput_1 _packageOutput_2;
    private PackageOutput_1 _packageOutput_3;
    private PackageOutput_1 _packageOutput_4;
    private PackageOutput_1 _packageOutput_5;
    private PackageOutput_1 _packageOutput_6;
    private PackageOutput_1 _packageOutput_7;
    private PackageOutput_1 _packageOutput_8;

    internal PackagesOutput(PFSSection Section)
    {
      _pfsHandle = Section;

      for (int i = 1; i <= Section.GetSectionsNo(); i++)
      {
        PFSSection sub = Section.GetSection(i);
        switch (sub.Name)
        {
        case "PackageOutput_1":
          _packageOutput_1 = new PackageOutput_1(sub);
          break;
        case "PackageOutput_2":
          _packageOutput_2 = new PackageOutput_1(sub);
          break;
        case "PackageOutput_3":
          _packageOutput_3 = new PackageOutput_1(sub);
          break;
        case "PackageOutput_4":
          _packageOutput_4 = new PackageOutput_1(sub);
          break;
        case "PackageOutput_5":
          _packageOutput_5 = new PackageOutput_1(sub);
          break;
        case "PackageOutput_6":
          _packageOutput_6 = new PackageOutput_1(sub);
          break;
        case "PackageOutput_7":
          _packageOutput_7 = new PackageOutput_1(sub);
          break;
        case "PackageOutput_8":
          _packageOutput_8 = new PackageOutput_1(sub);
          break;
          default:
            _unMappedSections.Add(sub.Name);
          break;
        }
      }
    }

    public PackageOutput_1 PackageOutput_1
    {
     get { return _packageOutput_1; }
    }

    public PackageOutput_1 PackageOutput_2
    {
     get { return _packageOutput_2; }
    }

    public PackageOutput_1 PackageOutput_3
    {
     get { return _packageOutput_3; }
    }

    public PackageOutput_1 PackageOutput_4
    {
     get { return _packageOutput_4; }
    }

    public PackageOutput_1 PackageOutput_5
    {
     get { return _packageOutput_5; }
    }

    public PackageOutput_1 PackageOutput_6
    {
     get { return _packageOutput_6; }
    }

    public PackageOutput_1 PackageOutput_7
    {
     get { return _packageOutput_7; }
    }

    public PackageOutput_1 PackageOutput_8
    {
     get { return _packageOutput_8; }
    }

    public int Touched
    {
      get
      {
        return _pfsHandle.GetKeyword("Touched", 1).GetParameter(1).ToInt();
      }
      set
      {
        _pfsHandle.GetKeyword("Touched", 1).GetParameter(1).Value = value;
      }
    }

    public int IsDataUsedInSetup
    {
      get
      {
        return _pfsHandle.GetKeyword("IsDataUsedInSetup", 1).GetParameter(1).ToInt();
      }
      set
      {
        _pfsHandle.GetKeyword("IsDataUsedInSetup", 1).GetParameter(1).Value = value;
      }
    }

    public int MzSEPfsListItemCount
    {
      get
      {
        return _pfsHandle.GetKeyword("MzSEPfsListItemCount", 1).GetParameter(1).ToInt();
      }
      set
      {
        _pfsHandle.GetKeyword("MzSEPfsListItemCount", 1).GetParameter(1).Value = value;
      }
    }

    public int NumberOfItems
    {
      get
      {
        return _pfsHandle.GetKeyword("NumberOfItems", 1).GetParameter(1).ToInt();
      }
      set
      {
        _pfsHandle.GetKeyword("NumberOfItems", 1).GetParameter(1).Value = value;
      }
    }

  }
}
