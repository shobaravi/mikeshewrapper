using System;
using System.Collections.Generic;
using DHI.Generic.MikeZero;

namespace MikeSheWrapper.InputFiles
{
  /// <summary>
  /// This is an autogenerated class. Do not edit. 
  /// If you want to add methods create a new partial class in another file
  /// </summary>
  public partial class GridSeriesOutput: PFSMapper
  {

    private Item_12 _item_2;
    private Item_12 _item_3;
    private Item_12 _item_4;
    private Item_12 _item_5;
    private Item_12 _item_6;
    private Item_12 _item_7;
    private Item_12 _item_8;
    private Item_12 _item_9;
    private Item_12 _item_10;
    private Item_12 _item_11;
    private Item_12 _item_13;
    private Item_12 _item_14;
    private Item_12 _item_15;
    private Item_12 _item_16;
    private Item_12 _item_17;
    private List<Item_12> _item_1s = new List<Item_12>();

    internal GridSeriesOutput(PFSSection Section)
    {
      _pfsHandle = Section;

      for (int i = 1; i <= Section.GetSectionsNo(); i++)
      {
        PFSSection sub = Section.GetSection(i);
        switch (sub.Name)
        {
        case "Item_2":
          _item_2 = new Item_12(sub);
          break;
        case "Item_3":
          _item_3 = new Item_12(sub);
          break;
        case "Item_4":
          _item_4 = new Item_12(sub);
          break;
        case "Item_5":
          _item_5 = new Item_12(sub);
          break;
        case "Item_6":
          _item_6 = new Item_12(sub);
          break;
        case "Item_7":
          _item_7 = new Item_12(sub);
          break;
        case "Item_8":
          _item_8 = new Item_12(sub);
          break;
        case "Item_9":
          _item_9 = new Item_12(sub);
          break;
        case "Item_10":
          _item_10 = new Item_12(sub);
          break;
        case "Item_11":
          _item_11 = new Item_12(sub);
          break;
        case "Item_13":
          _item_13 = new Item_12(sub);
          break;
        case "Item_14":
          _item_14 = new Item_12(sub);
          break;
        case "Item_15":
          _item_15 = new Item_12(sub);
          break;
        case "Item_16":
          _item_16 = new Item_12(sub);
          break;
        case "Item_17":
          _item_17 = new Item_12(sub);
          break;
          default:
            if (sub.Name.Substring(0,6).Equals("Item_1"))
            {
              _item_1s.Add(new Item_12(sub));
              break;
            }
            _unMappedSections.Add(sub.Name);
          break;
        }
      }
    }

    public Item_12 Item_2
    {
     get { return _item_2; }
    }

    public Item_12 Item_3
    {
     get { return _item_3; }
    }

    public Item_12 Item_4
    {
     get { return _item_4; }
    }

    public Item_12 Item_5
    {
     get { return _item_5; }
    }

    public Item_12 Item_6
    {
     get { return _item_6; }
    }

    public Item_12 Item_7
    {
     get { return _item_7; }
    }

    public Item_12 Item_8
    {
     get { return _item_8; }
    }

    public Item_12 Item_9
    {
     get { return _item_9; }
    }

    public Item_12 Item_10
    {
     get { return _item_10; }
    }

    public Item_12 Item_11
    {
     get { return _item_11; }
    }

    public Item_12 Item_13
    {
     get { return _item_13; }
    }

    public Item_12 Item_14
    {
     get { return _item_14; }
    }

    public Item_12 Item_15
    {
     get { return _item_15; }
    }

    public Item_12 Item_16
    {
     get { return _item_16; }
    }

    public Item_12 Item_17
    {
     get { return _item_17; }
    }

    public List<Item_12> Item_1s
   {
     get { return _item_1s; }
    }

    public int Touched
    {
      get
      {
        return _pfsHandle.GetKeyword("Touched", 1).GetParameter(1).ToInt();
      }
      set
      {
        _pfsHandle.GetKeyword("Touched", 1).GetParameter(1).Value = value;
      }
    }

    public int IsDataUsedInSetup
    {
      get
      {
        return _pfsHandle.GetKeyword("IsDataUsedInSetup", 1).GetParameter(1).ToInt();
      }
      set
      {
        _pfsHandle.GetKeyword("IsDataUsedInSetup", 1).GetParameter(1).Value = value;
      }
    }

    public int MzSEPfsListItemCount
    {
      get
      {
        return _pfsHandle.GetKeyword("MzSEPfsListItemCount", 1).GetParameter(1).ToInt();
      }
      set
      {
        _pfsHandle.GetKeyword("MzSEPfsListItemCount", 1).GetParameter(1).Value = value;
      }
    }

    public int NumberOfItems
    {
      get
      {
        return _pfsHandle.GetKeyword("NumberOfItems", 1).GetParameter(1).ToInt();
      }
      set
      {
        _pfsHandle.GetKeyword("NumberOfItems", 1).GetParameter(1).Value = value;
      }
    }

  }
}
